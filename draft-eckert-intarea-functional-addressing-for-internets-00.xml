<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.4.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="draft-eckert-intarea-functional-addressing-for-internets-00" category="info">

  <front>
    <title abbrev="fa-inas">Functional Addressing (FA) for internets with Independent Network Address Spaces (IINAS)</title>

    <author initials="T." surname="Eckert" fullname="Toerless Eckert">
      <organization>Futurewei Technologies USA</organization>
      <address>
        <email>tte@cs.fau.de</email>
      </address>
    </author>

    <date year="2021" month="July" day="12"/>

    
    <workgroup>INTAREA</workgroup>
    

    <abstract>


<t>Recent work has raised interest in exploring network layer addressing that is
more flexible than fixed-length addressing as used in IPv4 (32 bit) and IPv6 (128 bit).</t>

<t>Reasons for the interest include both support for multiple and potentially novel
address semantics of, but also optimizations of addressing for existing
semantics such as unicast tailored not for the global Internet 
but to better support private networks and limited domains.</t>

<t>This memo explores in the view of the author yet little explored reasons for more flexible addresses
namely the problems and opportunities for Internetworking with Independent Network Address Spaces (IINAS).</t>

<t>To better enable such internetworks, this memo proposes a framework for a Functional Addressing model.
This model also intends to support several other addressing model goals including programmability
and multi-semantics.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<section anchor="overview" title="Overview">

<t>Recent work has examined the value of more flexible than fixed-length addressing
used in IPv4 (32 bit) and IPv6 (128 bit), see for example <xref target="I-D.jia-intarea-scenarios-problems-addressing"/>,
an <xref target="I-D.jia-flex-ip-address-structure"/>.</t>

<t>Reasons for this interest include both support for multiple and potentially novel
address semantics, see for example <xref target="I-D.king-irtf-semantic-routing-survey"/>
and <xref target="I-D.king-irtf-challenges-in-routing"/>, but also optimizations of addressing for existing
semantics, such as unicast, that are tailored not for the global Internet 
but to better support private networks and limited domains (<xref target="RFC8799"/>).</t>

<t>This memo describes one, in the view of the author yet little explored reason for more flexible addresses
namely the problems and opportunities for Internetworking with Independent Network Address Spaces (IINAS).</t>

<t>To better enable such internetworks, this memo proposes a framework for a Functional Addressing model.
This model also intends to support several other addressing model goals including programmability.</t>

<t>This memo calls the addressing model functional, because addresses can be seen as a structure of
func1{parameter(s),func2{parameter(s),..i.funcN{parameter(s)}}}.</t>

</section>
<section anchor="disclaimer" title="Disclaimer">

<t>Any proposals made by this document are explicitly for the purpose of presenting
example options of realizing concepts introduced in the memo. There is no intent
for any proposals in this document to directly become anything more than just experimental
implementations for proof of concept purposes. Equally so or even more so, readers are
welcome to pick up any subset of ideas from this memo that they are interested in and reuse it in
other designs.</t>

</section>
</section>
<section anchor="challenges" title="Challenges">

<t>This section discusses example challenges that gave rise to the proposal in
this document. It explores in more detail the core challenge not well
explored elsewhere and summarize the others.</t>

<section anchor="high-level-observations" title="High level observations">

<t>There are three core challenges we can observe that limit the ability
to build more varied internetworking solutions for non-solely Internet
use-cases with especially IPv6:</t>

<t><list style="symbols">
  <t>Fixed size address space: IPv4/IPv6 address space is fixed length, not allowing to adopt address length
to shorter or longer demands. While it is possible to add more addressing
via extension headers, there is no option to not send, or shorten the
IPv4/IPv6 base header addresses, when they are not required.
While the reasons for fixed size addressing in IPv4/IPv6 can be understood
for the feasible high-speed, low-cost forwarders of the 1900th, when IPv6
was conceived, these reasons are today as obsolete as ATM cells where by
the end of the 1990th when both hardware forwarding and
mathematical models allowed to provide all ATM type QoS with variable sized packets.</t>
  <t>The Internet as the primary, if not only use-case driving the design:
The address space semantics provided especially by IPv6 is very much focused
on the one use-case that drove the development of IPv6: The Internet. While it
was and will continue to be an important and sufficient reason for IPv6, it
is not sufficient in the opinion of the author for the much broader use of IPv6.
As of today, a likely overwhelming number of hosts using TCP/IP(v6) protocol
stacks are not “on the Internet” and the majority likely is not even 
“connected to the Internet”, but instead part of limited domains. This
even includes many routers in large service providers that are used to service
Internet traffic. Routers in these networks are only in networks that may
be called an “underlay” limited domain networks using MPLS, SR-MPLS or SRv6 and
Internet traffic is tunneled across them. When the network design is secure,
those routers are neither “on” the internet nor “connect to” the Internet.</t>
  <t>Transparent end-to-end addressing at the core of the IP/IPv6 protocol design, but an ever
more diverse reality breaking that design for good reasons: The current core principle
of IPv4 and IP6 is that forwarders have to be passing network layer (IPv4/IPv6) addresses
transparently and are not allowed to touch/modifying
them. This is the core behavior to support primarily the Internet use case. Yet,
the IPv4 Internet today would not work without NAT, and arguably, the same may
also happen to the IPv6 Internet, especially when networks attaching to inexpensive
Internet offerings want to avoid local renumbering in multihoming and/or
change of providers via NAT. Even more so, interconnecting IPv4 and IPv6
networks has resulted in no fewer than 24 IPv4/IPv6 NAT solutions
(see https://en.wikipedia.org/wiki/IPv6_transition_mechanism), giving rise to
the question if and how on-path processing of addressing can be proactively
become part of future addressing designs to support more flexible internetworking - 
translating the best of past NAT experience into better future designs.</t>
</list></t>

</section>
<section anchor="internetworking-limited-domain-networks-with-ip-addressing" title="Internetworking limited domain networks with IP addressing">

<t>One of the core challenges of the existing IP(v4) and IPv6 addressing model are the
addressing they provide for private networks with or without connectivity to the
Internet, which are also called limited domain networks <xref target="RFC8799"/>.</t>

<t>One reference example is that of networking inside a particular product/solution and
then compositing this product with other products, probably even multiple times,
hierarchical, as show in picture <xref target="FIG-network"/>. Similar issues and solutions
can be found in networks with multiple layers of NAT such as Home networks
that are dorm rooms connected via NAT to a dorm network, connected via
another NAT to a campus network, connected via yet another NAT to maybe
finally, te Internet. Similarly in equally complex federated private networks.</t>

<t>In pre-IP industrial networks, individual products where hiding their
interior elements by some (combination) of elements that controlled
the interior behavior completely and provided only an abstracted view
of the machinery to the outside.</t>

<t>With the introduction of IP networking into these type of solutions,
the ability for gateways to become IP routers and providing connectivity
into the machinery throughout the larger internetwork opened up many
important improvements, but of course also challenges, especially
for security.</t>

<t>Benefits of network layer internetwork connectivity includes
options such as control loops that can more easily be built
across multiple components/levels of the hierarchy and controllers
that can be pulled out of machinery and positioned elsewhere in the
network, enabling virtualization and resource multiplexing. Multiple
independently running control systems can be implemented in parallel
including solutions like device vendor preventive maintenance telemetry,
operator managed firmware update or third-part orchestrated security
audits or intrusion detection/prevention, just to name a few.</t>

<t>With IP connectivity, all this can be built without the need of understanding
how to get through various layers of fixed-functionality higher-than-network
layer gateways that an not be extended by third parties, but instead just
requiring end-to-end IP connectivity - plus of course an appropriate set of
security measures.</t>

<figure title="Example hierarchical composed internetwork" anchor="FIG-network"><artwork><![CDATA[
+-------------------------------------------------------------------+
|                               Controller / Gateway->Router        |
|   ...                                  |                          |
|                                --+-----+----------++..++---+----  |
|                                  |                         |      |
|+---------------------------------+----------------+    +---+-----+|
||                                 |                | .. | System 5||
||                  Controller / Gateway->Router    |    +---------+|
||                                 |                |               |
||            -----+---------------+-+..+----+----- |               |
||                 |                         |      |               |
||+----------------+--------------+    +-----+-----+|               |
|||                |              | .. | Machine 6 ||               |
|||             Gateway->Router   |    +-----------+|               |
|||            controller         |                 |               |
|||                |              |                 |               |
||| --+--------+---+--+------+--- |                 |               |
|||   |        |      |      |    |                 |               |
||| actor1 sensor1 actor2 sensor2 |                 |               |
|||                               |                 |               |
|||   Machine 1                   |                 |               |
||+-------------------------------+                 |               |
||  System1                                         |               |
|+--------------------------------------------------+               |
|  Installation 1                                                   |
+-------------------------------------------------------------------+
]]></artwork></figure>

<t>In the opinion of the author of this memo, the most easily adopted
addressing architecture in these type of solutions today is also the
one most widely used: IPv4 with <xref target="RFC1918"/> addresses. These addresses
are actually owned permanently for each deployment case - as long as
the scope of addressing is well defined.</t>

<t>In result, a common scheme of addressing in machinery such as the one
shown in XXX is to reuse the same 10.0.0.0/8 or 192.168.0.0/16 addresses
for every instance of a product/machinery manufactured. In the example,
actor1 could use 10.0.0.1, sensor1 10.0.0.2 and so on. But equally,
if Machine 3 was the same or similar, its internal components would
share the same machinery.</t>

<t>To allow composing those type of machineries,
the router/switch connecting to the outside/next-level in a hierarchy
will need simple NATing function for example statically mapping
the 10.0.0.x on the inside to 10.0.1.x on the outside for Machine 1,
where the same router/switch for Machine 3 would be configured
to NAT from 10.0.0.x to 10.0.3.x. And likewise at the next layer
of hierarchy, 10.0.y.x could be mapped to 10.z.y.x with a different
y for every instance.</t>

<t>In support of solutions like this, many if not most industrial ethernet
switches deployable as machinery gateways do therefore support this
type of static NAT mappings. Likewise, common practices in industries
rely on these addressing with composition via NAT approaches, including
machineries as large as in transportation individual train cars to name
one example.</t>

<t>The desire to avoid NAT in IPv6 and availability of sufficient addressing
space lead to replacing the concept of <xref target="RFC1918"/> in IPv4 with the concept
of Unique Local Addresses (ULA) in IPv6, standardized in <xref target="RFC4193"/>.
Instead of the few scoped prefixes of <xref target="RFC1918"/>, ULA provide for
2^40 different prefixes, and the design guidelines are simple: pick a random
prefix and then you can interconnect your networks later on with
a very low probability of address prefix collision/reuse.</t>

<t>Unfortunately, low probabilities of address collision is not a good
design principle for most of these type of environments because there
is really no good operational solution what do if such collision
occurs, and rare errors are also very hard to build resilient solutions
for. Also the probabilities begin to become much more likely when looking
at a much larger set of addresses, such as when wanting to networks with
thousands of instances of a product (like a train car).</t>

<t>In result, ULA is not very persuasive for many such deployments, especially
when the alternative with IPv4 is address prefix mapping as required for
NAT, which is mostly a free provisioning side effect of setting up the
required connectivity via permit lists via network/transport
filters. The need to automate such in-network filtering to secure
such deployments can also be seen in the advent of MUD, <xref target="RFC8520"/>.</t>

<t>If one considers that most of these networks will have less than
253 hosts connected to it, then the IPv6 ULA solution does also not
provide for any more bits than the 16 bits of z.y in the above example
using IPv4 10.z.y.x with x being the host part. For hosts, the
lower 64 bits of an IPv6 address can easily only be used for the
host part, the whole ULA prefix is 48 bits, leaving just 16 bit. Plus
a significant packet header overhead plus fewer availability of
NAT in IPv6 products because it is assumed to be less required, plus the
insufficiency of “low likelihood of collisions” when attempting to
avoid NAT.</t>

<t>Vendors of equipment that have assigned Provider Independent IPv6 address space 
could of course allocate addressing from that space for equipment they
manufacture or integrate, whether it is globally unique or “generic”, e.g.: reused
across every instance of a product and hence requiring NAT. Unfortunately,
and unlike ethernet, where one actually does own addresses after buying a
OUI, assigned IPv6 addressing is not permanent, and even though
revocation of address allocation is not standard practice, standardized
solutions for global IPv6 address space (like IPv4 global address space) really needs
to provide the ability for those addresses to be returnable.</t>

<t>Even though in hindsight, the hierarchical address allocation from the
available 16 bits in 10.x.y.z for two layers of interconnections
in the above example looks obvious and simple,
in many cases the creation of multiple hierarchies is only an afterthought
and the fixed address length and prior suboptimal assignment of addressing in a
deployment will cause the need for a lot of re-addressing. This
is a recurring problem in larger enterprise/commercial networks
under unplanned growth or mergers &amp; acquisitions, especially of course in IPv4.
Likewise, once the 16 available bits in the above described NAT approach
are used up, whether it is IPv4 or IPv6 with ULA, no further extensions
of the design are possible.</t>

</section>
<section anchor="shorter-addresses" title="Shorter addresses">

<t>As has been noted in prior memos, shorter addresses than IPv6 128 bit
are highly desirable in private networks / limited domains whenever
it is clear that the total required addressing space is much smaller and
connectivity to e.g.: The Internet is not required.  Evidence of such requirements
can be found for example in header compression for specific IoT networks such
as <xref target="RFC6282"/>.</t>

</section>
<section anchor="additional-semantics" title="Additional semantics">

<t>New semantics can only be introduced into existing IPv4/IPv6 when their
required address size fits nicely into the 32 or 128 bit address space.
This section does not aim to be complete, see <xref target="I-D.king-irtf-semantic-routing-survey"/>
for a broader survey. Instead it will provide additional levels of details
for the benefits of fittingly sized addresses for few example cases the
author is familiar with.</t>

<t>For IP Multicast this was the case in IPv4, and the additional bits of
IPv6 addresses even allowed to encode additional IP multicast functionality
through additional fields in IPv6 addresses, simplifying and improving
IPv6 for IP multicast extremely over prior IPv4 best practices: 
Scope address field <xref target="RFC4291"/>, SSM addresses <xref target="RFC4607"/>, Unicast
prefix multicast addresses <xref target="RFC3306"/> and embedded-RP <xref target="RFC3956"/>.
Nevertheless, especially embedded-RP could have benefitted from even
longer addresses because with the 128 bits available the solution had
to take a hit in the complexity of deployment, specifically in so
far that it required engineering of the unicast address of an RP to
be very short.</t>

<t>In contrast, Bit Indexed Explicit Replication (BIER) which started
in the IETF in 2014 and resulted in the architecture <xref target="RFC8279"/>
did not have the option to integrate into IP/IPv6 because it required
addresses sizes of at least per-network configurable size from 64 to 496 bit
plus additional qualifiers of maybe 16 bits (so-called SD, SI address
qualifiers). This made it necessary for BIER to (re-!)invent its own
network layer packet header, <xref target="RFC8296"/> which duplicates pretty much
all packet header fields of MPLS and IP packets plus additional BIER
header fields, so it could be used in both MPLS and non-MPLS networks.</t>

<t>Similar arguments about the limited size of IPv6 address could likely
be made for ICN/CCN network semantics because the semantic of their
 addresses is that of data items such as time slices of specific
spatial and temporal resolutions of some media such as an audio/video
recording - and those name spaces would ideally have address as long
as URLs.</t>

</section>
<section anchor="programmability" title="Programmability">

<t>Segment Routing via IPv6 (SRv6) introduced with <xref target="RFC8986"/> and <xref target="RFC8754"/>
(SRH) and architecture in which source routing with IPv6 is combined with
encoding of additional source-routing hop packet processing options
encoded in the source-routing hop IPv6 address. This is a very
flexible and theoretically extensible concept but very much limited
by the fixed address length design of IPv6. In most cases the bits
reserved for this additional packet processing (called “programmability”)
are not required, but when they are required there may even be too few
bits available. Variable length addresses allowing for variable long
programming bits would in the opinion of the author of this memo be
highly beneficial.</t>

<t>One evidence for the programmability bits seen as wasteful in many
cases is a variety of currently proposed drafts to provide more
compressed source routing options for SRv6 (as of mid 2021).</t>

</section>
</section>
<section anchor="fa-iinas-functional-addressing-fa-for-internetworking-with-independent-network-address-spaces-iinas" title="FA-IINAS: Functional Addressing (FA) for Internetworking with Independent Network Address Spaces (IINAS)">

<t>This section outlines an addressing design that attempts to solve the above
described challenges and calls it tentatively FA-IINAS. Functional Addressing
refers to the design aspect that addresses in this design can be interpreted
as functions with parameters.</t>

<t>Notwithstanding other granularities or options, this document assumes that
addresses are textually represented in hexadecimal and that he minimum structure
element of an address is 4 bit so that the different structural elements of
an address can simply be shown as concatenation of hex digits. The “.”
character is inserted optionally to show where in an address one semantic
part ends and another starts.</t>

<t>Like in IPv6 IoT networks, such as those using RPL (<xref target="RFC6550"/>) as their routing
protocol, this memo starts by assuming all nodes are routers and that addresses
are predominantly node addresses as opposed to IP/IPv6, which defines unicast
addresses to be interface addresses. This is but an academic differentiation, 
because node addresses can also be represented as interface addresses of
so-called “loopback” interfaces. “.” characters are used to emphasize</t>

<t>A network in this design is an independent address space, not shared with
other networks of theoretically unlimited long addresses that is mapped onto a graph of
transitively connected nodes. These nodes form the network. Practical limits to
address length are subject to acceptable packetization.</t>

<t>Each node is assigned one or more node prefixes from the networks address space and
none of these node prefixes can be overlapping. In other words, no assigned nodeprefix
can be a prefix of another assigned nodeprefix. This rule ensures that every node
“owns” any address equal or longer to its assigned nodeprefix. Allocation of
node prefixes is currently out of scope for this memo but could rely on any
well-known methods including manual operator assigned or as initially described
in this document assigned by manufacturer/vendor.</t>

<t>Routing in a network is assumed to enable forwarding across the graph of the
network to the node owning the nodeprefix of the address.</t>

<t>Given variable long addresses, the first observation of this addressing
scheme is that it allows to combine short addresses with extensibility.</t>

<t>In a simple example the first 200 nodes are assigned addresses 01 … c8,
at which point in time the network operator gets worried about growth exceeding
the 256 mark and starts to assign longer addresses: c90 … f000, at which
point in time ever increasing success might cause assignment of even
longer prefixes.</t>

<t>Addresses longer than the assigned “nodeprefix” are used to instantiate
a specific function on the node itself. A generic representation of
an address could be nodeprefix.function.{parameter}.</t>

<section anchor="dispose-function" title="Dispose Function">

<t>When using a single digit function field, function = 0 could for example be 
“dispose” to decapsulate the packets payload and deliver it to the host stack.
Parameter could for example be the next-protocol value, eliminating the need to
have a separate packet header field for this parameter.</t>

<t>While not being the same
crucial issue as for the node prefixes themselves, putting the next-protocol into the
address makes it extensible too, so one would  not run out of a 256 space
as IPv4/IPv6 might do at some point.</t>

</section>
<section anchor="steering-function" title="Steering Function">

<t>More interestingly, command = 1 could be a “steer” command and the parameter
is another address. To act on the command, the node would strip the nodeprefix
and command part of the address and forward it based on the address parameter.
For example node 73 (e.g.: node with nodeprefix 73) receives a packet with destination
address 73.1.55.1.33.0. It forwards the same packet with the stripped destination
address 55.1.33.0 to node 55, which likewise forwards the packet with stripped
destination address 33.0 to node 33, which ultimately receives it.</t>

</section>
<section anchor="multiple-semantics" title="Multiple semantics">

<t>To introduce additional semantics into a network, such as for example multicasting,
we need to generalize how to interpret the first part of the address, which so
far was only interpreted to be a nodeprefix.</t>

<figure anchor="FIG-semantic1"><artwork><![CDATA[
address = prefix{.nodefunction{.nodefunction-parameters}}
prefix = semantic{.semantic-parameters}

semantic / = unicast-forward 

unicast-forward = &lt;set of prefixes>
unicast-forward-parameters = node-prefix

semantic /= multicast-forward
multicast-forward = &lt;set of prefixes>
multicast-forward-parameters = multicast-group
]]></artwork></figure>

<t>In other words, the prefix at the start of the address is composed of a semantic
and its parameter, and the case discussed so far is simply the unicast-forward
semantic followed by a node-prefix parameter.</t>

<t>Again, semantic can be an arbitrarily long or short prefix, but no semantic
can be a prefix of another semantic.</t>

<t>In a practical example, this scheme is easily applied to existing
IPv4 / IPv6 address spaces. For IPv4:</t>

<figure anchor="FIG-semantic2"><artwork><![CDATA[
unicast-forward = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | A | B | C | D
multicast-forward = E
]]></artwork></figure>

<t>In other words, because IP multicast uses addresses 224.0.0.0/4, its
non-overlapping semantic prefix is E, and IPv4 unicast addresses
use the non-overlapping prefixes 0…D. Assume further that a node
in the network had assigned prefix 10.0.0.0/24, then this would
translate in our scheme into:</t>

<figure anchor="FIG-semantic3"><artwork><![CDATA[
0.A0000.XX
]]></artwork></figure>

<t>When a node processes this address, the 4-bit prefix 0 indicates that
the following prefix has to be looked up in unicast forwarding. This
prefix is A0000. Once the packet is delivered to the node, he remaining
8 bit XX can accordingly be interpreted by the node as a nodefunction
with parameters.</t>

<t>Likewise, an address 239.1.2.3 would translate into E.F010203, so the
first 4-bit E value would indicate that multicast forwarding needs to
be applied to the rest of the address, and with IP Multicast forwarding
not having further structure (ignoring willfully for simplicity of the
example that it does, for example with SSM), all the remainder of the
IPv4 address is the multicast-group</t>

<t>In summary, the logic does really only generalize what routers today
already do when they do prefix lookups, except for the following
core differences:</t>

<t><list style="symbols">
  <t>In IPv4/IPv6, the address semantic is hard-coded by IETF standards.
In FA-IINAS they are definable by every network.</t>
  <t>In IPv4/IPv6, there is no notion of nodefunction{.nodefunction-parameters},
only SRv6 has this concept.</t>
</list></t>

<t>In actual IPv4/IPv6 hardware forwarding lookups, one would not
do one lookup for the semantic, followed by another lookup for
the semantic-parameters for the case of unicast-forward, instead
this would be flattened. The same type of flattening would of
course be useable in FA-IINAS. Whether or how flattening or
other optimizations are feasible for other semantics such as multicast
is of course highly semantic and node implementation specific.</t>

</section>
<section anchor="internetworking-function" title="Internetworking Function">

<figure title="Internetworking example" anchor="FIG-internetworking"><artwork><![CDATA[
................................
.  Network1                    .
.                R1            .
.        R2      21      R3    .
.        23              23    .
.    R4              R5        .
.    24              25        .
.    ||2.2       2.2//\\2.3    .
.....||............//..\\.......
     ||           //    \\
.....||..........//.  ...\\........
.    ||2.1   2.1// .  .2.2\\2.1   .
.    R4        R5==========R5     .
.    14        15  .  .    15     .
. R6       R7      .  .       R10 .
. 26       27      .  .       21  .
.                 .  .            .
. Network2       .  .  Network3   .
.               .  .              .
.    R9        .  .     R8        .
.    21       .  .      23        .
. 2.4||      .   .  2.4//\\2.5    .
.....||.......   .....//..\\.......      
     ||              //    \\
     ||             //      \\
.....||............//. ......\\....
.    ||2.1     2.3// . .   2.3\\  .
.    R11        R8============R8  .
.    11        12 2.5. .   2.4 11 .
.          R12       . .          .
.          12        . .  R13     .
.                    . .  13      .
.                    . .          .
. Network4           . . Network5 .
...................... ............
]]></artwork></figure>

<t><xref target="FIG-internetworking"/> shows an example internetworking
topology of 5 networks, each with its own independent
address space. Globally unique Rxx numbers are used to refer
to routers. An edge node is a router that has prefixes
from two or more networks into which it connects. In
the example, R4 connects into Network1 with prefix 24
and into Network2 with Prefix 14. Likewise, R8 connects
into Network3 with prefix 23, into Network4 with prefix 12
and into Network5 with prefix 11. An edge node can be
a router simply with different interface into different
networks, or it can be decomposed into multiple devices,
each in a separate network. In this section we describe
behavior as if it was a single device.</t>

<t>For an edge node to pass a network into a separate network,
the internetworking function on the node has to be called.
In the example, this function is value 2 on all edge nodes, and
the first parameter is an identifier of local relevance for the
network into which to pass the packet. In actual deployment,
this function number can of course be locally significant to
the Network and/or even each edge router, assuming appropriate
control plane to assign the number to this function.</t>

<t>Assume R12 (12) in Network4 wants to send a packet to
R1 (21) in Network1. To send it R12-&gt;R8-&gt;R5-&gt;R1, R12
would have to use a destination address of 12.2.3.15.2.1.21.0,
or numerically without separators 0x12231521210.
12 will route the packet in Network4 towards R8. .2 indicates
to R8 that it should invoke the interworking function and
pass the packet into Network 3. As part of the interworking
function, R8 then strips all the address prefix it has
processed so far from the destination address, leaving 15.2.1.21.0.
R8 then forwards the packet with this destination address into 
Network 3, where it will be received by R5, which again
invokes the interworking function due to .2, forwarding the
packet into Network1, stripping 15.2.1.0 from the destination
address and forwarding the packet with destination address 21.0
into Network1, where it will finally be received by R1 which passes
the packet to its host stack because of dispose function 0.</t>

<t>To allow for a return path, each edge node could equally
but inversely process the source address: When R12 sends the
packet, it would indicate a source address of 12.0. When R8
passes the packet via its interworking function into Network3,
it would prepend its return path interworking function address,
making the source address 23.2.4.12.0, where 23 is R8 address prefix
in Network3 and 2.4 internetworking function to return the packet into
Network4. Likewise, when R5 processes the packet by its
interworking function, it would prepend its return path address
element to the source address, before sending the packet into
Network1, making the source address 25.2.3.23.2.4.12.0. This
is then the address to which R1 could send return packets,
and likewise, on its way towards R1, the address, for example
when travelling via Network3 always has a returnable source
address.</t>

<t>In one simple flattened forwarding plane option, the
interworking function is a simple prefix lookup such as
1213/16 on R8, followed by stripping that prefix from the
destination address and prepending another prefix,
2314 to the source address before forwarding the packet
into the destination network.</t>

<t>With this behavior of the interworking function, it is obvious,
that address management of networks would want to keep a
sufficiently large number of very short prefixes, such as
those in this example or even shorter to address
the interworking function in a sufficiently larger number
of edge routers so that a complete internetwork path address
will not become too long to exceed the maximum address lengths.</t>

</section>
<section anchor="control-plane" title="Control Plane">

<t>This section reviews a range of control plane considerations necessary
to build a working solution out of the functional addressing. In short,
what is required for functions to be flexibly configurable and
extensible in the network, it requires a control plane that in its
principles is very much based on what was learned in MPLS.</t>

<section anchor="unicast-routing" title="Unicast routing">

<t>FA-IINAS expects a control plane that supports routing for unicast-forward
parameters (address prefixes) in the same way as it is done today
for IPv4/IP6. Except that it would be for address prefixes
(multicast-forward-parameter) of different length and not limited to
just 32/128 bits as in IPv4/IPv6.</t>

<t>In addition, FA-IINAS needs control-plane functions that allow
defining the semantics and their prefixes, like the above example
of 0…D for IPv4 style unicast-forwarding semantic and D for
IPv4 style multicast-forwarding semantic.</t>

<t>One of the core challenges for this control plane function is
that inconsistency between nodes can have significant different
negative impacts than the today accepted “eventual consistency”
in IPv4/IPv6 unicast routing that is achieved by the most widely
deployed unicast forwarding control planes: distributed routing
protocols (IGP/BGP).</t>

<t>The degree of concerns will highly depend on the actual new
issues that could happen in the face of inconsistencies, and this
can only be vetted with a given set of semantics.</t>

<t>In a most simple example, semantics may simple be configurable
via a management plane, and such an approach can be 
pre-staged, pre-configured, validated network devices, such
as in industrial or embedded environments.</t>

<t>In the case of a most flexible, agile type of network, control
plane mechanisms would have to be extended to support strong
consistency models, for example through node-to-node security
associations coupled with a strong consistency
network-wide-core-config mechanism. Such mechanisms could
in the opinion of the author easily be built on the framework
provided by <xref target="RFC8994"/> which provides these hop-by-hop
security associations and inband control plane infrastructure,
coupled with <xref target="RFC8990"/> as the protocol to negotiate the 
configuration with strong consistency.</t>

</section>
<section anchor="naming" title="Naming">

<section anchor="intra-network-naming" title="Intra network naming">

<t>In FA-IINAS, nodes are acting as routers, and the addresses described are
assigned to them persistently. This eliminates in many cases, especially
when the network is primarily for m2m communications the need for 
DNS names, because effectively the address of a node is its persistent name.</t>

<t>In networks small enough, e.g.: maybe &lt;= 20,000 nodes, the very same
argument can also apply to nodes that are hosts, e.g. without the
need to support full routing/FA-IINAS operations, but still having
a persistent address assigned that is routed in the networks routing
protocol.</t>

<t>If indeed there is a need to use DNS or other naming schemes, then this
is no different than applying naming with DNS to today’s <xref target="RFC1918"/>
addresses.</t>

</section>
<section anchor="simple-inter-network-naming" title="Simple inter network naming">

<t>The need to support (DNS) names is equally lower in interconnected FA-IINAS
networks assuming the intra network naming arguments outlined before apply
to the interconnected networks.</t>

<t>Because an address in a different FA-IINAS network is dependent on the
path from/to its corresponding peer, it is of course not sufficient
to simply have a global internetwork name to address mapping.</t>

<t>One of the likely oldest solutions is to align name resolution
with packet forwarding so that the very same edge nodes between
two networks that do translate addresses can accordingly also
translate their name resolution. This was productized and fairly widely
deployed as early as the late 1990th for IPv4 with rfc1918 addresses,
see for example <xref target="CiscoNAT"/>.</t>

<t>This type of solutions relies on well-known routing policies such
as simple hierarchical routing though and are not generic for
arbitrary topologies.</t>

</section>
</section>
<section anchor="routing" title="Routing">

<section anchor="with-internetwork-topology-knowledge" title="With internetwork topology knowledge">

<t>When FA-IINAS networks are connected in an arbitrary topology
instead of a simple hierarchy, the fundamental problem is that
of constructing the address of a target peer as a path
through a set of appropriate network edge nodes in the address,
followed by the nodes address within its network.</t>

<t>In many interconnected FA-IINAS networks, one can assume to have
systems that can do this, such as in an industrial setting where
a global view of the topology of networks exists and a PCE/SDN-controller
will choose the path and can accordingly calculate also the addresses
from the path.</t>

</section>
<section anchor="with-internetwork-naming-knowledge" title="With internetwork naming knowledge">

<t>A decentralized solution can be built by relying on a 
combination of naming and internetwork routing.</t>

<t>Every network (name space) is assigned a globally unique identifier.
This identifier is only used in the control-plane, so it should be
reasonably easy to have a set of construction mechanisms allowing
everyone to easily create its own namespace, such as for example
from some owned location (street address) and/or other owned
names/identifier.</t>

<t>When a global naming system like DNS then exists, an FA-IINAS
address is the combination of FA-IINAS network identifier and
address within that network.</t>

<t>Across the interconnected FA-IINAS networks, the edge-routers
would operate extended versions of a protocol like BGP through
which any party can calculate desired paths. The extensions
would include the FA-IINAS network identifiers and address prefix
mapping rules of the edge-nodes, thereby allowing to also
calculate addresses from FA-IINAS network identifiers and address.</t>

<t>When large number of small networks (such as users homes) connect
to larger networks (such as an ISP), those ISP would be concerned
of having to propagate millions of small FA-IINAS network mappings
into BGP. This is not done today with IPv4/IPv6, and it would
not scale any better with FA-IINAS. Instead, the fact that
the home network would be reachable with one or more ISP could
be done by also creating naming system mappings from the
home networks identifier to the identifier and address prefix
mappings of the ISP to which the home network is connected.</t>

<t>When a peer looks up a name and retrieves an FA-IINAS address
but cannot find the FA-IINAS network identifier in its internetwork
routing information, it can instead resolve it to the “next higher up”
ISP FA-IINAS network-identifier/prefix - and recurse this until it
has routing information.</t>

<t>Likewise, when a peer does not have any routing information
(because it does not participate in internet routing information),
it has to forward the appropriate resolution request hierarchically
upward.</t>

<t>In summary, it would be architecturally “easy” to extend DNS and
BGP with the necessary extensions to resolve names to FA-IINAS
addresses and construct relative FA-IINAS addresses from this
information.</t>

</section>
</section>
<section anchor="routing-policies" title="Routing policies">

<t>Note that this “easy” part does not include the possible desire
to be more or less flexible in path selection. Whereas today,
packets, once they enter “the Internet” are not under steering
control of the sender but under “hop by hop hot-potato steering”
control of the ISP, with FA-IINAS this may be different - or the
same. If a sender then constructed an FA-IINAS address implying
an internetwork path that was not desirable for this traffic by
the indicated transit networks, this would cause an error. Therefore,
the above outlined procedures hinted at relying on the internetwork
routing information whenever available and only resort to using
naming system to fill in the additional (edge) information.</t>

<t>Today it is becoming more common to use alternative than
“native Internet” paths by steering traffic across
virtual/container routers in cloud DC, many of which have ample
and underutilized international connectivity. However, additional
charges for compute and forwarding will apply. These type
of high-overhead solutions could be replaced by FA-IINAS
to steer traffic across such additional networks and without
the need to instantiate VM/containers.  It would require
appropriate and lightweight identity and accounting forwarding
plane packet header information so that those additional
charges could be applied.</t>

</section>
</section>
<section anchor="hardware-considerations" title="Hardware considerations">

<section anchor="forwarding-plane-complexity" title="Forwarding plane complexity">

<t>Forwarding of FA-IINAS packets based on destination address
is the same type of prefix lookup on the destination address
as it is today in IPv4/IPv6, except that the maximum lookup
prefix can be shorter or longer, this is detailed in the
next section.</t>

<t>The steering function should have a lookup complexity whose
complexity is in the order of SR-MPLS or even simpler.
It can constitute of a prefix lookup in the same forwarding
table as non-steered forwarding, but the adjacency would then
have to strip the looked up prefix from the destination address
(comparable to MPLS label pop) and forward the packet again
based on the remainder of the destination address - unless
additional on-node service functions have to be invoked.</t>

<t>The interworking function is very much like the steering
function, but it also prepends a return prefix to the source
address field, making it the most expensive forwarding plane
operation.</t>

<t>In general, the author assumes that packet processing that
strips a prefix from the destination address and optionally
adds a prefix to the source address is well feasible in next
generation, highest-speed, lowest-cost forwarding engines.</t>

<t>Optimizations beyond this are possible but would break
the independent address allocation across networks. For example,
if it is possible for an edge node to have the same prefix
length across the networks it connects to, and source
address follows destination address in the packet encoding,
then stripping the destination address could be achieved
by shifting the destination address in a contiguous packet buffer,
making head for the source address prefix to be prepended to the
following source address field.</t>

</section>
<section anchor="optimizing-for-smaller-networks" title="Optimizing for smaller networks">

<t>One of the benefits of FI-IINAS is that it allows to adopt the
address space size based on the requirements of networks and
therefore also allows to optimize hardware known to be built/sold
only into limited size networks, such as many industrial and
almost all embedded networks.</t>

<t>For example, low-cost, high-speed hardware forwarding might be
possible to design less expensive with just 16 bit lookups
instead of for up to 128 bit lookups, as may be required for
IPv6. Equipment could be sold with that profile parameters
“for networks with up to 2^16 nodes”.</t>

<t>Because of the way FA-IINAS is designed, a limit to 2^16 nodes
does not mean that FA-IINAS addresses are only 16 bits. Instead
they can still be “arbitrary” long (where arbitrary is subject
to a discussion point further below in this section). Just
the length of the unicast-forward part of the address is
limited to 16 bits.</t>

</section>
<section anchor="maximum-address-sizes" title="Maximum address sizes">

<t>The permissible maximum size of source and destination address
are primarily subject to the header size that inexpensive
hardware forwarding can examine and modify. For future generations,
this might likely be as much as 512 bytes, so to optimize
hardware lookup it might be interesting to consider the
option of carrying the addresses not consecutively, but
carry them as</t>

</section>
</section>
<section anchor="example-packet-header-encoding" title="Example packet header encoding">

<t>The following encodings propose a couple of ideas that
could be interesting in addressing.</t>

<figure title="Example packet header encoding" anchor="FIG-newheaderIPv7"><artwork><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|Version|VE |ECN| DestAddrLen   | SrcAddrLen    | Hop Limit     |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Destination Address ...  
|
+-+-+-+-+-+-+-+-+
| Source Address ...                                                            |
|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t>Version: A version number for this packet header from the same
registry as the IPv4/IPv6 version number field.</t>

<t>VE: Version Extension. 00. Reserved for future variations of the
header, such as new extension header formats if desired, so as to not
use up any more than one Version code point.</t>

<t>DestAddrLen: The length of the Destination Address field in bytes.
Valid values are 1…255 bytes. One byte minimum length is mandatory
because of the need to indicate some semantic for processing the packet.</t>

<t>SrcAddrLen: The length of the Source Address field in bytes.
Valid values are 0…255 bytes. The Source Address field is therefore
optional.</t>

<t>ECN: See <xref target="RFC3168"/> and the documents updating it.</t>

<t>Rsv: Reserved.</t>

<t>Hop Limit: As in IPv6</t>

<t>Beside the variable length of the Source and Destination address
fields and hence their length indications, the difference to
the IPv6 header are as follows:</t>

<t>Only the two ECN bits are maintained from the IPv4/IPv6 Traffic Class field.
This is because in the majority of networks, the other 6 bits of
Traffic Class, DSCP are not being used, and where QoS differentiation would
be used, often additional or different QoS parameters may be required that are not
supported by IPv4/IPv6. Such a new network header would thus be a great
opportunity to improve on QoS header parameters through a better
QoS extension header, where it is needed (outside scope of this document),
and not proliferate not ubiquitously used elements in the base header.
The same reason applies to removing the Flow Label field.</t>

<t>ECN on the other hand is very fundamental for the majority of all traffic
in Internet and limited domain networks.</t>

</section>
</section>
<section anchor="inspirations" title="Inspirations">

<t>This section reviews prior addressing and networking technologies that did
inspire this memo and compares it with them.</t>

<section anchor="e164" title="E.164">

<t>E.164 telephone numbers traditionally worked (and may still work) similar
to this mechanisms handling of addresses by adding and removing prefixes and
allowing to grow networks hierarchically.</t>

<t>In Germany for example a town/city might have had a subscriber numbering plan starting with
3 digit numbers and expanding over time into 5 digits. 0 was excluded as the
first digit of any assigned number. Let our example subscriber have number 1234</t>

<t>When the phone systems of towns/cities where connected, dialing a different town/city would
use a concatenation of the inter-city traffic discrimination code “0” followed by the dial code for the
town/city, followed by the subscriber number. Let our example town dial code be
4111, the subscriber number dialed from a different city would be 04111 1234.
Again, “0” was excluded as the first digit of a trunk prefix.</t>

<t>When finally the phone systems of countries where connected, dialing a different
country would use a concatenation of the international traffic discrimination code “00”
followed by the country dial code, which in our example is 49 for Germany followed
by the dial code for the city, followed by the subscriber number - 0049 4111 1234 for
our example subscriber. Note that this number would of course only work when calling
from countries that also do use “00” as the international traffic discrimination
code. When calling the number from the USA, one would have to dial 011 4111 1234,
because the USA uses 011 as the internal traffic discrimination code.</t>

<t>Of course, understanding foreign countries traffic discrimination code rules to
reverse engineer a foreign telephone number so as to translate it to the according
rules of the calling-from country is one of the problems that is leading more
and more subscribers to prefer the absolute E.164 telephone numbers like
+49 4111 1234.</t>

<t>On the other hand, when the interplanetary telephone network will “soon”
<xref target="I-D.draft-farrel-soon"/> arrive and there are not enough country
codes available in Earth’s existing numbering plan, one would have to find a way
to attach prefixes in front of existing E.164 numbers, something that E.164
likely cannot afford, but which would be possible with UPVLA.</t>

<t>In our example the UPVLA address could be 0003 49 4111 1234 and a new solar
system “absolute” address could be ++3 49 4111 1234.</t>

<t>Obviously, Mercury has to get 1, Venus 2 and Earth 3 and so on, so that it would be
easier to remember how to dial other planets than it is now to remember how to
dial other countries.</t>

<t>If one was to use the solution proposed in this memo to build the phone network
addressing system with the example numbering plan, one could set up a multi-tiered
internetwork as shown in <xref target="FIG-e164"/>.</t>

<figure title="Example internetwork for E.164 style address structure with FA-INAAS" anchor="FIG-e164"><artwork><![CDATA[
Soon:
 .                         .
 . Solar System network    .
 .                         .
 .  prefix "3"             .  |
 .  .....................  .  v strip 3 from dst, prepend 0 to dst
 ...| Planet Edge Node  ....    forward into global network
 .  .....................  .  ^ strip 0 from dst, prepend 3 to src
 .         prefix "0"      .  | forward into solar system network
 .                         .
Today:
 .                         .
 .  "global" network       .
 .                         .
 .   prefix "49"           .  |
 .  +-------------------+  .  v strip 49 from dst, prepend 0 to dst
 ...| Country Edge Node |...    forward into country network
 .  +-------------------+  .  ^ strip 0 from dst, prepend 49 to src
 .         prefix "0"      .  | forward into global network
 .                         .
 .  "country" network      .
 .                         .
 .   prefix "4111"         .  |
 .  +-------------------+  .  v strip 4111 from dst, prepend 0 to dst
 ...| City Edge Node    |...    forward into city network
 .  +-------------------+  .  ^ strip 0 from dst, prepend 4111 to src
 .         prefix "0"      .    forward into country network
 .                         .
 .  city network           .
 .                         .
 .     subscriber 1234     .
 ...........................
]]></artwork></figure>

<t>Packets destined to an address starting with “0” would be routed to
an edge node of the city network, which “owns” the “0” prefix,
there that “0” prefix is stripped, but the cities own prefix
of in the example “4111” is prepended to the source address, and then
the packet is forwarded into the country network.</t>

<t>When a packet is received from the country network on a city edge node,
the opposite happens, the cities own prefix, e.g.: 4111 is stripped
from the destination address and 0 is prepended to the source address,
then the packet is forwarded into the city network and routed to the
destination. Which can generate return packets by just swapping
source and destination addresses.</t>

<t>The same process will happen across 2 network tiers when a 00 prefix
is used or even 3 network tiers, once we have (soon ;-) a Solar
System Network.</t>

<t>Of course, each tier and each instance of each tier can choose its
own addressing scheme and prefixes for the edge routers. It is left
as an exercise to the reader for example to amend the example
with its own home countries traffic discrimination codes.</t>

</section>
<section anchor="mpls" title="MPLS">

<t>Adding/Removing or swapping prefixes is the core forwarding process step in 
Multiprotocol Label Switching <xref target="RFC3031"/>. Due to the time MPLS was
designed, it had to have a very fixed size and functionality stack
architecture, but as claimed in before, the author thinks that today
an MPLS stack could easily be built just with the proposed addressing
scheme address.</t>

<t>Compared to MPLS, the proposed scheme does not mandate that that every
steering address needs to contain QoS (EXP) and TTL fields as are
present in MPLS Label Stack entries, but of course they would be
equally possible as parameters of appropriate functions.</t>

<t>Likewise the proposal does not think it is appropriate to require
complicated scanning ahead into the address in search of Special
Label Stack entries. Therefore, FA-IINAS would require that
any per-hop accessible information that is not included in the
hops function/parameters would have to be carried would have to be
carried in a separated extensions header.</t>

</section>
<section anchor="segment-routing-sr-mpls-srv6" title="Segment Routing SR-MPLS / SRv6">

<t>FA-IINAS can support more compact packet steering than SR-MPLS
when the prefixes are accordingly chosen to be shorter than the
32 bits for an LSE.</t>

<t>While it would be possible to emulate MPLS LSE by using prefixes
of 20 bit and following them with 12 bit of functional parameters
indicating EXP and TTL, the proposal in this memo does not
assume that transit routers would be able to act on those EXP or
TTL bits. While it would be easily possible to define such
additional transit hop semantic through extensions to the control
plane, the author believes that the per-path parameters of
TTL in a base header and more flexible QoS in an extension header
is the more likely most useful option for these two functions.</t>

<t>In comparison to SRv6, FA-IINAS allows of course more compact
representation of steering hops and also more easily few or
many per-hop bits for programmability, as desired.</t>

<t>What FA-IINAS does not provide for
is to keep the sequence of steering addresses in the header up
to the final receiver.  This might be useful for diagnostics, but
it is  seemingly not so important that it did stop the adoption
of SR-MPLS, where the steering hops are likewise removed from
the packet header when steering happens.</t>

<t>Other functions than steering and per-steering hop programmability
provided by SRv6 via SRH (such as its TLV for the receiver) are
unaffected by this proposal and could equally be provided for
by an SRH style extension header without the source routing part.</t>

</section>
<section anchor="research" title="Research">

<t><xref target="Haoyu"/> proposes a hierarchical addressing scheme and provides
reviews in a lot more detail a set of other reasons for such
addressing scheme. That paper does not allow for arbitrary
composition of networks without a clear hierarchy or root thereof,
as FA-IINAS does.</t>

</section>
</section>
<section anchor="summary-and-conclusions" title="Summary and conclusions">

<t>This memo introduces a simple but hopefully very attractive
addressing scheme that leverages variable length address sizes
with the potential for simple address prefix processing (push/pop/swap)
on steering hops, service-function hops and especially network
edge nodes.</t>

<t>Push/pop/swap of network prefixes on network edge nodes allows
to introduce a non-global internetworking address architecture
that should make it a lot easier to build and manage many
embedded, private or otherwise limited domain internetworks and
optimize forwarding engines for a variety of different of these
type of networks such as through known maximum network prefix lengths.</t>

<t>When network addresses as in FA-IINAS become effectively internetwork
path addresses, they also allow for a much wider range of possible
routing policies. In a time where the classical Internet with its
“sender just gets one path”, this can be a highly beneficial
enhancement to explore (not that this was already proposed, maybe
way ahead of its time and with vastly different mechanisms in
solutions as early as <xref target="RFC1621"/>, <xref target="RFC1622"/>).</t>

<t>In this version of the memo, these are only limited considerations
about how to refine details of the proposal to find incremental,
near-term deployment options, for example by using existing
IPv6 headers and using an unassigned prefix to define FA-IINAS
addressing semantic into it (limited of course to 128 bit then).
These type of considerations can be subject for future revisions of this
memo.</t>

</section>


  </middle>

  <back>


    <references title='Informative References'>





<reference anchor='RFC1621' target='https://www.rfc-editor.org/info/rfc1621'>
<front>
<title>Pip Near-term Architecture</title>
<author fullname='P. Francis' initials='P.' surname='Francis'><organization/></author>
<date month='May' year='1994'/>
<abstract><t>The purpose of this RFC and the companion RFC &quot;Pip Header Processing&quot; are to record the ideas (good and bad) of Pip.  This memo provides information for the Internet community.  This memo does not specify an Internet standard of any kind.</t></abstract>
</front>
<seriesInfo name='RFC' value='1621'/>
<seriesInfo name='DOI' value='10.17487/RFC1621'/>
</reference>



<reference anchor='RFC1622' target='https://www.rfc-editor.org/info/rfc1622'>
<front>
<title>Pip Header Processing</title>
<author fullname='P. Francis' initials='P.' surname='Francis'><organization/></author>
<date month='May' year='1994'/>
<abstract><t>The purpose of this RFC and the companion RFC &quot;Pip Near-term Architecture&quot; are to record the ideas (good and bad) of Pip.  This memo provides information for the Internet community.  This memo does not specify an Internet standard of any kind.</t></abstract>
</front>
<seriesInfo name='RFC' value='1622'/>
<seriesInfo name='DOI' value='10.17487/RFC1622'/>
</reference>



<reference anchor='RFC1918' target='https://www.rfc-editor.org/info/rfc1918'>
<front>
<title>Address Allocation for Private Internets</title>
<author fullname='Y. Rekhter' initials='Y.' surname='Rekhter'><organization/></author>
<author fullname='B. Moskowitz' initials='B.' surname='Moskowitz'><organization/></author>
<author fullname='D. Karrenberg' initials='D.' surname='Karrenberg'><organization/></author>
<author fullname='G. J. de Groot' initials='G. J.' surname='de Groot'><organization/></author>
<author fullname='E. Lear' initials='E.' surname='Lear'><organization/></author>
<date month='February' year='1996'/>
<abstract><t>This document describes address allocation for private internets.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='5'/>
<seriesInfo name='RFC' value='1918'/>
<seriesInfo name='DOI' value='10.17487/RFC1918'/>
</reference>



<reference anchor='RFC3168' target='https://www.rfc-editor.org/info/rfc3168'>
<front>
<title>The Addition of Explicit Congestion Notification (ECN) to IP</title>
<author fullname='K. Ramakrishnan' initials='K.' surname='Ramakrishnan'><organization/></author>
<author fullname='S. Floyd' initials='S.' surname='Floyd'><organization/></author>
<author fullname='D. Black' initials='D.' surname='Black'><organization/></author>
<date month='September' year='2001'/>
<abstract><t>This memo specifies the incorporation of ECN (Explicit Congestion Notification) to TCP and IP, including ECN's use of two bits in the IP header.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='3168'/>
<seriesInfo name='DOI' value='10.17487/RFC3168'/>
</reference>



<reference anchor='RFC3031' target='https://www.rfc-editor.org/info/rfc3031'>
<front>
<title>Multiprotocol Label Switching Architecture</title>
<author fullname='E. Rosen' initials='E.' surname='Rosen'><organization/></author>
<author fullname='A. Viswanathan' initials='A.' surname='Viswanathan'><organization/></author>
<author fullname='R. Callon' initials='R.' surname='Callon'><organization/></author>
<date month='January' year='2001'/>
<abstract><t>This document specifies the architecture for Multiprotocol Label Switching (MPLS).  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='3031'/>
<seriesInfo name='DOI' value='10.17487/RFC3031'/>
</reference>



<reference anchor='RFC3306' target='https://www.rfc-editor.org/info/rfc3306'>
<front>
<title>Unicast-Prefix-based IPv6 Multicast Addresses</title>
<author fullname='B. Haberman' initials='B.' surname='Haberman'><organization/></author>
<author fullname='D. Thaler' initials='D.' surname='Thaler'><organization/></author>
<date month='August' year='2002'/>
</front>
<seriesInfo name='RFC' value='3306'/>
<seriesInfo name='DOI' value='10.17487/RFC3306'/>
</reference>



<reference anchor='RFC3956' target='https://www.rfc-editor.org/info/rfc3956'>
<front>
<title>Embedding the Rendezvous Point (RP) Address in an IPv6 Multicast Address</title>
<author fullname='P. Savola' initials='P.' surname='Savola'><organization/></author>
<author fullname='B. Haberman' initials='B.' surname='Haberman'><organization/></author>
<date month='November' year='2004'/>
<abstract><t>This memo defines an address allocation policy in which the address of the Rendezvous Point (RP) is encoded in an IPv6 multicast group address.  For Protocol Independent Multicast - Sparse Mode (PIM-SM), this can be seen as a specification of a group-to-RP mapping mechanism.  This allows an easy deployment of scalable inter-domain multicast and simplifies the intra-domain multicast configuration as well.  This memo updates the addressing format presented in RFC 3306.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='3956'/>
<seriesInfo name='DOI' value='10.17487/RFC3956'/>
</reference>



<reference anchor='RFC4193' target='https://www.rfc-editor.org/info/rfc4193'>
<front>
<title>Unique Local IPv6 Unicast Addresses</title>
<author fullname='R. Hinden' initials='R.' surname='Hinden'><organization/></author>
<author fullname='B. Haberman' initials='B.' surname='Haberman'><organization/></author>
<date month='October' year='2005'/>
<abstract><t>This document defines an IPv6 unicast address format that is globally unique and is intended for local communications, usually inside of a site. These addresses are not expected to be routable on the global Internet.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='4193'/>
<seriesInfo name='DOI' value='10.17487/RFC4193'/>
</reference>



<reference anchor='RFC4291' target='https://www.rfc-editor.org/info/rfc4291'>
<front>
<title>IP Version 6 Addressing Architecture</title>
<author fullname='R. Hinden' initials='R.' surname='Hinden'><organization/></author>
<author fullname='S. Deering' initials='S.' surname='Deering'><organization/></author>
<date month='February' year='2006'/>
<abstract><t>This specification defines the addressing architecture of the IP Version 6 (IPv6) protocol.  The document includes the IPv6 addressing model, text representations of IPv6 addresses, definition of IPv6 unicast addresses, anycast addresses, and multicast addresses, and an IPv6 node's required addresses.</t><t>This document obsoletes RFC 3513, &quot;IP Version 6 Addressing Architecture&quot;.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='4291'/>
<seriesInfo name='DOI' value='10.17487/RFC4291'/>
</reference>



<reference anchor='RFC4607' target='https://www.rfc-editor.org/info/rfc4607'>
<front>
<title>Source-Specific Multicast for IP</title>
<author fullname='H. Holbrook' initials='H.' surname='Holbrook'><organization/></author>
<author fullname='B. Cain' initials='B.' surname='Cain'><organization/></author>
<date month='August' year='2006'/>
<abstract><t>IP version 4 (IPv4) addresses in the 232/8 (232.0.0.0 to 232.255.255.255) range are designated as source-specific multicast (SSM) destination addresses and are reserved for use by source-specific applications and protocols.  For IP version 6 (IPv6), the address prefix FF3x::/32 is reserved for source-specific multicast use.  This document defines an extension to the Internet network service that applies to datagrams sent to SSM addresses and defines the host and router requirements to support this extension.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='4607'/>
<seriesInfo name='DOI' value='10.17487/RFC4607'/>
</reference>



<reference anchor='RFC6282' target='https://www.rfc-editor.org/info/rfc6282'>
<front>
<title>Compression Format for IPv6 Datagrams over IEEE 802.15.4-Based Networks</title>
<author fullname='J. Hui' initials='J.' role='editor' surname='Hui'><organization/></author>
<author fullname='P. Thubert' initials='P.' surname='Thubert'><organization/></author>
<date month='September' year='2011'/>
<abstract><t>This document updates RFC 4944, &quot;Transmission of IPv6 Packets over IEEE 802.15.4 Networks&quot;.  This document specifies an IPv6 header compression format for IPv6 packet delivery in Low Power Wireless Personal Area Networks (6LoWPANs).  The compression format relies on shared context to allow compression of arbitrary prefixes.  How the information is maintained in that shared context is out of scope. This document specifies compression of multicast addresses and a framework for compressing next headers.  UDP header compression is specified within this framework.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6282'/>
<seriesInfo name='DOI' value='10.17487/RFC6282'/>
</reference>



<reference anchor='RFC6550' target='https://www.rfc-editor.org/info/rfc6550'>
<front>
<title>RPL: IPv6 Routing Protocol for Low-Power and Lossy Networks</title>
<author fullname='T. Winter' initials='T.' role='editor' surname='Winter'><organization/></author>
<author fullname='P. Thubert' initials='P.' role='editor' surname='Thubert'><organization/></author>
<author fullname='A. Brandt' initials='A.' surname='Brandt'><organization/></author>
<author fullname='J. Hui' initials='J.' surname='Hui'><organization/></author>
<author fullname='R. Kelsey' initials='R.' surname='Kelsey'><organization/></author>
<author fullname='P. Levis' initials='P.' surname='Levis'><organization/></author>
<author fullname='K. Pister' initials='K.' surname='Pister'><organization/></author>
<author fullname='R. Struik' initials='R.' surname='Struik'><organization/></author>
<author fullname='JP. Vasseur' initials='JP.' surname='Vasseur'><organization/></author>
<author fullname='R. Alexander' initials='R.' surname='Alexander'><organization/></author>
<date month='March' year='2012'/>
<abstract><t>Low-Power and Lossy Networks (LLNs) are a class of network in which both the routers and their interconnect are constrained.  LLN routers typically operate with constraints on processing power, memory, and energy (battery power).  Their interconnects are characterized by high loss rates, low data rates, and instability.  LLNs are comprised of anything from a few dozen to thousands of routers.  Supported traffic flows include point-to-point (between devices inside the LLN), point-to-multipoint (from a central control point to a subset of devices inside the LLN), and multipoint-to-point (from devices inside the LLN towards a central control point).  This document specifies the IPv6 Routing Protocol for Low-Power and Lossy Networks (RPL), which provides a mechanism whereby multipoint-to-point traffic from devices inside the LLN towards a central control point as well as point-to-multipoint traffic from the central control point to the devices inside the LLN are supported.  Support for point-to-point traffic is also available.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6550'/>
<seriesInfo name='DOI' value='10.17487/RFC6550'/>
</reference>



<reference anchor='RFC8279' target='https://www.rfc-editor.org/info/rfc8279'>
<front>
<title>Multicast Using Bit Index Explicit Replication (BIER)</title>
<author fullname='IJ. Wijnands' initials='IJ.' role='editor' surname='Wijnands'><organization/></author>
<author fullname='E. Rosen' initials='E.' role='editor' surname='Rosen'><organization/></author>
<author fullname='A. Dolganow' initials='A.' surname='Dolganow'><organization/></author>
<author fullname='T. Przygienda' initials='T.' surname='Przygienda'><organization/></author>
<author fullname='S. Aldrin' initials='S.' surname='Aldrin'><organization/></author>
<date month='November' year='2017'/>
<abstract><t>This document specifies a new architecture for the forwarding of multicast data packets.  It provides optimal forwarding of multicast packets through a &quot;multicast domain&quot;.  However, it does not require a protocol for explicitly building multicast distribution trees, nor does it require intermediate nodes to maintain any per-flow state. This architecture is known as &quot;Bit Index Explicit Replication&quot; (BIER).  When a multicast data packet enters the domain, the ingress router determines the set of egress routers to which the packet needs to be sent.  The ingress router then encapsulates the packet in a BIER header.  The BIER header contains a bit string in which each bit represents exactly one egress router in the domain; to forward the packet to a given set of egress routers, the bits corresponding to those routers are set in the BIER header.  The procedures for forwarding a packet based on its BIER header are specified in this document.  Elimination of the per-flow state and the explicit tree-building protocols results in a considerable simplification.</t></abstract>
</front>
<seriesInfo name='RFC' value='8279'/>
<seriesInfo name='DOI' value='10.17487/RFC8279'/>
</reference>



<reference anchor='RFC8296' target='https://www.rfc-editor.org/info/rfc8296'>
<front>
<title>Encapsulation for Bit Index Explicit Replication (BIER) in MPLS and Non-MPLS Networks</title>
<author fullname='IJ. Wijnands' initials='IJ.' role='editor' surname='Wijnands'><organization/></author>
<author fullname='E. Rosen' initials='E.' role='editor' surname='Rosen'><organization/></author>
<author fullname='A. Dolganow' initials='A.' surname='Dolganow'><organization/></author>
<author fullname='J. Tantsura' initials='J.' surname='Tantsura'><organization/></author>
<author fullname='S. Aldrin' initials='S.' surname='Aldrin'><organization/></author>
<author fullname='I. Meilik' initials='I.' surname='Meilik'><organization/></author>
<date month='January' year='2018'/>
<abstract><t>Bit Index Explicit Replication (BIER) is an architecture that provides optimal multicast forwarding through a &quot;multicast domain&quot;, without requiring intermediate routers to maintain any per-flow state or to engage in an explicit tree-building protocol.  When a multicast data packet enters the domain, the ingress router determines the set of egress routers to which the packet needs to be sent.  The ingress router then encapsulates the packet in a BIER header.  The BIER header contains a bit string in which each bit represents exactly one egress router in the domain; to forward the packet to a given set of egress routers, the bits corresponding to those routers are set in the BIER header.  The details of the encapsulation depend on the type of network used to realize the multicast domain.  This document specifies a BIER encapsulation that can be used in an MPLS network or, with slight differences, in a non-MPLS network.</t></abstract>
</front>
<seriesInfo name='RFC' value='8296'/>
<seriesInfo name='DOI' value='10.17487/RFC8296'/>
</reference>



<reference anchor='RFC8520' target='https://www.rfc-editor.org/info/rfc8520'>
<front>
<title>Manufacturer Usage Description Specification</title>
<author fullname='E. Lear' initials='E.' surname='Lear'><organization/></author>
<author fullname='R. Droms' initials='R.' surname='Droms'><organization/></author>
<author fullname='D. Romascanu' initials='D.' surname='Romascanu'><organization/></author>
<date month='March' year='2019'/>
<abstract><t>This memo specifies a component-based architecture for Manufacturer Usage Descriptions (MUDs).  The goal of MUD is to provide a means for end devices to signal to the network what sort of access and network functionality they require to properly function.  The initial focus is on access control.  Later work can delve into other aspects.</t><t>This memo specifies two YANG modules, IPv4 and IPv6 DHCP options, a Link Layer Discovery Protocol (LLDP) TLV, a URL, an X.509 certificate extension, and a means to sign and verify the descriptions.</t></abstract>
</front>
<seriesInfo name='RFC' value='8520'/>
<seriesInfo name='DOI' value='10.17487/RFC8520'/>
</reference>



<reference anchor='RFC8754' target='https://www.rfc-editor.org/info/rfc8754'>
<front>
<title>IPv6 Segment Routing Header (SRH)</title>
<author fullname='C. Filsfils' initials='C.' role='editor' surname='Filsfils'><organization/></author>
<author fullname='D. Dukes' initials='D.' role='editor' surname='Dukes'><organization/></author>
<author fullname='S. Previdi' initials='S.' surname='Previdi'><organization/></author>
<author fullname='J. Leddy' initials='J.' surname='Leddy'><organization/></author>
<author fullname='S. Matsushima' initials='S.' surname='Matsushima'><organization/></author>
<author fullname='D. Voyer' initials='D.' surname='Voyer'><organization/></author>
<date month='March' year='2020'/>
<abstract><t>Segment Routing can be applied to the IPv6 data plane using a new type of Routing Extension Header called the Segment Routing Header (SRH). This document describes the SRH and how it is used by nodes that are Segment Routing (SR) capable.</t></abstract>
</front>
<seriesInfo name='RFC' value='8754'/>
<seriesInfo name='DOI' value='10.17487/RFC8754'/>
</reference>



<reference anchor='RFC8799' target='https://www.rfc-editor.org/info/rfc8799'>
<front>
<title>Limited Domains and Internet Protocols</title>
<author fullname='B. Carpenter' initials='B.' surname='Carpenter'><organization/></author>
<author fullname='B. Liu' initials='B.' surname='Liu'><organization/></author>
<date month='July' year='2020'/>
<abstract><t>There is a noticeable trend towards network behaviors and semantics that are specific to a particular set of requirements applied within a limited region of the Internet. Policies, default parameters, the options supported, the style of network management, and security requirements may vary between such limited regions. This document reviews examples of such limited domains (also known as controlled environments), notes emerging solutions, and includes a related taxonomy. It then briefly discusses the standardization of protocols for limited domains. Finally, it shows the need for a precise definition of &quot;limited domain membership&quot; and for mechanisms to allow nodes to join a domain securely and to find other members, including boundary nodes. </t><t>This document is the product of the research of the authors. It has been produced through discussions and consultation within the IETF but is not the product of IETF consensus.</t></abstract>
</front>
<seriesInfo name='RFC' value='8799'/>
<seriesInfo name='DOI' value='10.17487/RFC8799'/>
</reference>



<reference anchor='RFC8986' target='https://www.rfc-editor.org/info/rfc8986'>
<front>
<title>Segment Routing over IPv6 (SRv6) Network Programming</title>
<author fullname='C. Filsfils' initials='C.' role='editor' surname='Filsfils'><organization/></author>
<author fullname='P. Camarillo' initials='P.' role='editor' surname='Camarillo'><organization/></author>
<author fullname='J. Leddy' initials='J.' surname='Leddy'><organization/></author>
<author fullname='D. Voyer' initials='D.' surname='Voyer'><organization/></author>
<author fullname='S. Matsushima' initials='S.' surname='Matsushima'><organization/></author>
<author fullname='Z. Li' initials='Z.' surname='Li'><organization/></author>
<date month='February' year='2021'/>
<abstract><t>The Segment Routing over IPv6 (SRv6) Network Programming framework enables a network operator or an application to specify a packet processing program by encoding a sequence of instructions in the IPv6 packet header.</t><t>Each instruction is implemented on one or several nodes in the network and identified by an SRv6 Segment Identifier in the packet.</t><t>This document defines the SRv6 Network Programming concept and specifies the base set of SRv6 behaviors that enables the creation of interoperable overlays with underlay optimization.</t></abstract>
</front>
<seriesInfo name='RFC' value='8986'/>
<seriesInfo name='DOI' value='10.17487/RFC8986'/>
</reference>



<reference anchor='RFC8990' target='https://www.rfc-editor.org/info/rfc8990'>
<front>
<title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<author fullname='B. Carpenter' initials='B.' role='editor' surname='Carpenter'><organization/></author>
<author fullname='B. Liu' initials='B.' role='editor' surname='Liu'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>This document specifies the GeneRic Autonomic Signaling Protocol (GRASP), which enables autonomic nodes and Autonomic Service Agents to dynamically discover peers, to synchronize state with each other, and to negotiate parameter settings with each other. GRASP depends on an external security environment that is described elsewhere. The technical objectives and parameters for specific application scenarios are to be described in separate documents. Appendices briefly discuss requirements for the protocol and existing protocols with comparable features.</t></abstract>
</front>
<seriesInfo name='RFC' value='8990'/>
<seriesInfo name='DOI' value='10.17487/RFC8990'/>
</reference>



<reference anchor='RFC8994' target='https://www.rfc-editor.org/info/rfc8994'>
<front>
<title>An Autonomic Control Plane (ACP)</title>
<author fullname='T. Eckert' initials='T.' role='editor' surname='Eckert'><organization/></author>
<author fullname='M. Behringer' initials='M.' role='editor' surname='Behringer'><organization/></author>
<author fullname='S. Bjarnason' initials='S.' surname='Bjarnason'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>Autonomic functions need a control plane to communicate, which depends on some addressing and routing.  This Autonomic Control Plane should ideally be self-managing and be as independent as possible of configuration.  This document defines such a plane and calls it the &quot;Autonomic Control Plane&quot;, with the primary use as a control plane for autonomic functions.  It also serves as a &quot;virtual out-of-band channel&quot; for Operations, Administration, and Management (OAM) communications over a network that provides automatically configured, hop-by-hop authenticated and encrypted communications via automatically configured IPv6 even when the network is not configured or is misconfigured.</t></abstract>
</front>
<seriesInfo name='RFC' value='8994'/>
<seriesInfo name='DOI' value='10.17487/RFC8994'/>
</reference>


<reference anchor='I-D.jia-intarea-scenarios-problems-addressing'>
   <front>
      <title>Challenging Scenarios and Problems in Internet Addressing</title>
      <author fullname='Yihao Jia'>
	 <organization>Huawei Technologies Co., Ltd</organization>
      </author>
      <author fullname='Dirk Trossen'>
	 <organization>Huawei Technologies Duesseldorf GmbH</organization>
      </author>
      <author fullname='Luigi Iannone'>
	 <organization>Huawei Technologies France S.A.S.U.</organization>
      </author>
      <author fullname='Nirmala Shenoy'>
	 <organization>Rochester Institute of Technology</organization>
      </author>
      <author fullname='Paulo Mendes'>
	 <organization>Airbus</organization>
      </author>
      <author fullname='Donald E. Eastlake 3rd'>
	 <organization>Futurewei Technologies</organization>
      </author>
      <author fullname='Peng Liu'>
	 <organization>China Mobile</organization>
      </author>
      <date day='12' month='July' year='2021'/>
      <abstract>
	 <t>   The Internet Protocol (IP) has been the major technological success
   in information technology of the last half century.  As the Internet
   becomes pervasive, IP has been replacing communication technology for
   many domain-specific solutions.  However, domains with specific
   requirements as well as communication behaviors and semantics still
   exist and represent what [RFC8799] recognizes as &quot;limited domains&quot;.

   This document describes well-recognized scenarios that showcase
   possibly different addressing requirements, which are challenging to
   be accommodated in the IP addressing model.  These scenarios
   highlight issues related to the Internet addressing model and call
   for starting a discussion on a way to re-think/evolve the addressing
   model so to better accommodate different domain-specific
   requirements.

   The issues identified in this document are complemented and deepened
   by a detailed gap analysis in a separate companion document
   [GAP_ANALYSIS].

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-jia-intarea-scenarios-problems-addressing-01'/>
   <format target='https://www.ietf.org/archive/id/draft-jia-intarea-scenarios-problems-addressing-01.txt' type='TXT'/>
</reference>


<reference anchor='I-D.jia-flex-ip-address-structure'>
   <front>
      <title>Flexible IP: An Adaptable IP Address Structure</title>
      <author fullname='Yihao Jia'>
	 <organization>Huawei Technologies Co., Ltd</organization>
      </author>
      <author fullname='Zhe Chen'>
	 <organization>Huawei Technologies Co., Ltd</organization>
      </author>
      <author fullname='Sheng Jiang'>
	 <organization>Huawei Technologies Co., Ltd</organization>
      </author>
      <date day='31' month='October' year='2020'/>
      <abstract>
	 <t>   Along as the popularization and adoption of IP in emerging scenarios,
   challenges emerge as well due to the ossified address structure.  To
   enable TCP/IP in networks that previously using exclusive protocol, a
   flexible address structure would be far more preferred for their
   particular properties
   [draft-jia-scenarios-flexible-address-structure].

   This document describes a flexible address structure -- Flexible IP
   (FlexIP) acting on limited domains [RFC8799].  FlexIP is expected to
   proactively adapt scenarios under flexible address structure.
   Meanwhile, FlexIP still benefit from global reachability based on the
   IPv6 interoperability.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-jia-flex-ip-address-structure-00'/>
   <format target='https://www.ietf.org/archive/id/draft-jia-flex-ip-address-structure-00.txt' type='TXT'/>
</reference>


<reference anchor='I-D.king-irtf-semantic-routing-survey'>
   <front>
      <title>A Survey of Semantic Internet Routing Techniques</title>
      <author fullname='Daniel King'>
	 <organization>Lancaster University</organization>
      </author>
      <author fullname='Adrian Farrel'>
	 <organization>Old Dog Consulting</organization>
      </author>
      <date day='28' month='June' year='2021'/>
      <abstract>
	 <t>   The Internet Protocol (IP) has become the global standard in any
   computer network, independent of the connectivity to the Internet.
   Generally, an IP address is used to identify an interface on a
   network device.  Routing protocols are also required and developed
   based on the assumption that a destination address has this semantic
   with routing decisions made on addresses and additional fields in the
   packet headers.

   Over time, routing decisions were enhanced to route packets according
   to additional information carried within the packets and dependent on
   policy coded in, configured at, or signaled to the routers.  Many
   proposals have been made to add semantics to IP addresses.  The
   intent is usually to facilitate routing decisions based solely on the
   address and without the need to find and process information carried
   in other fields within the packets.

   This document is presented as a survey to support the study and
   further research into clarifying and understanding the issues.  It
   does not pass comment on the advisability or practicality of any of
   the proposals and does not define any technical solutions

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-king-irtf-semantic-routing-survey-02'/>
   <format target='https://www.ietf.org/archive/id/draft-king-irtf-semantic-routing-survey-02.txt' type='TXT'/>
</reference>


<reference anchor='I-D.king-irtf-challenges-in-routing'>
   <front>
      <title>Challenges for the Internet Routing Infrastructure Introduced by Changes in Address Semantics</title>
      <author fullname='Daniel King'>
	 <organization>Lancaster University</organization>
      </author>
      <author fullname='Adrian Farrel'>
	 <organization>Old Dog Consulting</organization>
      </author>
      <date day='14' month='June' year='2021'/>
      <abstract>
	 <t>   Historically, the meaning of an IP address has been to identify an
   interface on a network device.  Routing protocols were developed
   based on the assumption that a destination address had this semantic.

   Over time, routing decisions were enhanced to route packets according
   to additional information carried within the packets and dependent on
   policy coded in, configured at, or signaled to the routers.

   Many proposals have been made to add semantics to IP addresses.  The
   intent is usually to facilitate routing decisions based solely on the
   address and without the need to find and process information carried
   in other fields within the packets.

   This document describes the challenges to the existing routing system
   that are introduced by the addition of semantics to IP addresses.  It
   then summarizes the opportunities for research into new or modified
   routing protocols to make use of new address semantics.

   This document is presented as study to support further research into
   clarifying and understanding the issues.  It does not pass comment on
   the advisability or practicality of any of the proposals and does not
   define any technical solutions.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-king-irtf-challenges-in-routing-03'/>
   <format target='https://www.ietf.org/archive/id/draft-king-irtf-challenges-in-routing-03.txt' type='TXT'/>
</reference>


<reference anchor='I-D.draft-farrel-soon'>
   <front>
      <title>A Definition of the Term &quot;Soon&quot; for Use in Discussions with Working Group Chairs and Area Directors</title>
      <author fullname='Adrian Farrel'>
	 <organization>Old Dog Consulting</organization>
      </author>
      <date day='8' month='March' year='2021'/>
      <abstract>
	 <t>   Many discussions with IETF Area Directors and Working Group Chairs
   utilize the word &quot;Soon&quot; to qualify a commitment to action.  This
   document attempts to provide a definition of that term so that common
   expectations may be realistically set.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-farrel-soon-07'/>
   <format target='https://www.ietf.org/archive/id/draft-farrel-soon-07.txt' type='TXT'/>
</reference>


<reference anchor="Haoyu" >
  <front>
    <title>Adaptive Addresses for Next Generation IP Protocol in Hierarchical Networks</title>
    <author initials="H." surname="Song" fullname="Haoyu Song">
      <organization></organization>
    </author>
    <author initials="Z." surname="Zhang" fullname="Zhaobo Zhang">
      <organization></organization>
    </author>
    <author initials="Y." surname="Qu" fullname="Yingzhen Qu">
      <organization></organization>
    </author>
    <author initials="J." surname="Guichard" fullname="James Guichard">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="IEEE" value="2020 IEEE 28th International Conference on Network Protocols (ICNP)"/>
</reference>
<reference anchor="CiscoNAT" target="http://staff.ustc.edu.cn/~james/cisco/nat/emios_wp.htm">
  <front>
    <title>Enabling Enterprise Multihoming with Cisco IOS Network Address Translation (NAT)</title>
    <author initials="P." surname="Akkiraju" fullname="Praveen Akkiraju">
      <organization></organization>
    </author>
    <author initials="K." surname="Delgadillo" fullname="Kevin Delgadillo">
      <organization></organization>
    </author>
    <author initials="Y." surname="Rekhter" fullname="Yakov Rekhter">
      <organization></organization>
    </author>
    <date year="2000"/>
  </front>
</reference>


    </references>



  </back>

<!-- ##markdown-source:
H4sIALOO7GAAA+1963IbV5Lmf0bwHWrpiFkyBIAESMqSZj2xsizbmrXVGlL2
eHa901EECkRZQBW6qkCKlrSxr7Gvt0+y+eXtnFMAJbm759+qWxYJVJ1rZp68
fJlnOBzu703rWVldP8k23Xz4aH9vf68ru2XxJPt2U027sq7yZfZ0NmuKtqXH
ssNvnx5l87rJyqormqro2uy27BbZi2pWrAv6T9VlL4vutm7e2GvZ5TqfFm12
+OLFy6eXR/t7+dVVU9w8yeb5sKzydn9vVk+rfEV9zpp83g2L6Zui6ei7Lm+K
fDj3gQxzH8iQxjD0MQxPTvb3bmkSL16+fnrx/CnNKu+K67q5e0IDndeYVtvl
1ezP+bKuqKO7grpdl0+y/9HV00HW1k3XFPOWfrpbyQ/TerWiybT/E+/mm25R
N0/297JsiP/wn7Jqn2SvR9lzHq5/LDN5XRfNEpPvfVs311jabtMUt0WZvS6m
i6pe1tclLdBPl0/9uWKVl8snWdcV/3Xajub5ZjQrMBLMplnlXXlT8HAuvn02
fjgZRz9P/OfH40f28+n4Yfj55NSfPz09eeg/Pz73n8/Gj0/958ljf/7s4cmX
9vPDySPv6+H5+Yn9/Gjy5ePw82Nv89H5JDzz5flZ+PlxeP7xo/D848cn0c/y
/IvhN6PfytyJo50WVd6UdTtcN/XVsli1EZEkb8yXxdthubavh23XbKbYB3/q
DeiqbIgPWlr+qiunw6bedPi03TQ3xd2OJ6eLfLksquuipSHZ4/6c0PM8b5pi
OWzruuJvvs/ru80T2WpltqezfI09NZ4hagCTvSzedtl3RVU0OTgge/Eqe9XU
RLL1ksgv+76kL5rpopwSkyrXtdJuWzREUqCWJ0ZTL54/f/4km5xMTvjHbPKI
+RYslCujP6uredEU1bTIqDfjY+sSLPzs5asjaTDiCfwJfKEcwLPMLuvq+t5H
/vsir69q/PORh/6NFvT3RVFl/7LxZ7L+Q/9M/22z7zYl7Uczw7fPynZav3z6
Ol3n51V+tYQce455r5uyLbIfN8uuXNQrfMyyjF/NXvzpckuSvW7yql3KXhxS
47oURIrXRfckW3Td+snxMUma+Xy0abvpqJhtRtPq+H/9hvEdT9HwMa32cbEi
kv3z7Xq06FbSxowEFnYHkuxzlvdVk98UtCpP37wpm/y3zb0P/rfihkjlm2J5
nc/K5bK+f6HzN/VNdlG8WdDSQNYMh8MsvyI+yacdfr8ophDvvCKLvM2anJZv
JidB0XagyOLtelk3WMlKl26Z3xVNFngy6xY5PUpkuqqbIgNXlsS3+LjK5uXb
YjYEP9E2RO9QZxvpiljg5iw7PJ1kV2V3lJFIxycPs8Px5BF/NJKR5m1dCQ91
iyIe4nS5mRXZVU0dtJv1mgQ/P7UCEaxpHGhxXXc00ZI4+y6r6ptiSSeAUoBJ
hjar54PsatNl+bKts5q4d1X+zpSBr+LBo3maZAvJQMeQN9BupgueWUX8S2Pr
SOLTksyoy85Hfr2sr4gxX+hJR4SPPrs6uyrobGh8DkTKN0RBtuwtz2NJY+qo
wVlNp0nV8tK8XpRttipWte4VsQ2tKrq6KYtbDB0/C/XRMdlRIx2xjj09y5po
bdMtzE127e+Bomjx0JTJZR5RzaOlGXelijibGUbtHPj52oTMyZejAH8XsrRl
1DId6J1PnEa0riFi82ze0EC5eYwlv0fpWdWzYjmytcMvsuvooZq12A7bh7a4
IZm8zIi+UrKX165relGpEJ/SUK5pCKv8qqR1viM6o0ViWvQzSLYNvLgqZ7Ml
awFfYNmaerbhwfInX2R/op6xh7tYtXibk3yj3eONzpebAjv9+Ry4v/e5/Ecq
VFEozecrcNS7d3/o0P7wYYBliF679+T+8GEHt5ftfwS73zetT+oMHz7IpvYf
36k40Nz/Jpky6AuVgYhbWvX/ePGSHb57p+rchw9HPWEzK9ppU14R05H+Pfir
RM7/lzj/ARKnt02kSNLTvB39hoIZRjRaTHMSCGH96cWKPgWTVCC/PHMmpf3d
38PL43frHJOnNTpsjwb4aJJ+NBqVI3z8Mvn4g7I5ibhvSIFa5uVK9JOn1Z2u
LKa4ysHod7LqZFFuYL4x5YOOyikpgHdO9+tNgw0B7a1pBmB/MJLxNlhPmY5o
b1n+jmWY1qQXrzsWLyx7RSCiOazdKHtNG0C6RkscJhtFWhNvcjJOfiUeIu3l
rGyKKcZHC1uvIJXu6Ble+kYF82+kT2ImpNfjrZyEVImx8i8yWvRF/dCg6f86
WptpS3bqXzYs4iBaiG5vaKe4+bYeYJazommxXGRIF0seBQ1sXU7fZJs1T6Hd
XLXEnNR2OSOGJEquVxGNs6ChxbjjNTcRLGsERmwKUEwJoby/J8RKQqG8Vr3k
i+yZS0SnybZgkqP1aacbpjPboSA+peNr0oYzVue72oQALzh3lyz4KHvRJcoP
r8KsgIDkV6f43TtgeUlLsgR5qEAqlm1xy7uNmbUbYqem/L3gt3lqrVHs9+X1
IlvSYhOD0vI1N7JXMkNugDe4KfrdttQnc5W8Vsg0WeQKf5rGAGG9KZczmcYN
DcR08kjGtfVyE4ikqiuyRpeQlyYM+YAf0pFRqEOnaNfFVM5EHPBPMOIH2bdQ
D7IWc/UjEtLxCesFx6wKJF+AHVinyESnGPByUrP1LRsDNT1O3OYvyVMwTSDi
6ECAjKUhL8mOZIqhk25GxPyvi3Ip1NTS+U1yijUYtKYLEesuGR00OW05sWQL
cloItUNCB44VnkcbGCGJhNkAHcsYmM3ZqvdpXtFaaUtBDg6y24U8LGyAppri
Lxvi79kI78u4sYGxHj3fWlYsjmpb0p0K2E2FkXd1zUauibM5tcUrsCByG9LO
FTR4WuLhtG75sL8lqxj8rWft+PHJCfaCB4vm0dgt8TRLjfIGr9NzbRglk2k9
y+8g3YkkiXpIHaCfn77+MZsWODWEIa7uePOokwKnr/X3mPqT7lgXg5V+izZ1
bGzkVTynVU5vwMMFpwYfPa3QC7RXPkpvSP7gI+67u1sX2b/Ul0K1IH85j2kt
SbPLp2+KTpjxAeRz0HTyVsVESbx7RxrJnDerrojgjRWyGak9YrMWKqzYIH+9
6JF/ZBbq+GYxA10JD4HQ6Ky+I+2TlIU5iSPSqdFeLacIaUaha2b3GTVWaO8k
Quo1Hxi0qMySyYQCS9heQjTdksWPTaXjbVOIXkefZ3RyEFXnOB9Zfs3ndD6i
6UjTQhcDbY45pIsf1IOvXpcVuCbV4YwseZ5XTc08spHjFs0yJzwVagRNDUhf
WJZvII9ovg2RyZK9MdVmdQX2n2cLomP4APDp62eviCUObx4eYbHZM4X22o42
u3WuO9BFtfU54KnyqPLf6oZEp3Wpk+MDEQ0d0HpVdPAIvSVtiHZOum5HfE/U
1fBm9M3sDGcXWuIm1QaBgkKHKBR9MCKt3xJeIzjqbsppYXTTtEFjZ5MLYlAe
YfFj5Ns1OfZilF2EBoVjg4oO3QvkTF/5h9z4KmcmvSpY36NOiCQOWLIs87uD
3nzCu7L8P7764XKQXV4M8QMk5OUFhL4wb398WFxSvquCe5k2JKkxzBWoVeSk
O4qEvzI59UlvHIgcgZZmi8Z7W5SsO9D+HgTfDrqsaCy2d7RsB8nWmQiAA4/2
DSRM8mnY1UOIqdjV1AUdQKn6xSsRwUZtOlQ11Spsc8OSi/UIkp6NCE6cz0T+
Rf7G/V46STDINclwE6/CyjRrHhj3TYKpmsJEZQExF7tbzG0WJNxcJNkXUICE
wde5TCV1wR36WXIU200ZtsrWhIgFXRgPRWK3q4mXj0kcl/M7PVNlH1lPK9uw
aFcFDaWEBKhj8xEaktpnTiQQCRB2o+zfim5g5wbPNBASHzq39WYplivPCLKe
aCJ7+fT1QEd8vSG5f8fHVtaS7WBEzmbTIl+vi8rZGZtpHQxiQc0HVGCgjkTK
QtWUsoLyTfrDTcqI9XxewOFJ518uynx+U5ek7tQ4v2hRWYbpcb6KXM007OOa
6WYK/7faIiYEoLDQ7EhrT/R0JnalcTQSUYUc4j54dtAWLXUoKjhpOPPitmjE
mpicRaoF9RMURDRyCF8HnNntk+Pjohrdlm/KdTEr81HdXB/jN37xz0w5JV77
86rALMp2dTTIruXQVG3ctvUvGzIHcFbQSYsRL2oy/avhmo57zHuq/Jf6OVTr
oe/zKeIjSxVcbJ+Y/J1zOC1+TQ2LmARTx0FfP5aIQmfufT3yr+BDwrbAPYtV
EvuL4yPUgvsAdACJOfPFlp/hPrEq/odXica6v/enyuVP3zDQj83/k+EwPIt8
cVumu9gYhbu1dH53rkyJ5dhz8fC46AtjNiO7G4g1YaX9vcBGt4sSridsBFhO
T5b7Jh25ikY23aaw4JNZeSbnaMbRQtIZyxogE0A53dBBipnAG3psdCwHUgd+
JlohC6HUXS1be1YnyKeJfkT6O5xHkCRqIJufsCOruyURtYhCbgMokS3omGZG
ljITwbt33774bqijpclll7QCGGHZtptCtLKI2ZTA5zUdv9kWVXj3LMJ555lZ
1cn3Pbig8rifKw6zulnRoVmv2izoMipRWELJE/rmIH0I7kpZFH96Sruxae95
nj12vVdI9l4RcczLCmKVhHKsp+qCiGJSqFMCm0TMSTJqhmAndPcePTKZvKjg
rxkSt5TVbNN2pO0v/QmIRzp+yxk16TuqZsminCnVlw2i6DQYnFGFOFBaqOgt
VvOQBnJVSkD0COvtT/DqQpVualA2E1fmDfmpJxPpCj1K3RxgTYw22wJqvHhw
1is3r/iogXWgpxSxHMicp/2vIAbtz93+ohWkjCHvQu7CLKIHnNQGMmB1G4gG
Qst7m9+1ojawSKX2XNny0avzy5mf16/uj3pBL16zoMAXrNw2iZwlY6FACGKz
ZlWY/VdqhdBPsHR4oUWtYg/WBoqUSBOXfvF5Le41VhfNlfk1dTEvuzYSGar/
JENJZJlp6LQX6vczBtPtpsO8XhsF5Hocw+Rmjx27X8hMUvXWeZblToUpHbMD
yAW3yRChECepxljYDr0NS9BaViOstIQs5NxNfFGleimcTwuLdt+UTbeBHzM3
2QjdgNZ3Wvh439KDIwmGs9ZZBo84TbMhJV7pgFekvSMbaOV+X3dFirIB9y0N
Hj5KdzwHFxTsLhi0MHtIyM748IG4ZQQEzomORo5zoGPu68g+x95AMCAEkFf5
NfUzL5sV+xA2awTPM4n+NLOh6AW0wAVYDUMyEgGSZ8bUwfTQbNgdNCN2ZY46
tmHUpNyzwxXeICiTOZSnwIrEJjEFDdgbwWeLrgeThJ+cYuYU7A5RBw5tAR/0
OD2ok2tousJB7MOoSdwGmS9BueCAB9HC01M0Q2hzdtrs7wmlB77mA6Fivfmq
EAcYZJF4yRuxYMuiTc1aTHx/T7xW2LjITurNm9Sm9XLTxsxKxLWG65UEcwfj
tmP3v61/tiKuoVNShDmgBw+Gf/ufB9LU++zjf545o2XH2XeyRsN/EvvZnnkf
mhqNRp9o8ON9vv+8UWU0fplFNKEHo9GDB/bZ5zf1sUfep6P69LpvPfEAL/qo
hg+sqU8Pa+uJ97S69J9LFiLZ+fuPNPWpXXtvoxr+HUbV+31XUzvX5sEQOxa+
+bymdo+i/829TW1v0D37FXbsvqY+tRS6Xz/KGZQ93J7IPU1tb1hvvz57VOGY
vG+QOz75AxP8A01FK63s8CD89kdH9b73VPzPH2qKdMq6GSNw0eJf/nWiv07+
prX6xIufaMqIZvy3NfUpgfXg85vKVPDsGtHuP/c19VecXv1xBtn+gs5f0iNE
Rfv8sW019Xc6Ut89yb6ITFlBUH518FxN89gQVhO7F3c8+EDjUaPt/lgB/6Yx
ZPHerRCzUu2ag4MwtmIPLXqFxrZxnXeXwaOew7IVC4I1Y0RYuPlbsqwk0DOT
0KXY2+yVAG76w4fgI+XAfpuATdjLMe3EdK1voYaTdkqKqSjLjM4hsifNcr2s
7zhow0GdIYwKhDKzvBV7rJ3WMu447tdyvJnengOzZYavePMQKwE2nRayJQ13
tfVyFZkKZsdodIkUMdI3EZLIfvnlF/au1BqXd7fp+GTE/zt+BCV5/HgyGj98
xB+MH8ZLMBcMQXPHeiNr6xiIO2LCIGhZNvOct2s2ypQY1MMDqJfIrSl7eDEU
HcF44LJMP5mo84SmMsq+Jo1VnQfUSDl3OXPKwS+fDwxEcTggmKXYsMpols0z
8S5jcdRRZg5knYEhftgdbu4kdibUEeHZ42VhtrZY0sctkRZtQ+S1TS3844oU
86FgBICVCPbh/h7H79h0aNnEgoOF8V9qCySItLaTqOkSa75es33B0VdZvrcW
Z1T/GY2CvxmHb3RE3KrLbZqN2Je+MunE4odP1VOP0FJdzctrbDpjFOAZYsSI
j8b6Px29HWVPGU/2priF0zg3k+ltJ1YQe0l8WQby3h21MbXeMGGJVNB3v/N3
zNF5Nivn7FYkm0Y5M6Fa4y7zEycihC1ViKeBRO80SMwiJHJAFfB9MYhClqRo
lfM5FJ23EUe6bTarBX0wZ9e+dt5x4NBFGe8nr5zuJ8miH3SRBiYF1vAmlVOB
stigwKENx1NNPkYighfGvaL0hLkG2XTLMf5BQIzt70WUzfKL45a5hBw5dgQv
jrj2g/+NvqHvp3nTmhEt4leJVXFn4jRvihA3wTgE+PBQIjs3OTGveq2wKCEG
HTvMJQy/hP3KMm29zKfmxjcoFL0dC3gDs96ac02fY2L7qSr/simyHziKE5Iy
Dn/64emRjW+QsR0P+MLv4vfg5pE7w17tF2pQ64E3L25F3MOvVsCmb3tDGmTU
fOyU39+b/PvZSSBhf3Hg0WyNKF5vcKLRLkmUVKTFE8Fv5Rnt0qxe7e/J6/Zu
ld3VG/ZYxGElfNgEPzTpIwjBV7xMJK0FwQBBKJ5y3xgDRGgfU9LVS7hXjvmA
4f3+CclL3abK4R4d9BopixjkGt63+HzOEdP9PZ2wx0cVFiqRmlQXKKqbsqkr
9fAqZpG5jk6MlkO0DPmVWKw4mASK6WGEW47a1uB8Pkx9WEQl0+mm0Z1oGGfY
NLVGqVnl4JUC0iVzjBZNjeaKnYxiADQBEoCqpPRW5Kq4LqvIQcuQCvY/KnqB
Q5bLun7DbAB/jzyjDlhF7EUAJdMJ+EXELPVESiIPODjqTQusFQP+VFi2yRmf
HbJ8zAOvH/V1FdCz7h+vBi1xu8kRRJVtE1xhoin1PLyGp6Il1UwleldDZsS8
UO9SwlNRmXH8U5BXwkocLJYoFYNqWw5306FUKPoC28qeSnBfQSw3leOg6HiN
NmtRIr3VxBUGGQodsARID2AVfKBreuxiEjERzEOUSjnZIfo2Xb1ih5nAiF3p
lqd1hwQXQbKut2DMwkxxhsBVdE4+u1G80I8/fTPQmNv55ERjbi/mDDmiabQR
8iRlpYgqSBNhkAGnNcLvSNLp/FShOQlmpmTcue4bS3LQgfPUrC5UKSe6gFAK
QUjQA1P3VSkhF2mDVM8rderT2e7TuwI6Sg8UABg9Ip7qAG9pXewswGjZ7TnK
vqX+ePAD2VdgHZrs4Zl3lVdJPJWXWe0SjuZcKURH4U5w5mrjYsjcLmoSTyLS
mTSJ7M44S4K6pKOKo+TsZpb5jbJXyw2siwwSrqRjDrERwbAZ0hD4qAWDj+B4
lYh+74hkSvcz1ONgJv8EM5m37WYlu3WlW2p0PZC2eUbE+HbeTlnKH0Bos+gp
Fyw050EktgciVPKOjOu1yhWajp3rTHQ/s8Of1xf9CaKNCY+JC9CVa9hTrxQK
kSDzd+BLkcAMHTAOGAF70SUqj2KVqRd5i/XAqPviDmqO2ykaHyiuET5gmCRH
N2XpJGcC1qPoCIAdXSNHs5wekOwaXY+eiFE185jQRwwlwUJw1Du43Bn5kZ6W
kkWyqVjkmsI50Ogm2NjtUWYvmHkBnZ/PcYhfbe5YMO7v/emnF4Ow1H3QgAps
t2jliON4OE6F6wVk4A3WWM152xFd+ejQNgXJtdRUZyJZlgCTLR1le5vlqGHm
1oeS74/8MCeJ2rLBYWKlH/UUqy2sjXBAU9C+cyoHU+nzMFlwEqm/M1qshTJ2
4vvYMXmlNgAuhDWXQYRRaySd3pJ0+l2Gc1tHkZ4E38PKwS5Zx+c9YLg3HChi
q7hUc5rtf5KiAuVmtZaWxnbKg5M+hYLRWx6dBqHIvDuhONZcGZ6cQrQ1PoyQ
d7u54lwlLAbTlKFUU7dEDt3N/SGCTDWNTE5CyYhZ1p0kXkRJYYaphOSib4CU
02QWZPo4mhLpOJbXe8wZ/M00RgjQIVExFrUi+6AC7V839a3AXOjZa+zCPxAn
ER+KaZQoI5GMUduBaCXYYzVHLOW0Cvtumx420VKhZonNJU4lPk82677IYbpX
TK6caXSqDBjTtWn4OQe3t44oUEUZzRpCfpQpNulSkfWRQ2d/76mgxq6gQRDz
aiiXtxjeOeiO/dfkiOZhaQKgzAPRSYgiGHe5AK62AUbHWxlkOD4ETSnzntIp
2WSWWUKs2jGmTvWviLw814B133aVc6CAMUB92JII6AQLrsLKgfpZ9hyiQ0U1
q1v6HetbPdRO7IIpLbmA7WsenTppmIqAiH1Rvw5LgLZpxRQPhYoKIdmJrM7S
zBGDl+Orl7AjHW/OKSKqjSSJSZhqQIgZ1s/UaaBg+gspCQiMnqhIVDNAR11V
pxP2BsoWp6J31M/VwfHDBlu5UuFqmBhJovwDiZMiEAxBLp+PMrOrS5UinhIQ
FiwALiSvRx2WAuoLCBH6Fz0iKYpN+EDXnJVBC+35RiZOrRgIJ7bkKzpXcoHI
8bZ9y0wqKApJ6sbSmEOSfcAqOoIFHw1bNU9SzaMTsGjl7I3QuESadTph6nTl
nSZIAZhyAiyIHp+XxXLWBkdLZB7iIBGQL49QoDlsXPKjkhoQdUaSB3yh2H2V
FyywGD7p7qknJHsu2dtt5MODUJ/J5PEY/o/Lyx+jactXD0++ZNeIZLS6EyOM
oPcCaprAfw+dZUVidlbMhhev9LvH5w+Zw15CzNDqQ/NNZHz8imiWrJcq1UBY
8emOHYHJwFlJYQCmZLtPSVmmjU4EdqOaLbTIxT3a5WxJL0pPrVBEnHpXwsk5
cFHC46WnW1Ky5yYnyyDHiEyuSzpYG8XVolUrNmB7IGYOzRWa+lUhVjqLeTPl
OfDKqcRfU9vQxqEMPNecyuyiwA9aEuPrF88vjtTGJj2v4dCNzufF89ffYrST
k/GZIZAcncx8EMd1xFadfPkYYmBWCvZbMO6LIsrVci1dZJVB9SNjx1bDY0iF
CDqZewdDrGVldxiBw9hz7YlEsuVkGVIPZ48fyjHHRlLEUohF0K6oIscISFf6
Dtt6qIDYSzLEL1/Y+u/vhdeOFEzPiaw0cDq16Im8EbUVS4v+D0kv+k9HZcWW
PYuL28ohXwp1S0xGs/snj8EVsjezjWxawV6TrpOUJFohSNPE3lRBARcC0j0E
Y2x5VVl/DTBIMoPjV1FcCbNxT70VEuA8MG8UKYn8SwL3NOws4P3i6iAVyhCG
qjvwBmliUeQ9RG/iImO65kVl2fXs5fGzZy8dHBhO0shB6J8q2+C0jLg8giXP
8i6n6QEK58G2ckUNLEt1lxm3so8aVQZE8BcAP7I2E0wgjj3AyQesvbcHtXwz
K+tjHHI1ju1pLRlzQz1DYNAwTK2VTHWJwSBLFxJC7GqzUiT+yDrHTxc/OFj9
Vb8QBS1+cc2a+oUcy+zQkloPyPg5irWNEDxFAScVvgrxPj8DC9M73x9pqkYa
vlVpIWBEVQHcwcepLgLJ1W729/jwC6kCriNxC6ZEZIt6baQcZxes1aySE9Rl
z46XY3oKaS7i/yZ56yUI5BSviY1UIqsqfrUMkQfA60Lmn1Iu0eXd/eaVau+W
MYe4KXvmgl0HyQJq4PRg80KVCT9uL8ChiqGDXh2AgyNR3GM9WGCBaUKrny3s
RoeYE+XkCto5p5jQtJLzbpT9bEmZaVmRog15wBi8524KgdoA8TW3qFT9uWCC
DAh0tUPk9MYJ78kGhWn4XhIgXRDp0+oZkAbXFfPNMlPzGiaASoJccq7lmNYU
rqUl/MO2QQ2wNk5dhYMTdokYCBBhKfEbCnluyXWHuZwpdAxOTibjI02Y//bp
kEtSfLJW399Y8WIrHZ/GqaGmKjbClGQFdSo+QEnBqZc35oepkT4VLOAoq4Wx
0Fx+AhnuUtUACT8+zdHuaYIF5oWEGWOzF3JXPYuR5LbiC/KQoZfFaVAI0qR1
/VmzMLwYhUjLl3WHjw3DqxkkRDsVMlE0kNXYLmoZkFCQgh2vcoDEKglDD0h0
iA+vKbQshYioBZkhMzpGVnZ6sL+UKImYYLVZhWIbJNgEh62KnQkVeJ7ZdGtD
oYYorGjvI5Zt+Q4wQ6IWsFRsG7ClKTgSTRjPAdc2DxMNlRq+JuaREMfB6IBo
fZFzzgNbTWToF9AMdYV4vpLsf5s5kD3qGc5NO49JLADczTVQ+DDRvBNWNmV7
4JBxwyY2tgcRHAYnpsQLLl79oIVrUMPww4cjxcuUjfEjiyJO/IxLukiPgFLz
jrK5BKxGPdPNjPMoUioUSUsbPEMmYM7iolJ7zqih5cI1mgCsWq1FrwQX5DV+
YioSe5vpeQ6PSAJikhNMk1bzKVHUijQcp4IyF+A79CXRhHqDisNMMYHm7a4e
Bfjteu8Bciiu6Dw6CA/TqIg8MqeONkl7JvmxyKHdsW/KFbYeC5cshaJkhdQ7
IfUmGNlj+oNQjLtg5ASJzm/42EW1FKRW7OtiX5FiTeqKk6OI8dcLnqylQ7LU
CgExJgkDkQl9oIanuj15FCOU85tKyQPuvJXISc/jykiRq98kv5l2ELoFn5hy
zmt6hziwAT/j/ZNgj3j6wUpWRIm/dCCCuayj7NfE/86utKr2pMS234CKUvgA
lhKBZZ1FFptahCVQ1WEoeFtedndabnEyll1az2j7eSXlZoMSURWnE8jWSJQF
D+7vHZB8ag84nmgTYbRYVEuEA5Xt7h6eBmc+djadKlRSP+c1PUdwfK6DiQKy
MbPHoDisOQDbN3xTQYDSqbKoZ3F5JgShMEpLdglb1wiflVqozM9QNbB7Z4y8
dJWg75pjybaRommqbDDizHkrCQxqaau4RIdn8DvZJylHdgbzetEELeoaltYV
NlWsMZTvSmiQifoXe6RERW4QlQ4VdFzVS0BAAog086zUDHYWi2pEiG8jYmop
dqMqeyiJ9QLLopg78wGGgUxOTiJJ78sdWj0Zc/7I9NGAMRkit9d1qZUzYCFG
zBa2+5oLKtcNF/ERW1cjFMXbaVHMHNM3OX9IW0uvcvBHzqLO2Cvr+6WeZNPH
Jzyi+cnJySCzIdHRlowJHARiRFkCdqtvpjAcSM+4XnQarUlDPIkfzDiEVzCA
pozfLJrv63UQ6OIgEf0SKcWJVHA43HznDntUvKIIuK4tlnPi2UyjsOFwChwc
azLmiYgY3hoehcpjcdExrhVm2idngcEoEgUCZFJdLwvReiJkJtwfg/D7V9mJ
dh0HDK4QwT6YSRcHXAuMDt91uwHuSuwS87Xkd8s6n/GGA+p1I9Eh5TiGHnAJ
FBr2K5vD7g4NWzn0ghZcEXJAul+54txXY1uBp5AZxS4E0sKwOl2xy0cUZJ+v
oOTLcVUayUCzdltGA05J54Q7hBOjIdzMEkulLX2yog2+gShYb7pocPEMLFIR
Ds1V/qZgWyKyx8lEHQiAuFBzUgzeTWVyPGfO4jOPTYEQOREemNVgHvbSMOsY
kVx26meNqeTHOqqExnEGQW1iC7/KxoES8+ygRQMH/rUFB3wxJfZZJVX+6CSE
GtAZO+jLg7CKMkkgQtc9QSzRXevOSilEopmHoLIfy4h6VzPryTFX0V5/G1EZ
d/7laXYo0TYZCyRtdBJ8eYqoPZebajmZn2mKn5rxeuWyjtbXl6ej8ej8nP5z
ejo64SpuOrwI7h23wh9i6tDWdjbprUnZLxrk+blp2Y5GTjqJ27e22aC1xn1p
kmZPT61ZRC1WDOkIky+djCz9No34va6Dsy1xebnvshRd1DN/zdKJOd8DJkSJ
wHQH+BnLTaQHF5nmo7pFHB16O2hk4N47iUAg0KUlh9yitqpTiX5l6Z+2WF8p
v78b4SmTmelvw2CHw6OI15WSvvKVeDfyaGL0tDxshdHVs3tMr6kFNTQyjx/s
f/dV9g/L7h8VT2nS6Z92Phv1Ta9hDkNjul0D+SpsjbUgj2x9/NFBbD2dDiN8
TRrFZh0SfGwg4+yDaj6J0i6+McENd8pTO6SF+GnFZGU5Gkx2DiN2kbAIsU+p
sqbVHTm3Y86lMszVEIWswtL4ys1rDYnCCo/XuXcGPb3Oy2oQVtzsDYAjrkoy
27g0EeudVvFPpywu0KqOZvMRY8UeChrk2s06S3iRMzJoqpbotF4vS1W7va4v
R1GPd8ChWkEv4vsnxkrb9HqSvadD5n2G7L9T+ntGf8/p70P6+yX9fUR/H9Pf
p/T3a/r7jP5+cz/lPd8mmclukjH/QRIn3rBfw5XCyeRME43OODGHrcthZD6G
7QroyecDq3Jz1o9kwq3iYKJeS65LnJAK/A1pimzjOHZGvDNqOJZpVbIFNC7T
V3UgniI1OXOca+lZRFZEiJ1QgNLbXpOI9s06GT0lRfxk9Msv24t6KovKKmZu
yhA78FkbCjaP8ObZEH49HdoJp2BIZE88jCy/a/Oz62OA+Sjys67fSE0OGq0t
abD4DHcVtkDGnf3JwE56ILJDhpXSUDYPQx/ATdngNpOKSVoAJL/8Is6kqUay
HL7ih4aGRsQD1eo6zF232uWXDUisSNmfnD6mI34yssSkeHdomM9H356MTyYn
p4PMcgTlsJNVfa610i30IEsrBBPBLYKBzPBDi6VHPN3xKrTb56cUaZSSEj/u
aBFswYFvyfpq1NtptZUPiTDlvgUgYeabpWYfCopjquABnlewYsU0Bk5nkCgI
PI7Lyx+PrJ6F7dysaLwZqTgWhD6e2jpaNKNqJaU1OVpbX8PXCGyQIjVZT4g0
D860MKcp524iHo3CxIC0RmGoWW1kDOLdrIHfeMthNi+HavSOKEsTHN1AoUgd
wBdRadVBco651Clbzt0YSpwQJTwBYDD0ajuSKnAenQghMnbPCvbvznxS6ubb
2bVXoKWdVs/G5ylBA6kdSsvIUSJmaq5BIlFHP4UYGBxZMruKr/pSBtOIwfkz
MZbka19gW6RBegTrMRge1hzXbZXMW2IFgMuiJMfNwKqRaO1mzyqcLxFZQlYs
RxdY57d0H/2OuUEx4YwOB2BTgAcGRQwhpX9VnCXnAtzGTWD0Mp+0ED8vnNXb
xTTSsz/gAJwr2HQL2FGNSTqhCfxhFhXREUPCvB731ZOLLU2cKaNP/NGnMov2
7UwxD0+lfy7GH3vqYiL/TvSpi9NdT01O0zYnW09dnPV6Pd/V46T31GTnU+/f
T0YTe2I0OT7+9VccA9FT+PP+fbxEx8ej0a+/JuuVSVtRd8fH+O+vv97TCrXB
n3o7/UGNeUBjagYP0tAwsPG9K3Fx/pX/0fWIHxz7g+Nz/mhkP8cPXjy01r7U
lQr7cjE+CQ9O7MHJ9oPY3fvoI34u7VqpbZI8px+eZve22G+vtzyPt567eLTr
QaPIqL1AhmHWozPb4pH8pU+EYs7jB5O9tg8SopFG7iOdrE89ux6RJz5CYUJj
8pN0vIPCMIVTprGR/Pzrr70lHDtLXzz6KvqDhUwozJ8bT6ihc2vxDN9s797F
OGx19PH2g/6cPHgxPr3nwagRfKzPffrBra6V6s56D+rH58k2b/1JPg5ae7+S
qJbJ6Atr1bEOPoi0pvff7Xj7wwcOg3NIM0DKk0eAFl3jxkDW7M6j6DZXnGAd
TmGBcVQ0utKGQdvZd70spou3b7XedhqFZXAFQ1RVN0OuflbMrs37zhkZUt1H
07haN7hIm+a44m0dwo4WX2T9W9Mxvbhoi6ChaA1uMJMotG/lJT+/xAoQXXBy
po6G6ImJPPFKzbazOHueqNxa1XqGLpOSZk8HSZNnybfjyXan5+kT4956ifsA
UQ1dNPV0iN/TERkhoM5tR0UMwobXHABQf8SsiIuw1CHTRwrtoSYFEwjH+9yR
7/HnF2rEGsTnNuSpwJbR4paIQM4Zdy93vGjgg3tw/HseTxewp7xt4xijuCr7
QxhEBTUjvtkZ8Qnmq4ALRl5jJvWy+MsovM+G3ISjsGTc+AjFBlM72fycGj1R
bAH4hyG6XOxd6zovi5s8go+FEGhE1zb5YCfzQqtCHkG6Vcv18Wrhe87tcL2R
rXWBKMT5oTA20YFhuKSutKDyeMd5qkJsgwisEsr0cY4MV3VEVlQRxRF5xWUs
bMRGYxTHmjhSIPIPxxMujBD4JK8U/sUV1s1RgOGSMnk4GcePjzmUwU8CUz6e
DP/p4hH9Pae/4wE+IJs/oPGpVQ5FZrsc77Ri4wlM/tH4nP4h6388OkEByQZz
QYBQan1rcUYlROSknrwdTyan4/PJeDI+oQmOJ5JgwouXeDuieXa1RAcuHtER
MQn+F5aZJGXM3ibBLk6Em/qNNMa0vkXoTI09skkETHYKD1bijo9bksuWBMrD
3RMdcKSidau+lzFfstBmmNO0iP2wDgrZscwhgzlaZVoz6/LeqImBd7b2jeeI
zAydpSW3WpoPo47kdhJYmxceqcnh3oUQx8q2H1namdyBMZoMYtOXuXfHOqMA
EUd4okme7FyTcLhGMTOLU94T1woeKmo1PYHG/ZlrHeWtFRgbsCAX/2fUnYJb
QljYnbIArWtE2xfmJC1xJGlXkhKboUD7IJIkcooxLWv9Jbk0DikJJKYE+jot
lH4V2qqTfSLXPkBetHKPWVj7AU83dbTlvfeVt0/0+oiLR8IpRUJlwKl7pact
GkiO+gEnGkqnxAzrQiMV0dTv41LlAqSNv/G4djrYySnRzNkIA7YdJdujhKjo
sSC7nV3/ABFBvb73LGS1jEfYExHOPYmqw64zMh1jL7K/RnRUqgq0Pc1oT+5b
Hk9kMeCpejvTtUBMQCodFVWfM5KBj1Fp6d4FPWexHq1rlBfceaEQfdqP4QuL
tPP54oNnWIXm1S+jLF6e4m1+FyT7OHERJk5TK1CC23iXS0uTCFu55GJPi7x1
hpKsIp6Yyw1z1THUVUBH7uiK5Ymcz4Kb1aoV91B5G+BLibPUvFM43ManqOlW
g49SR14Qe3x4aQMhq32XGJN0cKYRSR20wvocRtvfo3P1bDdtGGnslJtRrfG4
1+BQ9eLogLaanrrjWExpuvTs+YHVzXfYCKpLG7wplD9hArIrPt4UxRr57KEY
FeKHXBcr3FkUUumisk2+/IJBNuieXzyoipslWsuNZsJg959rotNvjaXRwXBG
eKQFto4Czz01NxE2Pc6WInSM4NF7AWsJlnKwcloUdq/SWwajp6hVzzDSQr7Z
K9DwVkpBU6Aafiu1quQylFQptSo16oX15LjoArw86193Z6geVu5D8kBcV+CF
LjZXuRN8b1w2KMoFEItDE3/u0ixBVtoioFEaRRxEeYgtL3qibnO3lYhhL2vV
preFOfqGBwnzC6nxlaQHIHFOl/kLy5MN6HWyyixGgftLYEbvHIIWoWs9DwXT
3wq+Rz78w/QQK9ojT6eCW/5WLosTbpvVVWFRHb1dDNGIh6PsucRuTE0Onv66
yfod7O8dfgTlcCS6jZnQUZ0KEK+BunHYcNGd08lxyM61XGgJkYysbqmBbQYh
ziMhPl2/oaxfRCTMVhClEJPz0iGwIT6g2IeyicSCFhrcqmlEE+KYtd3Idkay
+W65hYlIwuVo/xuJvkRvbK1b/I5nRd1z44xj+1KyiY4blaJEvODTtuN6QVdE
/lJMYqYIcbbeYus1cWxcS3UvOrbyaVz+SS8eZLw7YKNcpH/DNTy9swPWoUKQ
a5OyQWbgfdQyLG5ChDkqB2v1SRAP34qEp1MnTZaUaDomSfOlx7cyRZA79d2r
46+/e2UXIeP8ukapsVrvZm0qK6pltTJYvzKAnfgIKuTT6c0xegGJGMF8n5Vy
G7uJuHhMWI8y1AgstWCFVYm4KTiNXctjXjP4WhFF4c5xZwBZoBQJPYioGRmA
+m1U9BNCcX8PqlAen6i8dgO9dBAHYeX1T8yPxViDIZks11yJin4OhUQH8OKU
M77SIVwbJ+6tUEojKoMpeH9L6U/qAZrKFQchdbKW20kDvebbOjW+GN9/A1JA
DjjYwO++MjUhuovN71yIrqKikdUSmw6sIhddpvF4q9vAwKauHrLlFV1l0bb1
tNTzkOhivQy7Kl3E/OEOqiGIfQgO15UN4x9ll1xeMMxnKpiWjyZd9i5CMQr2
i669whvznGYJPz7zZHT9ljV4hEfr9fDqbkj/RPdGJHMVj+tVdHmKyqOymqNS
gYIjBhz8DatiPZ8gP9lu/1T4MNc/vK4Zcc7f8O4IKYs/VAGfvVX1U/dlvtLD
9osvJFbbBJdn5V9GgIFBnEEgdYHz1jS0pDqIIqZC1iTf0uyoJFGPV1xbkYdF
CqDmyBigW+859rpQ95RYjNJAwo19XKdxsmKoMItFO+iiok37e9+8vOQU9Aj9
JRUUJRsqtsuY0Sx2wLhAHzg3YZwZiuSs2GNbgRmswJrUV/gvX2WTk8GJZWOI
mSZ6N0PMrW5ASF0DJufOYLnRXZtaCBCNx9e2gGtS5gXGxuT9sSsFXjtU71Ih
S0XKJUpVzniKIRPf9s/UznoTVcPw2W+dLVa7EdEdT8QuxcUuY8XqY0McnCAE
qEi0NgKtseVcRfEFOXR5lRjPJC8y9aNFvgmSDuP/+7//TxtXro1yEEfOBJdl
CGD1eCGzQ7G/vIfUy5FQEqMj9Xowqc1YppVq6U3bgBAWCR5utZe2+DCqJqGJ
zDMzQXneUo/FjK0ojy+uTPG1EnmcY1vF1aZjhdG5KiQp1pX5vmhlYVkfq8eO
BDO1tq7FjF4XReMGq0cC0rt4ebwaRdJEDS2Rl9h0XCAi2JNWJ7Wv+tk9vEuY
21EpbCkWT8fvdSVNhcIVDsdjd06sXkbJxs6VUejFFESawW1UgLbTmrsBq9fL
QY1gg2DqGHMpinVvgCoNb3O/+0+qPcFZm5cNBwN6CmAOZC6+0ZOCG9drrF0X
52k38yl4IMpYw7lVJCf5u3fPynZav3z6Wst78Xi2ryxoSGAjc7bKoiRB02DX
NRB9RVQ0TPWupBxh0Hel5lN0naulR7FpYMhnCEOOJ5eBda3kh3Myu1gSavIg
NMa4xJY6ZrVP+HLEBT7S7O5+/3ytnBfMzvuTUxwhmRyznDFSy1D9z7CuolqL
AmASIDl1OrhFOuYqQZWC/aICWV4uObrDymYckW2ZOBoHsGiD88yilCGDFmQi
9n3it3qhJ/I9Ii2K7HOVXqyZhNu6mvmcyEwvYfNb42YSpAv5H7LWkTpsxYxv
pQq2iwp4X0wExAAD30NGpWvSffbq2fPjy29eDsOlPOolmi7qurVQmRrffZYl
Kp1KeptdzJHcK2HxFbw/+ggFqjBP6O8pwuAFZP6SOdz9QMm1bFd3nJDLID/I
bK7FYZc+8qRzu6E37VJ5yyqEBmBndhjK7xwlGdf5VrnYEE62ynlRgNlKcVqR
JDHGI1eDlVPSaOIV16PGHdJyZ2ne3hl5BGoOPFFXsXKfO0qWUarioTF1nquG
Fg4l4RNZEup35BbptnFanFyH4unTh9R1Ubjac2TxaYVW4mE6vNH6cbIyDoBX
AjUVRq4MY38JKyR4SGiTcd9BIehhlHtbvH06h01gZ16PeZnFHC3BtBZyoT/N
wYxNICIdqn5v0WzRGyMzETE0qwWVB/uE5/v1d6/MJoTSzqFPkh8IBN8xhQfO
klsVZsxEWogjrhBqYTa+95IH95H1UKbvBayszDrS8MOVxJhiUMWbAqhgyz1g
9QGndSQAQr1F0M/nDiKQR9/nLqaCC61Do1XiJ9yRTvRJFKg7xXqTOcq33kBZ
08tXR5gHJBr9nFxtAv8NKBcVTyQMLgV+1jlu+MhWJAy9pBePaWtudqWHRjho
c0ONDpzWwWMayt0raFwSqizhhLVBWtOCqUGvpOZXAsxZS2YOzF/UZSE7ZBHd
Ihzm2CDiy75tuSY5qhyBtVDHAIBH+OrqTu9p5VrDwXBQdrW5RjGkuNdEBJry
nfDjfeTnlIcxBdxNf1ZlVKA+li2sCEgx5c0aBhTf9SlBwgZuwjaWKSEiwpUd
8gorPy/VUP+YRNHTPz5MSG57BQaUA8k9NiUXcogmxDrsTREleh/wrThy+ycN
+oD0CJp6v/Nh6PxYw3dDndiUTQj25m7oEbISOiR4B7d/NJ5eXs1ttGpe5lXO
GqK8He/v7x1GlRj9Fbm3u1xrkpQty64WjiREr4gvS0ZjnSHS0YKqz2EWWC6x
UgzNfrPGm+G2H81NiSMOUWU6PrAPcJweSJQL4pkPHD4cIIk9xTjUaQwiVkL0
sndizNIHW2eTVb2y8xlqibjA+yQXKrSwzR7tUNbT2d1M0FJVhZlgtN86IUYO
+WbEp4DVidbzQ2JrUrCMC6dw1VarfFcqAqAtlhLEY1QGtBERWwNDdrShNvad
FOjODphndd8P3EKR6tyt5tIHXJoyOeL3XMfenjxAoT6SPfhnUXfDdd3lMIa1
gYOtFohXBqlslJWBF/sqrog1zAzXB5uVBKiktHKvndwqr5vGhuTWhnEyx514
f6psO7jaWRiPRb2XyfZAC6mwsO9pchb4FUiMZrCVXaJceIaMOyX4Lho++OWK
Kb/+G+Eld3swImTGFXQWpdRy6mLduI/I3Cm0vGp3VOM2r/TGczBB04lTStLZ
koMBPA27IVhUltt+CF3iKNsi9ddyqx97RDgezVVzOF4l92EZNjC6LkYuKznQ
3wLZsXYkgAet3mDLLoVuEMHgi7OPQUY57sDyEDouvFnWGxIKz/RyMCIxOX5E
IopeLJc2ENXQsi31migdWC230IXq5KPsezIibxim6QshxdMsCIdwPbCIPZwZ
217svLI6U/At6K1p14uh3xoSXA3TcNDjriyxXYOEMi7qrYgq/2Gbgo2viYy0
PEJq5tmLarlkP/8YVpLUUpRwuNUCSRwcp/WKpLoAc64X3W3BtTfkTOvkBnRY
lJvK4tSeLSmBgLQ+SUyrwSWlt0BsLXMoyiHpm4Zf+N6y5lIkgonfb/sonVC/
WYHR9nVsfVhxFw/v74DWGLopTXZLUT3Kqzvf9hi8XoiZ5B8WUfQ9BnFIu574
q/azwVK8iJYKH3Ztos66W61wyL7tDN7hMVBnNA8dqyGrFqtOJ6p9fYuNkmqZ
+knpDpi60czUywspHuzwGfYdwYx8IfoUS+uyA+uoYRWvXoxaiImps/v7kFDO
Q0/gWOLqF7n1G7EQ4niaZbyAU9PCgKH8Ssi27mGqdu/cIWady8lA7fAUSb4W
Szqo10dJgZYIT6dw2KReSz+PdycSdYjSd0IygcFp5hp3bBBojaAOUZRToLcz
3+Z7QWlxEVxFPITTPiC0GE/aiUmhoLIAoLO1S8BkwWDXukuKIiy7EOUH+qWy
u8cSZiVJaQEc0xA1M3kQRzrj2p07auuKSWVY68/ZYjknvQwmTyJ6dTdczq6H
9STUsuJiSPt7MmZZQrYQ2m7YkrY+47v28Nu0TkENUiFew/1/SvJcr4q7WvED
yR0iUhRYhCQpe29cP9kqwBjdiKOnh4dQsqhYkFzfKiLKO5nvSCTx8u9S6Uct
QYP5BHdMsCpDXhG9r7iDPrnUUiJuNyI95iurOy2qVJWgJHfvbjhKFHTCJZ/b
RTnvPvYaB5JwTpbXG9zvY0jdDZTTgDjmA90zslMaCQR0VRgHeajY/NUSokne
Y+bxMIAShGHB7FqVcJtOEjmKL9b49oUecDtr8fGtzjKStMok13LvCa5w70ri
j7akHb1BVYK73oOmbBch111iKbIg7AY+Jl0IDpzK7jlJCspvF41VX7170sVL
uGTJwvFpQ5kkccKYzsGEzIHCncKaO7PxpdYYnLvOEFwZTor7cTFLl2VszUS3
yFkqfxJOYSjfmq/H1TtcPOE/d+snvS5RcHDP/ZI0J2asm1m/jA6u5+UyqlRG
PR+gv+RCSe198u80SHYQHiRhVCUhQAZdN/Iar5BfuWxP2gbKE6gVuypyddLu
MJ1zviKN9lnvY3B/GFOQ+E4lYk/TO/DI1IGgXA8Fuh8CVoCtShlW1pNzK2AE
HpZ6ilaog47q+tZBvqoMHY2yf960qiWr9Epv5/CiO7vKssEBELCMPiXj2R97
KFy+6sLOZb6gUgnKND27P8EkQTW7R43kmsWGConq0LK3TTRtbkuBgE6hUIS2
SXyqKa6oyYk+VyRb53dyMMw3XNwkHGetZcgJY2iM+kruVlb+PB9PyITpCrlx
IpIBUf+m73XOYXF5PikTKsq9SCe9ZwQxlLxp7noxRSU9vFJMN4J0Yd0FLu6m
uRNYDg1NLYjnGg1OrRM7VmyPgmy2b1orJs/HwoZx4nO+3sECn86b8WzKuDi7
pDZr0vnJjozpXdUgJjs+O/U2xvT9aXaWnWcPsy+zR9njP/KZtPJg+Df+T5p5
/7NETd7//Dx7//zZy/fZN7QGKED6A53T9H122UzDr/T79/U6+4EFCv/+9x0N
9278YyX1uTaAPnBPd/b6pXBi8uZf/+f9xzv943O0zPequBUSppPiS8t7/ziN
S/o7LgHl/XqSPbWAl8VwoiqiSYlRU6IF19UU10DfOjojwH77zbk+8/PzJ5l2
S4yoftpRhlpWF/EVGip7uBqx38oiEQu9TscUgoqvB9OWfKDsaeA0aY3BsTgS
9zVX1MFxh2CD3XTLgCvEUGx0fLVXKC4akbJcW5ceGbtoTQqy4o4dyENq5WfA
ZiUFWk7DMRHV5PxcH8j+xCGcLlwooH2wZ7SaITv2LpSF156Dg0ez9Tj8GxXn
a1LjyHOg+XIZZ8hdk+pxwKfnc5LO5/W9bbSZ64wm3vVSEJIbT7LLQq+eOh0/
fKT32LCarqW1ESeaSYRLi3ZetDdPnIL4E5ctT5CmqzcRiLLT2oWkN70rUdJ5
M4J/1xmstzGFK2MF7mS7JRtR6q0Tcd0rzxKXAlBCq1K72iygJ6LOK1gTgCxa
Ec2O4JteSnHczQIzBrZ7rV7CZ8s8siL8ygGLAVXqY/qtbrQ0WRoiF1DAw3AP
XtLuIPvm8tkrDxZIPWEgJbSMGqtp/1Jf9q80sECpXj41oJa7ooq9mESqwfWP
FqIsl75y7JBR5mbFLWqFsJA/wkDqnGWElxKUVTcP0aaVMpLXCJmCFtd826/e
UinX7kFt5fHou9GwAmZJIr77e3iuL4+iTGKElYljaaSH9aZjSpSi9VZJ3Wj8
SHMiOVLX1MtyLhgFDtBclbQMHVmlBlLx+0J0c2G9aecj9fkJGA8gFfWpanhs
Vd+YZPgWevIP7NoKIhv0p2agEMaCA9/qRYqRYGYFx5TFye5CPpIaYlFGcSvH
F4+mJhvQ2+26jPy7OzPV5KLDoGFJolFUCKaYLioF1gnRzEqG0qNtDcDyNQFa
h5n2VupVW2BxZZ7n56PxwzNeEPxADS+L9QInhtVroWkaKQPLSAPALrNWjewM
tmzw6REco7hQTSGuPAKHA2F1l+qgDhruFV+gYPPzTfOSmmoGB4wH6tUH2y8N
w5pz7Tu+WvouwUjmyLetjrlmoWjn7O/hApwwNwT8bjmN5rqTYrSGUd7fO9Uy
7F7KBrdAvl3bVT2IUnGle7b4z/2mmhOOxRVvORQ6U7XCakFKi1zn9S66LoJ7
GGU/AGS1CfOIhsoTUE1kPDk9c+QBH4a8hQbhAxPiygrMHwQjbOughQENIufN
iSHGYcFUwm3URujdyeNhvCE/bCEdmK2NVnw3vePg5CDroxnRtXzrxU6858HW
01tbtb1EeDtqFX6Os/FYs6y33ucn7diJpx9mDkl6giZ4mUde8Rez2bGxWX9f
aUk21Rsl6gAQsboLO7eLw0/N5+4V22gVVFYZ8Kd2ygOEH9+sk4Nt8Kl15Ats
dTK0Hq0Xlmqzs8e8pYEdpSW/mW5r57PP3PNsSJo1te57Ij6l3Xwyyno4BW3D
ijga7J1dOIJS4gh8zgn3ij0M26EpmKR1zyQUjGWynf+cxcVezQqtMaG9iMar
RoXpPz9dPo0LZlpAhFfthCbusx8E5Vnfk3LIeCgd2Ec3XLD6th4DCSz7PWTQ
aflSs7ASH6Edwe11fJ8kF+7w22KJLq2p/lETTJmojq47gRzkS23GqEBdwmG0
T3eCdHVbQqHc4Y6lJWkQFtkXdYSNpUA0eqMeqpNJ51cc2y6y+w5JOI329x7E
RKm5Dz0NY+C1ZrUiMSJEHSPVQ6MGl8PRetDWdXWAkm642Jrv+xvO86YplkN8
AzOiacobvyuSnYmiT0lSky2KEF58VzCx7HM63xb/uQ2XeacH4C4CZExaDm+q
OCi7Lp8uwpFNjdJW6P0t1qosmy7WgG05AF81cVZVEHW8KfSNiKtu/JZISBgX
xu62lsvqX/38w1NPKU1OAnADvt2OmZycnJxmiQgR7DlUatpqKDEKIjmwvT/Y
buXBg7QR2XIp/QBv3Y9FM900dwYwQ3YAnUM/FxWp5xPukdc/O9XgUYbYmoEI
IvAYqqu1Cl9EuIK5RS9TYHmg5TCYljS1WZVyeaj3Ei499recoy31i7dcRuw3
1hoAzi+eNLczK5leJCGcZY7piXRYXVHHtvl9HjtozmqqdIKd5ATzISkvjdxJ
FSGekKqykIKEmdQ9LIicPnwQkhDH1CVxyhP1Ld7v7xr5E5cggexSxmsdJU98
ug0Lkx2cHqRPuLssG91TDpK/udHQ/qkcCTNEdqxODt/9MYObX9oZjd5L6Qti
JgQ1X0IIZ1Yy1O9ZgVpqiHfbn08P5N91ICc7BnLKEIRmurUuNvmTgzDrdCDM
ZkYTW8P5+PIyTuuPbGh2IPM+iHfzj26oT+rscbyl6YY+GG7/eZBsKPSiz9rR
Z3qahS19v2tH7dDbWsP7h/KxLaXh/dV7eh9xfcb+6Cx6G/RX7g8J5LBDf3h/
IM4/c4dgJEQcl92zQ3js77U9GN3nb9Dn0sqnVzeexD3r/+kdymJtns/d5In7
/4TIQMEaWBoQSA4EWBOicEhxEg9W+sUGjtF9+fTppYQNXilWTqKT4nuO0m8T
R4BYfg5xlMxqvlIzxpSYfhotm9lKen8kI+6pKS9jJeobn/7hc44I62VQARSm
ljzOPcOqcJGO5GBVRuCM+xSlsVVBTbXHKqnzV7ZGPVb4NTYBkzJZCt7397yU
oNszvdckO45Xx9dMccR8OW3ZFVqJRN23WzO2bH3miGiRojS/+1BRJ5+zJorE
+fR6xIzBfiyjCHFnRIOA2VdqORINQBe9mnGwehlw0d5KFgruuf1Y8FwVN3eG
WoFEKf8itVwUvzTxYXac9aQpFycnoVJgK45Xwzqepm8o1v62EGvgEBZI9o/D
I2rkUrRm1ZleRrQR2ZRc6LGztBstGQwbU2rMhK8ZVinpnly5ii+EjjRJufVG
y8LpJbPqRIhrkfE9bmzwzTvGqjIugLRyXL3W2c0pFluLXEgZnL+zmJk0D91S
FjkD6LOMYa9RBoSl3l2J8g4X5u0E+Om2f5mQJxamwAbbXFpkRpbu78mlbpbK
J17uSxrqlO0rCTednI6hD3+z8Umzm5Ihn7eoFxegMJwOM4vSPMUdTmNS7BLj
Qr3aGUifK4ACwuEJLoXIKdzgvczLlZgLUgUhgTzCBrSUfLuURQqOaVlRrQTa
qwHD7OFWhJskOy5rjVP6nokXfGZg10H6tr4RMD8cmnTHkd0ADAimooxNoNi1
PJmizzmmcvj8l1cCon39+ofMQmutVFfRC0StuprtGk+5EIqSFQzuKYYSRfag
lq5wUzhv4/hNL8vcYbVJylU0fxSMtonzpqj5GDfCZqQC6RkwrSkjLQx2Xg/G
DLpYjACHbQHiYCy1FIahQWxPOU4oCUCrBMKviBROTC0alPHhwl2tQVUDFN9c
PVESUkCP03uh1vRxtG5bFZYAtcEtS/0vBIRTasEBrzc+i7O0PE4ld3gW14x0
s0wqQ5Uf8/06SSE9RoxpyRJLPkHRMjuGQkIJDH1tKKq0E8InTZEmxwPubjhF
rwKphdD2904nEhtVeOwPl8/FhpZbVuNkthg4WKwk3VYo+fI5DjC5vDYU1qOd
n5wwMlBg5R7RWZg/YMx9M5owlFKMUX8Wf4Y36ZdXxlmDlIgTr4RRNFcz4tIG
zMqa4WSpNiFBT+fjV57i8EFX8C2DiQXct70YKp5SMOWcr4OWWhohFGydg3Ad
y2DB1jTBT6R/XAosEZ1XKOZxYw7pTuB3Q87+SuSADJ2JNAqeZu7z9IQ7CC0p
6NAP83qKCL+gXjpGppKqMN8sFWNuB3Ar8f1U5ryoNApZtpJFBaKPuFzBtUHe
xXQPL3LvzuXAA8zL7LyDU55f0w2Zo+hEA0RzJC6cwIlmrmmdVrncy81QVQXV
GNXHeM+QXioFxSTkIHVruGArK5BID1Vdpn9MhMoeugVIgNF95lCQqcwN2Umv
AxxRcAVY5jkDCfLripa+nLYKBhRBTV0XK2FyztjmGD/xd16F4pezEpf11muV
zrJrzJsqQiye38W5NLK+uvF8bHCYVjX7xFwwDILg1+190eFFE2SHY1LPMnqS
tTnaprjr/jal5d74ZjLUAby8+D4k12OHX//wsyuEtq5Hcvhuqpxrh1mAqWyD
/JBoeVR9XBDu2iNvOV9Fxh2KdbkF0ooKfJlF4UV2yIi08wCoHpyK+PXdu+/z
+m7z4YOpI0jTSArv3Kf7SnE7DrMwboAZfVnruSFpU6FWhzh8BS0hXOASKm0d
RzFnoazjZOyofrvBlUUVgLVm1U1iXDaWgWw8FJMNpXag7zY1KxpEbPV8wIp5
wmiKlLiUPGpLY6ZDvE1AEyzl/e7iqCg1VCcinkKuLGQNNu86vi31ptgxXWGR
JRS8HFl6fQBVD+4cVM+6YxzQMlyLuJUlEaHUDtebdnG8rtfH0PePkB6Q8tnA
EqGGntbk4i3U1AvOm1A1iFfsVdx8tBlBIQjFreOKQyJ8WRpFN0FzXtqOWl+x
6hvr/FqkVVPucEE652UwNYbwhRZTZvQIKndy5gPNRPMb4Ocqb6BOWBUXFjk9
RE08HAWJeE7Gdv6R3jiATS0EvROi/OKkQQ5grw5nuGnPjmfJ8TBge7q0STlq
9oW4PyDkCTB3Op1rueu4jmGaDB2XydaSJ3dRJorOigHqtwwq99rWpomEhGpL
25cbYsT6C7J+CvwbixmHMZmtu793oHnpbHRdw0FRV1I/6UDzM/3OYq01K6k6
ouYX1QLGvdXuL96ulxBMh2JoWEieL/zR2zjNIBtIFUbiNlTnXWiqCWQ7j96v
Nr3JW9QkD1sagY6QqRiSkuOqa1Jd8OGE7OKB/zL58OEoVG4VKFgbYScgbwaq
4njWh5FmP3E3v6pZCmn8jfVBkcdtFJeWY8eiqmSoSDZSvhwgxzVvhrQfq+gy
H9W1erVcXeNObnc2KKbIj43CyDI6/3pXDgeFdauIRBnXfmbTjnj60OYcmach
9wdOsyNB57Uho7hXYd1SfjXRI8JG4yTzIkVSkQLrPpJg3v8DS2DCkFXeAAA=

-->

</rfc>

