<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.4.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="draft-eckert-intarea-functional-addr-internets-00" category="info">

  <front>
    <title abbrev="fa-inas">Functional Addressing (FA) for internets with Independent Network Address Spaces (IINAS)</title>

    <author initials="T." surname="Eckert" fullname="Toerless Eckert">
      <organization>Futurewei Technologies USA</organization>
      <address>
        <email>tte@cs.fau.de</email>
      </address>
    </author>

    <date year="2021" month="July" day="12"/>

    
    <workgroup>INTAREA</workgroup>
    

    <abstract>


<t>Recent work has raised interest in exploring network layer addressing that is
more flexible than fixed-length addressing as used in IPv4 (32 bit) and IPv6 (128 bit).</t>

<t>The reasons for the interest include both support for multiple and potentially novel
address semantics, but also optimizations of addressing for existing
semantics such as unicast tailored not for the global Internet 
but to better support private networks / limited domains.</t>

<t>This memo explores in the view of the author yet little explored reasons for more flexible addresses
namely the problems and opportunities for Internetworking with Independent Network Address Spaces (IINAS).</t>

<t>To better enable such internetworks, this memo proposes a framework for a Functional Addressing model.
This model also intends to support several other addressing goals including programmability
and multiple semantics.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<section anchor="overview" title="Overview">

<t>Recent work has examined the value of more flexible than fixed-length addressing
used in IPv4 (32 bit) and IPv6 (128 bit), see for example <xref target="I-D.jia-intarea-scenarios-problems-addressing"/>,
and <xref target="I-D.jia-flex-ip-address-structure"/>.</t>

<t>The reasons for this interest include both support for multiple and potentially novel
address semantics, see for example <xref target="I-D.king-irtf-semantic-routing-survey"/>
and <xref target="I-D.king-irtf-challenges-in-routing"/>, but also optimizations of addressing for existing
semantics, such as unicast, that are tailored not for the global Internet 
but to better support private networks and limited domains (<xref target="RFC8799"/>).</t>

<t>This memo describes one, in the view of the author yet little explored reason, for more flexible addresses
namely the problems and opportunities for Internetworking with Independent Network Address Spaces (IINAS).</t>

<t>To better enable such internetworks, this memo proposes a framework for a Functional Addressing model.
This model also intends to support several other addressing model goals including programmability
and multiple semantics.</t>

<t>This memo calls the addressing model functional, because addresses are constructed as a structure of
func1{parameter(s),func2{parameter(s),..i.funcN{parameter(s)}}}.</t>

</section>
<section anchor="disclaimer" title="Disclaimer">

<t>Any proposals made by this document are explicitly for the purpose of presenting
example options of realizing concepts introduced in the memo. There is no intent
for any proposals in this document to directly become anything more than just experimental
implementations for proof of concept purposes. Equally so or even more so, readers are
welcome to pick up any subset of ideas from this memo that they are interested in and reuse it in
other designs.</t>

</section>
</section>
<section anchor="challenges" title="Challenges">

<t>This section discusses challenges that gave rise to the proposal in
this document. It explores in more detail the core challenge not well
explored elsewhere and already detailled elsewhere.</t>

<section anchor="high-level-observations" title="High level observations">

<t>There are three core challenges we can observe that limit the ability
to build more varied internetworking solutions for non-solely Internet
use-cases with especially IPv6:</t>

<t><list style="symbols">
  <t>Fixed size address space: IPv4/IPv6 address space is fixed length, not allowing to adopt address length
to shorter or longer demands. While it is possible to add more addressing
via extension headers, there is no option to not send, or shorten the
IPv4/IPv6 base header addresses, when they are not required.
While the reasons for fixed size addressing in IPv4/IPv6 can be understood
for the feasible high-speed, low-cost forwarders of the 1900th, when IPv6
was conceived, these reasons are today (in the opinion of the author) as obsolete as ATM cells where by
the end of the 1990th when both hardware forwarding and
mathematical models allowed to provide all ATM type QoS with variable sized packets.</t>
  <t>The Internet as the primary, if not only use-case driving the design:
The address space semantics provided especially by IPv6 is very much focused
on the one use-case that drove the development of IPv6: The Internet. While it
was and will continue to be th core and sufficient reason for maintaining IPv6, it
is not sufficient in the opinion of the author for the much broader use of IPv6.
As of today, a likely overwhelming number of hosts using TCP/IP(v6) protocol
stacks are not “on the Internet” and the majority likely is not even 
“connected to the Internet”, but instead, they are part of limited domains. This
even includes many routers in large service providers that are used to service
Internet traffic. Routers in these networks are only in networks that may
be called an “underlay” limited domain networks using MPLS, SR-MPLS or SRv6 and
Internet traffic is tunneled across them. When the network design is secure,
those routers are neither “on” the internet nor “connect to” the Internet.</t>
  <t>Transparent end-to-end addressing at the core of the IP/IPv6 protocol design, but an ever
more diverse reality breaking that design for good reasons: The current core principle
of IPv4 and IP6 is that forwarders have to be passing network layer (IPv4/IPv6) addresses
transparently and are not allowed to touch/modifying
them. This is the core behavior to support primarily the Internet use case. Yet,
the IPv4 Internet today would not work without NAT, and arguably, the same may
also happen to the IPv6 Internet, especially when networks attaching to inexpensive
Internet offerings want to avoid complex src/dst forwarding for IPv6 multihoming,
and/or avoid renumbering upon change of provider addresses. Even more so, interconnecting IPv4 and IPv6
networks has resulted in no fewer than 24 IPv4/IPv6 NAT solutions
(see https://en.wikipedia.org/wiki/IPv6_transition_mechanism), giving rise to
the question if and how on-path processing of addressing can be proactively
become part of future addressing designs to support more flexible internetworking - 
translating the best of past NAT experience into better future designs. This is
a core option of what FA-IINAS can do.</t>
</list></t>

</section>
<section anchor="internetworking-limited-domain-networks-with-ip-addressing" title="Internetworking limited domain networks with IP addressing">

<t>One of the core challenges of the existing IP(v4) and IPv6 addressing model are the
addressing they provide for private networks with or without connectivity to the
Internet, which are also called limited domain networks <xref target="RFC8799"/>.</t>

<t>One reference example is that of networking inside a particular product/solution/installation,
and then compositing this product with other products, probably even multiple times,
hierarchical, as show in picture <xref target="FIG-network"/>. These type of designs are traditional
in industrial networks. Similar issues and solutions
can be found in networks with multiple layers of NAT such as Home Networks
that are dorm rooms connected via NAT to a dorm network, connected via
another NAT to a campus network, connected via yet another NAT to maybe
finally, the Internet. Similarly designs can happen with more complex
topologies in federated private networks.</t>

<t>In pre-IP industrial networks, individual products were hiding their
interior elements by some (combination) of elements that controlled
the interior behavior completely and provided only an abstracted view
of the machinery to the outside.</t>

<t>With the introduction of IP networking into these type of solutions,
the ability for gateways to become IP routers and providing connectivity
into the machinery throughout the larger internetwork opened up many
important improvements, but of course also challenges, especially
for security.</t>

<t>Benefits of network layer internetwork connectivity includes
options such as control loops that can more easily be built
across multiple components/levels of the hierarchy and controllers
that can be pulled out of machinery and positioned elsewhere in the
network, enabling virtualization and resource multiplexing. Multiple
independently running control systems can be implemented in parallel,
including solutions like device vendor preventive maintenance telemetry,
operator managed firmware update or third-party orchestrated security
audits or intrusion detection/prevention, just to name a few.</t>

<t>With IP connectivity, all this can be built without the need of understanding
how to get through various layers of fixed-functionality higher-than-network
layer gateways that can not be extended by third parties. Instead, new
designs are based on end-to-end IP connectivity - plus appropriate set of
security mesures at gateway routers, of course an appropriate set of
security/filtering measures, for example MUD, <xref target="RFC8520"/>.</t>

<figure title="Example hierarchical composed internetwork" anchor="FIG-network"><artwork><![CDATA[
+-------------------------------------------------------------------+
|                               Controller / Gateway->Router        |
|   ...                                  |                          |
|                                --+-----+----------++..++---+----  |
|                                  |                         |      |
|+---------------------------------+----------------+    +---+-----+|
||                                 |                | .. | System 5||
||                  Controller / Gateway->Router    |    +---------+|
||                                 |                |               |
||            -----+---------------+-+..+----+----- |               |
||                 |                         |      |               |
||+----------------+--------------+    +-----+-----+|               |
|||                |              | .. | Machine 6 ||               |
|||             Gateway->Router   |    +-----------+|               |
|||            controller         |                 |               |
|||                |              |                 |               |
||| --+--------+---+--+------+--- |                 |               |
|||   |        |      |      |    |                 |               |
||| actor1 sensor1 actor2 sensor2 |                 |               |
|||                               |                 |               |
|||   Machine 1                   |                 |               |
||+-------------------------------+                 |               |
||  System1                                         |               |
|+--------------------------------------------------+               |
|  Installation 1                                                   |
+-------------------------------------------------------------------+
]]></artwork></figure>

<t>In the opinion of the author, the most easily adopted
addressing architecture in these type of solutions today is also the
one widely used: IPv4 with <xref target="RFC1918"/> addresses. These addresses
are actually owned permanently for each deployment case - as long as
the scope of addressing is well defined.</t>

<t>In result, a common scheme of addressing in machinery such as the one
shown in <xref target="FIG-network"/> is to reuse the same 10.0.0.0/8 or 192.168.0.0/16 addresses
for every instance of a product/machinery manufactured. In the example,
actor1 could use 10.0.0.1, sensor1 10.0.0.2 and so on. But equally,
if Machine 3 was the same or similar, its internal components would
share the same machinery. And when hundreds of these products are
produced, hey would all have the same addresses.</t>

<t>To allow deployment and composing those type of machineries,
the router/switch connecting to the outside/next-level in a hierarchy
will need simple NATing function for example statically mapping
the 10.0.0.x on the inside to 10.0.1.x on the outside for Machine 1,
where the same router/switch for Machine 3 would be configured
to NAT from 10.0.0.x to 10.0.3.x. And likewise at the next layer
of hierarchy, 10.0.y.x could be mapped to 10.z.y.x with a different
y for every instance.</t>

<t>In support of solutions like this, many if not most industrial ethernet
switches deployable as machinery gateways do therefore support this
type of static NAT mappings. Likewise, common practices in industries
rely on this addressing with composition via NAT approaches, including
machineries as large as production lines or in transportation networks train cars and
all their included machineries/equipment.</t>

<t>The desire to avoid NAT in IPv6 and availability of sufficient addressing
space lead to replacing the concept of <xref target="RFC1918"/> in IPv4 with the concept
of Unique Local Addresses (ULA) in IPv6, standardized in <xref target="RFC4193"/>.
Instead of the few scoped prefixes of <xref target="RFC1918"/>, ULA provide for
2^40 different prefixes, and the design guidelines are theoretically
simple: pick a random prefix and then you can interconnect your networks later on with
a very low probability of address prefix collision/reuse.</t>

<t>Unfortunately, low probabilities of address collision is not a good
design principle for most of these type of environments because there
is really no good operational solution what do if such collision
occurs, and rare errors are also very hard to build resilient solutions
for. Also the probabilities begin to become much higher when not
looking at a connection of just two or few of such ULA networks, but
when there can be thousands of such networks, such as in the transportation
networks use case.</t>

<t>In result, ULA is not very persuasive for many such deployments, especially
when the alternative with IPv4 is address prefix mapping as required for
NAT, when NAT an an almost free provisioning side effect of setting up the
required connectivity via permit lists via network/transport
filters. The need to automate such in-network filtering to secure
such deployments can also be seen in the advent of MUD, <xref target="RFC8520"/>.</t>

<t>If one considers that most of these subnet networks will have fewer than
253 hosts connected to it, then the IPv6 ULA solution does also not
provide for any more bits for subnets than the 16 bits of z.y in the above example
using IPv4 10.z.y.x with x being the host part: The lower 64 bits of
the IPv6 address is hard to use for anything than the host parts with
non-router hosts.  The whole ULA prefix is 48 bits, leaving just 16 bit (128 - 64 -48).
Add to that the non insignificant IPv6 packet header overhead plus fewer availability of
NAT in IPv6 products because it is assumed to be less required, plus the
insufficiency of “low likelihood of collisions” when attempting to utilize
only ULA.</t>

<t>Vendors of equipment that have assigned Provider Independent IPv6 address space 
could of course allocate addressing from that space for equipment they
manufacture or integrate, whether it is globally unique or “generic”, e.g.: reused
across every instance of a product and hence requiring NAT. Unfortunately,
and unlike ethernet, where one actually does own addresses after buying an
OUI, assigned IPv6 addressing is not permanent, and even though
revocation of address allocation is not standard practice, standardized
solutions for global IPv6 address space (like IPv4 global address space) really need
to allow the ability for those addresses to be returnable instead of being
handed off in products to customers.</t>

<t>Even though in hindsight, the hierarchical address allocation from the
available 16 bits in 10.x.y.z for two layers of interconnections
in the above example looks obvious and simple,
in many cases the creation of multiple hierarchies is only an afterthought
and the fixed address length and prior suboptimal assignment of addressing in a
deployment will cause the need for a lot of re-addressing. This
is a recurring problem in larger enterprise/commercial networks
under unplanned growth or mergers &amp; acquisitions, especially of course in IPv4.
Likewise, once the 16 available bits in the above described NAT approach
are used up, whether it is IPv4 or IPv6 with ULA, no further extensions
of the design are possible.</t>

</section>
<section anchor="shorter-addresses" title="Shorter addresses">

<t>As has been noted in prior memos, shorter addresses than IPv6 128 bit
are highly desirable in private networks / limited domains whenever
it is clear that the total required addressing space is much smaller and
connectivity to e.g.: the Internet is not required.  Evidence of such requirements
can be found for example in header compression for IoT networks such
as <xref target="RFC6282"/>. Such compression introduces yet another
layer of complexity - the whole ecosystem of devices and diagnostic options
has to support it to be equally acceptable as uncompressed packets.</t>

</section>
<section anchor="additional-semantics" title="Additional semantics">

<t>New semantics can only be introduced into existing IPv4/IPv6 when their
required address size fits nicely into the 32 or 128 bit address space.</t>

<t>This section does not aim to be complete, see <xref target="I-D.king-irtf-semantic-routing-survey"/>
for a broader survey. Instead it will provide additional levels of details
for the benefits of fittingly sized addresses for few examples, that the
author is familiar with.</t>

<t>When ignorin Anycast, IP Multicast is likely the most widely adopted additional
semantic added to IPv4. With IPv6, IP Multicast became even more flexible
and easy to deploy, because the additional bits of
IPv6 addresses allowed to encode additional IP multicast parameters
through additional fields in IPv6 addresses: Scope address field <xref target="RFC4291"/>, SSM addresses <xref target="RFC4607"/>, Unicast
prefix multicast addresses <xref target="RFC3306"/> and embedded-RP <xref target="RFC3956"/>.
Nevertheless, especially embedded-RP could have benefitted from even
longer addresses because with the 128 bits available the solution had
to take a hit in the complexity of deployment. It requires to
engineer that RP address such that its non-0 host port is very short (4 bits).</t>

<t>In contrast, Bit Indexed Explicit Replication (BIER) which started
in the IETF in 2014 and resulted in the architecture <xref target="RFC8279"/>,
did not choose the option to integrate into IP/IPv6 because it desired
addresses sizes of at least per-network configurable from 64 to 4096 bit
plus additional qualifiers of at least 16 bits (so-called SD, SI address
qualifiers). This made it necessary for BIER to (re-!)invent its own
network layer packet header, <xref target="RFC8296"/> which duplicates pretty much
all packet header fields of MPLS plus IP packets plus additional BIER
header fields, so that it can be used in both MPLS and non-MPLS networks.</t>

<t>Similar arguments about the limited size of IPv6 address could likely
be made for ICN/CCN networks because the semantic of their
 addresses is that of data items such as time slices of specific
spatial and temporal resolutions of some media such as an audio/video
recording - and those name spaces would ideally have addresses as long
as URLs.</t>

</section>
<section anchor="programmability" title="Programmability">

<t>Segment Routing via IPv6 (SRv6) introduced with <xref target="RFC8986"/> and <xref target="RFC8754"/>
(SRH) and architecture in which source routing with an IPv6 extension
header  is combined with encoding of additional processing semantics
into the destination and source routing hops IPv6 addresses. SRv6
calls this programmability.</t>

<t>SRv6 is a very flexible and theoretically extensible concept but challenged
by the fixed address length design of IPv6. For most steering hop
addresses,  the bits reserved for this additional packet processing 
are not required, but when they are required there may even be too few
bits available. Variable length addresses allowing for variable long
programming field in the address would in the opinion of the author be highly
beneficial.</t>

<t>One evidence for the programmability bits seen as wasteful in many
cases is a variety of currently proposed drafts to provide more
compressed source routing options for SRv6 (as of mid 2021).</t>

</section>
</section>
<section anchor="fa-iinas-functional-addressing-fa-for-internetworking-with-independent-network-address-spaces-iinas" title="FA-IINAS: Functional Addressing (FA) for Internetworking with Independent Network Address Spaces (IINAS)">

<t>This section outlines an addressing design that attempts to solve the above
described challenges and calls it tentatively FA-IINAS. Functional Addressing
refers to the design aspect that addresses in this design can be interpreted
as functions with parameters.</t>

<t>Notwithstanding other granularities or options, this document assumes that
addresses are textually represented in hexadecimal and that the minimum structure
element of an address is 4 bit so that the different structural elements of
an address can simply be shown as concatenation of hex digits. The “.”
character is inserted optionally to show where in an address one semantic
part ends and another starts.</t>

<t>Like in IPv6 IoT networks, such as those using RPL (<xref target="RFC6550"/>) as their routing
protocol, this memo starts by assuming all nodes are routers and that addresses
are predominantly node addresses as opposed to IP/IPv6, which defines unicast
addresses to be interface addresses. This is but an academic differentiation, 
because node addresses can also be represented as interface addresses of
so-called “loopback” interfaces.</t>

<t>A network in this design is an independent address space, not shared with
other networks. A nework has theoretically unlimited long addresses whose
prefixes are mapped onto the nodes of the network, which are expected to
form a graph of transitively connected nodes. Practical limits to
address length are subject to acceptable packetization.</t>

<section anchor="addressing-for-unicast" title="Addressing for unicast">

<t>Each node is assigned one or more node prefixes from the networks address space and
none of these node prefixes can be overlapping. In other words, no assigned nodeprefix
can be a prefix of another assigned nodeprefix. This rule ensures that every node
“owns” any address equal or longer to its assigned nodeprefix. Allocation of
node prefixes is currently out of scope for this memo but could rely on any
well-known methods including manual operator assigned, SDN controll managed,
or as initially described in this document assigned by manufacturer/vendor.</t>

<t>Routing in a network is assumed to enable forwarding across the graph of the
network to the node owning the nodeprefix of the address.</t>

<t>Given variable long addresses, the first observation of this addressing
scheme is that it allows to combine short addresses with extensibility.</t>

<t>In a simple example the first 200 nodes are assigned addresses 01 … c8,
at which point in time the network operator gets worried about growth exceeding
the 256 mark and starts to assign longer addresses: c90 … f000, at which
point in time ever increasing success might cause assignment of even
longer prefixes.</t>

<t>Addresses longer than the assigned “nodeprefix” are used to instantiate
a specific function on the node itself. A generic representation of
an address could be nodeprefix.function.{parameter}.</t>

</section>
<section anchor="forwarding" title="Forwarding">

<section anchor="dispose-function" title="Dispose Function">

<t>When using a single digit function field, function = 0 could for example be 
“dispose” to decapsulate the packets payload and deliver it to the host stack.
Parameter could for example be the next-protocol value, eliminating the need to
have a separate packet header field for this parameter.</t>

<t>While not being the same
crucial issue as for the node prefixes themselves, putting the next-protocol into the
address makes it extensible too, so one would  not run out of a 256 space
as IPv4/IPv6 might do at some point.</t>

</section>
<section anchor="steering-function" title="Steering Function">

<t>Command = 1 could be a “steer” command and the parameter
is another address. To act on the command, the node would strip the nodeprefix
and command part of the address and forward it based on the address parameter.
For example node 73 (e.g.: node with nodeprefix 73) receives a packet with destination
address 73.1.55.1.33.0. It forwards the same packet with the stripped destination
address 55.1.33.0 to node 55, which likewise forwards the packet with stripped
destination address 33.0 to node 33, which ultimately receives it.</t>

</section>
<section anchor="multiple-semantics" title="Multiple semantics">

<t>To introduce additional semantics into a network, such as for example multicasting,
we need to generalize how to interpret the first part of the address, which so
far was only interpreted to be a nodeprefix for unicast forwarding.</t>

<figure anchor="FIG-semantic1"><artwork><![CDATA[
address = prefix{.nodefunction{.nodefunction-parameters}}
prefix = semantic{.semantic-parameters}

semantic / = unicast-forward 

unicast-forward = &lt;set of prefixes>
unicast-forward-parameters = node-prefix

semantic /= multicast-forward
multicast-forward = &lt;set of prefixes>
multicast-forward-parameters = multicast-group
]]></artwork></figure>

<t>In other words, the prefix at the start of the address is composed of a semantic
and its parameter, and the case discussed so far is simply the unicast-forward
semantic followed by a node-prefix parameter.</t>

<t>Again, semantic can be an arbitrarily long or short prefix, but no semantic
can be a prefix of another semantic.</t>

<t>In a practical example, this scheme is easily applied to existing
IPv4 / IPv6 address spaces. For IPv4:</t>

<figure anchor="FIG-semantic2"><artwork><![CDATA[
unicast-forward = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | A | B | C | D
multicast-forward = E
]]></artwork></figure>

<t>In other words, because IP multicast uses addresses 224.0.0.0/4, its
non-overlapping semantic prefix is E, and IPv4 unicast addresses
use the non-overlapping prefixes 0…D. Assume further that a node
in the network had assigned prefix 10.0.0.0/24, then this would
translate in our scheme into:</t>

<figure anchor="FIG-semantic3"><artwork><![CDATA[
0.A0000.XX
]]></artwork></figure>

<t>When a node processes this address, the 4-bit prefix 0 indicates that
the following prefix has to be looked up in unicast forwarding. This
prefix is A0000. Once the packet is delivered to the node, he remaining
8 bit XX can accordingly be interpreted by the node as a nodefunction
with parameters.</t>

<t>Likewise, an address 239.1.2.3 would translate into E.F010203, so the
first 4-bit E value would indicate that multicast forwarding needs to
be applied to the rest of the address, and with IP Multicast forwarding
not having further structure (ignoring willfully for simplicity of the
example that it does, for example with SSM), all the remainder of the
IPv4 address is the multicast-group</t>

<t>In summary, the logic does really only generalize what routers today
already do when they do prefix lookups, except for the following
core differences:</t>

<t><list style="symbols">
  <t>In IPv4/IPv6, the address semantic is hard-coded by IETF standards.
In FA-IINAS they are definable by every network.</t>
  <t>In IPv4/IPv6, there is no notion of nodefunction{.nodefunction-parameters},
only SRv6 has this concept.</t>
</list></t>

<t>In actual IPv4/IPv6 hardware forwarding lookups, one would not
do one lookup for the semantic, followed by another lookup for
the semantic-parameters for the case of unicast-forward, instead
this would be flattened. The same type of flattening would of
course be useable in FA-IINAS. Whether or how flattening or
other optimizations are feasible for other semantics such as multicast
is of course highly semantic and node implementation specific.</t>

</section>
<section anchor="internetworking-function" title="Internetworking Function">

<figure title="Internetworking example" anchor="FIG-internetworking"><artwork><![CDATA[
................................
.  Network1                    .
.                R1            .
.        R2      21      R3    .
.        23              23    .
.    R4              R5        .
.    24              25        .
.    ||2.2       2.2//\\2.3    .
.....||............//..\\.......
     ||           //    \\
.....||..........//.  ...\\........
.    ||2.1   2.1// .  .2.2\\2.1   .
.    R4        R5==========R5     .
.    14        15  .  .    15     .
. R6       R7      .  .       R10 .
. 26       27      .  .       21  .
.                 .  .            .
. Network2       .  .  Network3   .
.               .  .              .
.    R9        .  .     R8        .
.    21       .  .      23        .
. 2.4||      .   .  2.4//\\2.5    .
.....||.......   .....//..\\.......      
     ||              //    \\
     ||             //      \\
.....||............//. ......\\....
.    ||2.1     2.3// . .   2.3\\  .
.    R11        R8============R8  .
.    11        12 2.5. .   2.4 11 .
.          R12       . .          .
.          12        . .  R13     .
.                    . .  13      .
.                    . .          .
. Network4           . . Network5 .
...................... ............
]]></artwork></figure>

<t><xref target="FIG-internetworking"/> shows an example internetworking
topology of 5 networks, each with its own independent
address space. Globally unique Rxx numbers are used to refer
to routers.</t>

<t>An edge node is a router that has prefixes
from two or more networks into which it connects. In
the example, R4 connects into Network1 with prefix 24
and into Network2 with Prefix 14. Likewise, R8 connects
into Network3 with prefix 23, into Network4 with prefix 12
and into Network5 with prefix 11. An edge node can be
a router simply with different interfaces into different
networks, or it can be decomposed into multiple devices,
each in a separate network. In this section we describe
behavior as if it was a single device.</t>

<t>For an edge node to pass a network into a separate network,
the internetworking function on the node has to be called.
In the example, this function is codepoint 2 on all edge nodes, and
the first parameter is an identifier of local relevance for the
network into which to pass the packet. In actual deployment,
this function number can of course be locally significant to
the Network and/or even each edge router, assuming appropriate
control plane to assign the number to this function.</t>

<t>Assume R12 (12) in Network4 wants to send a packet to
R1 (21) in Network1. To send it R12-&gt;R8-&gt;R5-&gt;R1, R12
would have to use a destination address of 12.2.3.15.2.1.21.0,
or numerically without separators 0x12231521210.</t>

<t>12 will route the packet in Network4 towards R8 because of the
destination address 12/8 prefix. .2 indicates
to R8 that it should invoke the interworking function and
pass the packet into Network 3. As part of the interworking
function, R8 then strips all the address prefix it has
processed so far from the destination address, leaving 15.2.1.21.0.
R8 then forwards the packet with this destination address into 
Network 3, where it will be received by R5, which again
invokes the interworking function due to .2, forwarding the
packet into Network1, stripping 15.2.1.0 from the destination
address and forwarding the packet with destination address 21.0
into Network1, where it will finally be received by R1 which passes
the packet to its host stack because of dispose function 0.</t>

<t>To (optionally) allow for a return path, each edge node could equally
but inversely process the source address: When R12 sends the
packet, it would indicate a source address of 12.0. When R8
passes the packet via its interworking function into Network3,
it would prepend its return path interworking function address,
making the source address 23.2.4.12.0, where 23 is R8 address prefix
in Network3 and 2.4 internetworking function to return the packet into
Network4. Likewise, when R5 processes the packet by its
interworking function, it would prepend its return path address
element to the source address, before sending the packet into
Network1, making the source address 25.2.3.23.2.4.12.0. This
is then the address to which R1 could send return packets,
and likewise, on its way towards R1, the address, for example
when travelling via Network3 always has a returnable source
address.</t>

<t>With this behavior of the interworking function, it is obvious,
that address management of networks would want to keep a
sufficiently large number of very short prefixes, such as
those in this example or even shorter to address
the interworking function in a sufficiently larger number
of edge routers so that a complete internetwork path address
will not become too long to exceed the maximum address lengths.</t>

</section>
</section>
<section anchor="control-plane" title="Control Plane">

<t>This section reviews a range of control plane considerations necessary
to build a working solution out of the functional addressing. In short,
what is required for functions to be flexibly configurable and
extensible in the network, it requires a control plane that in its
principles is very much based on what was learned in MPLS.</t>

<section anchor="unicast-routing" title="Unicast routing">

<t>FA-IINAS expects a control plane that supports routing for unicast-forward
parameters (address prefixes) in the same way as it is done today
for IPv4/IP6. Except that it would be for address prefixes
(multicast-forward-parameter) of different length and not limited to
just 32/128 bits as in IPv4/IPv6.</t>

<t>In addition, FA-IINAS needs control-plane functions that allow
defining the semantics and their prefixes, like the above example
of 0…D for IPv4 style unicast-forwarding semantic and D for
IPv4 style multicast-forwarding semantic.</t>

<t>One of the core challenges for this control plane function is
that inconsistency between nodes can have significant different
negative impacts than the today accepted “eventual consistency”
in IPv4/IPv6 unicast routing that is achieved by the most widely
deployed unicast forwarding control planes: distributed routing
protocols (IGP/BGP).</t>

<t>The degree of concerns will highly depend on the actual new
issues that could happen in the face of inconsistencies, and this
can only be vetted with a given set of semantics.</t>

<t>In a most simple example, semantics may simple be configurable
via a management plane, and such an approach can be 
pre-staged, pre-configured, validated network devices, such
as in industrial or embedded environments.</t>

<t>In the case of a most flexible, agile type of network, control
plane mechanisms would have to be extended to support strong
consistency models, for example through node-to-node security
associations coupled with a strong consistency
network-wide-core-config mechanism. Such mechanisms could
in the opinion of the author easily be built on the framework
provided by <xref target="RFC8994"/> which provides these hop-by-hop
security associations and inband control plane infrastructure,
coupled with <xref target="RFC8990"/> as the protocol to negotiate the 
configuration with strong consistency.</t>

</section>
<section anchor="naming" title="Naming">

<section anchor="intra-network-naming" title="Intra network naming">

<t>In FA-IINAS, nodes are acting as routers, and the addresses described are
assigned to them persistently. This eliminates in many cases, especially
when the network is primarily for m2m communications the need for 
DNS names, because effectively the address of a node is its persistent name.</t>

<t>In networks small enough, e.g.: maybe &lt;= 20,000 nodes, the very same
argument can also apply to nodes that are hosts, e.g. without the
need to support full routing/FA-IINAS operations, but still having
a persistent address assigned that is routed in the networks routing
protocol.</t>

<t>If indeed there is a need to use DNS or other naming schemes, then this
is no different than applying naming with DNS to today’s <xref target="RFC1918"/>
addresses.</t>

</section>
<section anchor="simple-inter-network-naming" title="Simple inter network naming">

<t>The need to support (DNS) names is equally lower in interconnected FA-IINAS
networks assuming the intra network naming arguments outlined before apply
to the interconnected networks.</t>

<t>Because an address in a different FA-IINAS network is dependent on the
path from/to its corresponding peer, it is of course not sufficient
to simply have a global internetwork name to address mapping.</t>

<t>One of the likely oldest solutions is to align name resolution
with packet forwarding so that the very same edge nodes between
two networks that do translate addresses can accordingly also
translate their name resolution. This was productized and fairly widely
deployed as early as the late 1990th for IPv4 with rfc1918 addresses,
see for example <xref target="CiscoNAT"/>.</t>

<t>This type of solutions relies on well-known routing policies such
as simple hierarchical routing though and are not generic for
arbitrary topologies.</t>

</section>
</section>
<section anchor="routing" title="Routing">

<section anchor="with-internetwork-topology-knowledge" title="With internetwork topology knowledge">

<t>When FA-IINAS networks are connected in an arbitrary topology
instead of a simple hierarchy, the fundamental problem is that
of constructing the address of a target peer as a path
through a set of appropriate network edge nodes in the address,
followed by the nodes address within its network.</t>

<t>In many interconnected FA-IINAS networks, one can assume to have
systems that can do this, such as in an industrial setting where
a global view of the topology of networks exists and a PCE/SDN-controller
will choose the path and can accordingly calculate also the addresses
from the path.</t>

</section>
<section anchor="with-internetwork-naming-knowledge" title="With internetwork naming knowledge">

<t>A decentralized solution can be built by relying on a 
combination of naming and internetwork routing.</t>

<t>Every network (name space) is assigned a globally unique identifier.
This identifier is only used in the control-plane, so it should be
reasonably easy to have a set of construction mechanisms allowing
everyone to easily create its own namespace, such as for example
from some owned location (street address) and/or other owned
names/identifier.</t>

<t>When a global naming system like DNS then exists, an FA-IINAS
address is the combination of FA-IINAS network identifier and
address within that network.</t>

<t>Across the interconnected FA-IINAS networks, the edge-routers
would operate extended versions of a protocol like BGP through
which any party can calculate desired paths. The extensions
would include the FA-IINAS network identifiers and address prefix
mapping rules of the edge-nodes, thereby allowing to also
calculate addresses from FA-IINAS network identifiers and address.</t>

<t>When large number of small networks (such as users homes) connect
to larger networks (such as an ISP), those ISP would be concerned
of having to propagate millions of small FA-IINAS network mappings
into BGP. This is not done today with IPv4/IPv6, and it would
not scale any better with FA-IINAS. Instead, the fact that
the home network would be reachable with one or more ISP could
be done by also creating naming system mappings from the
home networks identifier to the identifier and address prefix
mappings of the ISP to which the home network is connected.</t>

<t>When a peer looks up a name and retrieves an FA-IINAS address
but cannot find the FA-IINAS network identifier in its internetwork
routing information, it can instead resolve it to the “next higher up”
ISP FA-IINAS network-identifier/prefix - and recurse this until it
has routing information.</t>

<t>Likewise, when a peer does not have any routing information
(because it does not participate in internet routing information),
it has to forward the appropriate resolution request hierarchically
upward.</t>

<t>In summary, it would be architecturally “easy” to extend DNS and
BGP with the necessary extensions to resolve names to FA-IINAS
addresses and construct relative FA-IINAS addresses from this
information.</t>

</section>
</section>
<section anchor="routing-policies" title="Routing policies">

<t>Note that this “easy” part does not include the possible desire
to be more or less flexible in path selection. Whereas today,
packets, once they enter “the Internet” are not under steering
control of the sender but under “hop by hop hot-potato steering”
control of the ISP, with FA-IINAS this may be different - or the
same. If a sender then constructed an FA-IINAS address implying
an internetwork path that was not desirable for this traffic by
the indicated transit networks, this would cause an error. Therefore,
the above outlined procedures hinted at relying on the internetwork
routing information whenever available and only resort to using
naming system to fill in the additional (edge) information.</t>

<t>Today it is becoming more common to use alternative than
“native Internet” paths by steering traffic across
virtual/container routers in cloud DC, many of which have ample
and underutilized international connectivity. However, additional
charges for compute and forwarding will apply. These type
of high-overhead solutions could be replaced by FA-IINAS
to steer traffic across such additional networks and without
the need to instantiate VM/containers.  It would require
appropriate and lightweight identity and accounting forwarding
plane packet header information so that those additional
charges could be applied.</t>

</section>
</section>
<section anchor="hardware-considerations" title="Hardware considerations">

<section anchor="forwarding-plane-simplicity" title="Forwarding plane simplicity">

<t>Forwarding of FA-IINAS packets based on destination address
is the same type of prefix lookup on the destination address
as it is today in IPv4/IPv6, except that the maximum lookup
prefix can be shorter or longer, this is detailed in the
next section.</t>

<t>The steering function should have a lookup complexity whose
complexity is in the order of SR-MPLS or even simpler.
It can constitute of a prefix lookup in the same forwarding
table as non-steered forwarding, but the adjacency would then
have to strip the looked up prefix from the destination address
(comparable to MPLS label pop) and forward the packet again
based on the remainder of the destination address - unless
additional on-node service functions have to be invoked.</t>

<t>The interworking function is very much like the steering
function, but it also prepends a return prefix to the source
address field, making it the most expensive forwarding plane
operation.</t>

<t>In general, the author assumes that packet processing that
strips a prefix from the destination address and optionally
adds a prefix to the source address is well feasible in next
generation, highest-speed, lowest-cost forwarding engines.</t>

<t>Optimizations beyond this are possible but would break
the independent address allocation across networks. For example,
if it is possible for an edge node to have the same prefix
length across the networks it connects to, and source
address follows destination address in the packet encoding,
then stripping the destination address could be achieved
by shifting the destination address in a contiguous packet buffer,
making head for the source address prefix to be prepended to the
following source address field.</t>

</section>
<section anchor="optimizing-for-smaller-networks" title="Optimizing for smaller networks">

<t>One of the benefits of FI-IINAS is that it allows to adopt the
address space size based on the requirements of networks and
therefore also allows to optimize hardware known to be built/sold
only into limited size networks, such as many industrial and
almost all embedded networks.</t>

<t>For example, low-cost, high-speed hardware forwarding might be
possible to design less expensive with just 16 bit lookups
instead of for up to 128 bit lookups, as may be required for
IPv6. Equipment could be sold with that profile parameters
“for networks with up to 2^16 nodes”.</t>

<t>Because of the way FA-IINAS is designed, a limit to 2^16 nodes
does not mean that FA-IINAS addresses are only 16 bits. Instead
they can still be “arbitrary” long (where arbitrary is subject
to a discussion point further below in this section). Just
the length of the unicast-forward part of the address is
limited to 16 bits.</t>

</section>
<section anchor="maximum-address-sizes" title="Maximum address sizes">

<t>The permissible maximum size of source and destination address
are primarily subject to the header size that inexpensive
hardware forwarding can examine and modify. For future generations,
this might likely be as much as 512 bytes, so to optimize
hardware lookup it might be interesting to consider the
option of carrying the addresses not consecutively, but
carry them as</t>

</section>
</section>
<section anchor="example-packet-header-encoding" title="Example packet header encoding">

<t>The following encodings propose a couple of ideas that
could be interesting in addressing.</t>

<figure title="Example packet header encoding" anchor="FIG-newheaderIPv7"><artwork><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|Version|VE |ECN| DestAddrLen   | SrcAddrLen    | Hop Limit     |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Destination Address ...  
|
+-+-+-+-+-+-+-+-+
| Source Address ...                                                            |
|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t>Version: A version number for this packet header from the same
registry as the IPv4/IPv6 version number field.</t>

<t>VE: Version Extension. 00. Reserved for future variations of the
header, such as new extension header formats if desired, so as to not
use up any more than one Version code point.</t>

<t>DestAddrLen: The length of the Destination Address field in bytes.
Valid values are 1…255 bytes. One byte minimum length is mandatory
because of the need to indicate some semantic for processing the packet.</t>

<t>SrcAddrLen: The length of the Source Address field in bytes.
Valid values are 0…255 bytes. The Source Address field is therefore
optional.</t>

<t>ECN: See <xref target="RFC3168"/> and the documents updating it.</t>

<t>Rsv: Reserved.</t>

<t>Hop Limit: As in IPv6</t>

<t>Beside the variable length of the Source and Destination address
fields and hence their length indications, the difference to
the IPv6 header are as follows:</t>

<t>Only the two ECN bits are maintained from the IPv4/IPv6 Traffic Class field.
This is because in the majority of networks, the other 6 bits of
Traffic Class, DSCP are not being used, and where QoS differentiation would
be used, often additional or different QoS parameters may be required that are not
supported by IPv4/IPv6. Such a new network header would thus be a great
opportunity to improve on QoS header parameters through a better
QoS extension header, where it is needed (outside scope of this document),
and not proliferate not ubiquitously used elements in the base header.
The same reason applies to removing the Flow Label field.</t>

<t>ECN on the other hand is very fundamental for the majority of all traffic
in Internet and limited domain networks.</t>

</section>
</section>
<section anchor="inspirations" title="Inspirations">

<t>This section reviews prior addressing and networking technologies that did
inspire this memo and compares it with them.</t>

<section anchor="e164" title="E.164">

<t>E.164 telephone numbers traditionally worked (and may still work) similar
to this mechanisms handling of addresses by adding and removing prefixes and
allowing to grow networks hierarchically.</t>

<t>In Germany for example a town/city might have had a subscriber numbering plan starting with
3 digit numbers and expanding over time into 5 digits. 0 was excluded as the
first digit of any assigned number. Let our example subscriber have number 1234</t>

<t>When the phone systems of towns/cities where connected, dialing a different town/city would
use a concatenation of the inter-city traffic discrimination code “0” followed by the dial code for the
town/city, followed by the subscriber number. Let our example town dial code be
4111, the subscriber number dialed from a different city would be 04111 1234.
Again, “0” was excluded as the first digit of a trunk prefix.</t>

<t>When finally the phone systems of countries where connected, dialing a different
country would use a concatenation of the international traffic discrimination code “00”
followed by the country dial code, which in our example is 49 for Germany followed
by the dial code for the city, followed by the subscriber number - 0049 4111 1234 for
our example subscriber. Note that this number would of course only work when calling
from countries that also do use “00” as the international traffic discrimination
code. When calling the number from the USA, one would have to dial 011 4111 1234,
because the USA uses 011 as the internal traffic discrimination code.</t>

<t>Of course, understanding foreign countries traffic discrimination code rules to
reverse engineer a foreign telephone number so as to translate it to the according
rules of the calling-from country is one of the problems that is leading more
and more subscribers to prefer the absolute E.164 telephone numbers like
+49 4111 1234.</t>

<t>On the other hand, when the interplanetary telephone network will “soon”
<xref target="I-D.draft-farrel-soon"/> arrive and there are not enough country
codes available in Earth’s existing numbering plan, one would have to find a way
to attach prefixes in front of existing E.164 numbers, something that E.164
likely cannot afford, but which would be possible with UPVLA.</t>

<t>In our example the UPVLA address could be 0003 49 4111 1234 and a new solar
system “absolute” address could be ++3 49 4111 1234.</t>

<t>Obviously, Mercury has to get 1, Venus 2 and Earth 3 and so on, so that it would be
easier to remember how to dial other planets than it is now to remember how to
dial other countries.</t>

<t>If one was to use the solution proposed in this memo to build the phone network
addressing system with the example numbering plan, one could set up a multi-tiered
internetwork as shown in <xref target="FIG-e164"/>.</t>

<figure title="Example internetwork for E.164 style address structure with FA-INAAS" anchor="FIG-e164"><artwork><![CDATA[
Soon:
 .                         .
 . Solar System network    .
 .                         .
 .  prefix "3"             .  |
 .  .....................  .  v strip 3 from dst, prepend 0 to dst
 ...| Planet Edge Node  ....    forward into global network
 .  .....................  .  ^ strip 0 from dst, prepend 3 to src
 .         prefix "0"      .  | forward into solar system network
 .                         .
Today:
 .                         .
 .  "global" network       .
 .                         .
 .   prefix "49"           .  |
 .  +-------------------+  .  v strip 49 from dst, prepend 0 to dst
 ...| Country Edge Node |...    forward into country network
 .  +-------------------+  .  ^ strip 0 from dst, prepend 49 to src
 .         prefix "0"      .  | forward into global network
 .                         .
 .  "country" network      .
 .                         .
 .   prefix "4111"         .  |
 .  +-------------------+  .  v strip 4111 from dst, prepend 0 to dst
 ...| City Edge Node    |...    forward into city network
 .  +-------------------+  .  ^ strip 0 from dst, prepend 4111 to src
 .         prefix "0"      .    forward into country network
 .                         .
 .  city network           .
 .                         .
 .     subscriber 1234     .
 ...........................
]]></artwork></figure>

<t>Packets destined to an address starting with “0” would be routed to
an edge node of the city network, which “owns” the “0” prefix,
there that “0” prefix is stripped, but the cities own prefix
of in the example “4111” is prepended to the source address, and then
the packet is forwarded into the country network.</t>

<t>When a packet is received from the country network on a city edge node,
the opposite happens, the cities own prefix, e.g.: 4111 is stripped
from the destination address and 0 is prepended to the source address,
then the packet is forwarded into the city network and routed to the
destination. Which can generate return packets by just swapping
source and destination addresses.</t>

<t>The same process will happen across 2 network tiers when a 00 prefix
is used or even 3 network tiers, once we have (soon ;-) a Solar
System Network.</t>

<t>Of course, each tier and each instance of each tier can choose its
own addressing scheme and prefixes for the edge routers. It is left
as an exercise to the reader for example to amend the example
with its own home countries traffic discrimination codes.</t>

</section>
<section anchor="mpls" title="MPLS">

<t>Adding/Removing or swapping prefixes is the core forwarding process step in 
Multiprotocol Label Switching <xref target="RFC3031"/>. Due to the time MPLS was
designed, it had to have a very fixed size and functionality stack
architecture, but as claimed in before, the author thinks that today
an MPLS stack could easily be built just with the proposed addressing
scheme address.</t>

<t>Compared to MPLS, the proposed scheme does not mandate that that every
steering address needs to contain QoS (EXP) and TTL fields as are
present in MPLS Label Stack entries, but of course they would be
equally possible as parameters of appropriate functions.</t>

<t>Likewise the proposal does not think it is appropriate to require
complicated scanning ahead into the address in search of Special
Label Stack entries. Therefore, FA-IINAS would require that
any per-hop accessible information that is not included in the
hops function/parameters would have to be carried would have to be
carried in a separated extensions header.</t>

</section>
<section anchor="segment-routing-sr-mpls-srv6" title="Segment Routing SR-MPLS / SRv6">

<t>FA-IINAS can support more compact packet steering than SR-MPLS
when the prefixes are accordingly chosen to be shorter than the
32 bits for an LSE.</t>

<t>While it would be possible to emulate MPLS LSE by using prefixes
of 20 bit and following them with 12 bit of functional parameters
indicating EXP and TTL, the proposal in this memo does not
assume that transit routers would be able to act on those EXP or
TTL bits. While it would be easily possible to define such
additional transit hop semantic through extensions to the control
plane, the author believes that the per-path parameters of
TTL in a base header and more flexible QoS in an extension header
is the more likely most useful option for these two functions.</t>

<t>In comparison to SRv6, FA-IINAS allows of course more compact
representation of steering hops and also more easily few or
many per-hop bits for programmability, as desired.</t>

<t>What FA-IINAS does not provide for
is to keep the sequence of steering addresses in the header up
to the final receiver.  This might be useful for diagnostics, but
it is  seemingly not so important that it did stop the adoption
of SR-MPLS, where the steering hops are likewise removed from
the packet header when steering happens.</t>

<t>Other functions than steering and per-steering hop programmability
provided by SRv6 via SRH (such as its TLV for the receiver) are
unaffected by this proposal and could equally be provided for
by an SRH style extension header without the source routing part.</t>

</section>
<section anchor="research" title="Research">

<t><xref target="Haoyu"/> proposes a hierarchical addressing scheme and provides
reviews in a lot more detail a set of other reasons for such
addressing scheme. That paper does not allow for arbitrary
composition of networks without a clear hierarchy or root thereof,
as FA-IINAS does.</t>

</section>
</section>
<section anchor="summary-and-conclusions" title="Summary and conclusions">

<t>This memo introduces a simple but hopefully very attractive
addressing scheme that leverages variable length address sizes
with the potential for simple address prefix processing (push/pop/swap)
on steering hops, service-function hops and especially network
edge nodes.</t>

<t>Push/pop/swap of network prefixes on network edge nodes allows
to introduce a non-global internetworking address architecture
that should make it a lot easier to build and manage many
embedded, private or otherwise limited domain internetworks and
optimize forwarding engines for a variety of different of these
type of networks such as through known maximum network prefix lengths.</t>

<t>When network addresses as in FA-IINAS become effectively internetwork
path addresses, they also allow for a much wider range of possible
routing policies. In a time where the classical Internet with its
“sender just gets one path”, this can be a highly beneficial
enhancement to explore (not that this was already proposed, maybe
way ahead of its time and with vastly different mechanisms in
solutions as early as <xref target="RFC1621"/>, <xref target="RFC1622"/>).</t>

<t>In this version of the memo, these are only limited considerations
about how to refine details of the proposal to find incremental,
near-term deployment options, for example by using existing
IPv6 headers and using an unassigned prefix to define FA-IINAS
addressing semantic into it (limited of course to 128 bit then).
These type of considerations can be subject for future revisions of this
memo.</t>

</section>


  </middle>

  <back>


    <references title='Informative References'>





<reference anchor='RFC1621' target='https://www.rfc-editor.org/info/rfc1621'>
<front>
<title>Pip Near-term Architecture</title>
<author fullname='P. Francis' initials='P.' surname='Francis'><organization/></author>
<date month='May' year='1994'/>
<abstract><t>The purpose of this RFC and the companion RFC &quot;Pip Header Processing&quot; are to record the ideas (good and bad) of Pip.  This memo provides information for the Internet community.  This memo does not specify an Internet standard of any kind.</t></abstract>
</front>
<seriesInfo name='RFC' value='1621'/>
<seriesInfo name='DOI' value='10.17487/RFC1621'/>
</reference>



<reference anchor='RFC1622' target='https://www.rfc-editor.org/info/rfc1622'>
<front>
<title>Pip Header Processing</title>
<author fullname='P. Francis' initials='P.' surname='Francis'><organization/></author>
<date month='May' year='1994'/>
<abstract><t>The purpose of this RFC and the companion RFC &quot;Pip Near-term Architecture&quot; are to record the ideas (good and bad) of Pip.  This memo provides information for the Internet community.  This memo does not specify an Internet standard of any kind.</t></abstract>
</front>
<seriesInfo name='RFC' value='1622'/>
<seriesInfo name='DOI' value='10.17487/RFC1622'/>
</reference>



<reference anchor='RFC1918' target='https://www.rfc-editor.org/info/rfc1918'>
<front>
<title>Address Allocation for Private Internets</title>
<author fullname='Y. Rekhter' initials='Y.' surname='Rekhter'><organization/></author>
<author fullname='B. Moskowitz' initials='B.' surname='Moskowitz'><organization/></author>
<author fullname='D. Karrenberg' initials='D.' surname='Karrenberg'><organization/></author>
<author fullname='G. J. de Groot' initials='G. J.' surname='de Groot'><organization/></author>
<author fullname='E. Lear' initials='E.' surname='Lear'><organization/></author>
<date month='February' year='1996'/>
<abstract><t>This document describes address allocation for private internets.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='5'/>
<seriesInfo name='RFC' value='1918'/>
<seriesInfo name='DOI' value='10.17487/RFC1918'/>
</reference>



<reference anchor='RFC3168' target='https://www.rfc-editor.org/info/rfc3168'>
<front>
<title>The Addition of Explicit Congestion Notification (ECN) to IP</title>
<author fullname='K. Ramakrishnan' initials='K.' surname='Ramakrishnan'><organization/></author>
<author fullname='S. Floyd' initials='S.' surname='Floyd'><organization/></author>
<author fullname='D. Black' initials='D.' surname='Black'><organization/></author>
<date month='September' year='2001'/>
<abstract><t>This memo specifies the incorporation of ECN (Explicit Congestion Notification) to TCP and IP, including ECN's use of two bits in the IP header.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='3168'/>
<seriesInfo name='DOI' value='10.17487/RFC3168'/>
</reference>



<reference anchor='RFC3031' target='https://www.rfc-editor.org/info/rfc3031'>
<front>
<title>Multiprotocol Label Switching Architecture</title>
<author fullname='E. Rosen' initials='E.' surname='Rosen'><organization/></author>
<author fullname='A. Viswanathan' initials='A.' surname='Viswanathan'><organization/></author>
<author fullname='R. Callon' initials='R.' surname='Callon'><organization/></author>
<date month='January' year='2001'/>
<abstract><t>This document specifies the architecture for Multiprotocol Label Switching (MPLS).  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='3031'/>
<seriesInfo name='DOI' value='10.17487/RFC3031'/>
</reference>



<reference anchor='RFC3306' target='https://www.rfc-editor.org/info/rfc3306'>
<front>
<title>Unicast-Prefix-based IPv6 Multicast Addresses</title>
<author fullname='B. Haberman' initials='B.' surname='Haberman'><organization/></author>
<author fullname='D. Thaler' initials='D.' surname='Thaler'><organization/></author>
<date month='August' year='2002'/>
</front>
<seriesInfo name='RFC' value='3306'/>
<seriesInfo name='DOI' value='10.17487/RFC3306'/>
</reference>



<reference anchor='RFC3956' target='https://www.rfc-editor.org/info/rfc3956'>
<front>
<title>Embedding the Rendezvous Point (RP) Address in an IPv6 Multicast Address</title>
<author fullname='P. Savola' initials='P.' surname='Savola'><organization/></author>
<author fullname='B. Haberman' initials='B.' surname='Haberman'><organization/></author>
<date month='November' year='2004'/>
<abstract><t>This memo defines an address allocation policy in which the address of the Rendezvous Point (RP) is encoded in an IPv6 multicast group address.  For Protocol Independent Multicast - Sparse Mode (PIM-SM), this can be seen as a specification of a group-to-RP mapping mechanism.  This allows an easy deployment of scalable inter-domain multicast and simplifies the intra-domain multicast configuration as well.  This memo updates the addressing format presented in RFC 3306.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='3956'/>
<seriesInfo name='DOI' value='10.17487/RFC3956'/>
</reference>



<reference anchor='RFC4193' target='https://www.rfc-editor.org/info/rfc4193'>
<front>
<title>Unique Local IPv6 Unicast Addresses</title>
<author fullname='R. Hinden' initials='R.' surname='Hinden'><organization/></author>
<author fullname='B. Haberman' initials='B.' surname='Haberman'><organization/></author>
<date month='October' year='2005'/>
<abstract><t>This document defines an IPv6 unicast address format that is globally unique and is intended for local communications, usually inside of a site. These addresses are not expected to be routable on the global Internet.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='4193'/>
<seriesInfo name='DOI' value='10.17487/RFC4193'/>
</reference>



<reference anchor='RFC4291' target='https://www.rfc-editor.org/info/rfc4291'>
<front>
<title>IP Version 6 Addressing Architecture</title>
<author fullname='R. Hinden' initials='R.' surname='Hinden'><organization/></author>
<author fullname='S. Deering' initials='S.' surname='Deering'><organization/></author>
<date month='February' year='2006'/>
<abstract><t>This specification defines the addressing architecture of the IP Version 6 (IPv6) protocol.  The document includes the IPv6 addressing model, text representations of IPv6 addresses, definition of IPv6 unicast addresses, anycast addresses, and multicast addresses, and an IPv6 node's required addresses.</t><t>This document obsoletes RFC 3513, &quot;IP Version 6 Addressing Architecture&quot;.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='4291'/>
<seriesInfo name='DOI' value='10.17487/RFC4291'/>
</reference>



<reference anchor='RFC4607' target='https://www.rfc-editor.org/info/rfc4607'>
<front>
<title>Source-Specific Multicast for IP</title>
<author fullname='H. Holbrook' initials='H.' surname='Holbrook'><organization/></author>
<author fullname='B. Cain' initials='B.' surname='Cain'><organization/></author>
<date month='August' year='2006'/>
<abstract><t>IP version 4 (IPv4) addresses in the 232/8 (232.0.0.0 to 232.255.255.255) range are designated as source-specific multicast (SSM) destination addresses and are reserved for use by source-specific applications and protocols.  For IP version 6 (IPv6), the address prefix FF3x::/32 is reserved for source-specific multicast use.  This document defines an extension to the Internet network service that applies to datagrams sent to SSM addresses and defines the host and router requirements to support this extension.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='4607'/>
<seriesInfo name='DOI' value='10.17487/RFC4607'/>
</reference>



<reference anchor='RFC6282' target='https://www.rfc-editor.org/info/rfc6282'>
<front>
<title>Compression Format for IPv6 Datagrams over IEEE 802.15.4-Based Networks</title>
<author fullname='J. Hui' initials='J.' role='editor' surname='Hui'><organization/></author>
<author fullname='P. Thubert' initials='P.' surname='Thubert'><organization/></author>
<date month='September' year='2011'/>
<abstract><t>This document updates RFC 4944, &quot;Transmission of IPv6 Packets over IEEE 802.15.4 Networks&quot;.  This document specifies an IPv6 header compression format for IPv6 packet delivery in Low Power Wireless Personal Area Networks (6LoWPANs).  The compression format relies on shared context to allow compression of arbitrary prefixes.  How the information is maintained in that shared context is out of scope. This document specifies compression of multicast addresses and a framework for compressing next headers.  UDP header compression is specified within this framework.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6282'/>
<seriesInfo name='DOI' value='10.17487/RFC6282'/>
</reference>



<reference anchor='RFC6550' target='https://www.rfc-editor.org/info/rfc6550'>
<front>
<title>RPL: IPv6 Routing Protocol for Low-Power and Lossy Networks</title>
<author fullname='T. Winter' initials='T.' role='editor' surname='Winter'><organization/></author>
<author fullname='P. Thubert' initials='P.' role='editor' surname='Thubert'><organization/></author>
<author fullname='A. Brandt' initials='A.' surname='Brandt'><organization/></author>
<author fullname='J. Hui' initials='J.' surname='Hui'><organization/></author>
<author fullname='R. Kelsey' initials='R.' surname='Kelsey'><organization/></author>
<author fullname='P. Levis' initials='P.' surname='Levis'><organization/></author>
<author fullname='K. Pister' initials='K.' surname='Pister'><organization/></author>
<author fullname='R. Struik' initials='R.' surname='Struik'><organization/></author>
<author fullname='JP. Vasseur' initials='JP.' surname='Vasseur'><organization/></author>
<author fullname='R. Alexander' initials='R.' surname='Alexander'><organization/></author>
<date month='March' year='2012'/>
<abstract><t>Low-Power and Lossy Networks (LLNs) are a class of network in which both the routers and their interconnect are constrained.  LLN routers typically operate with constraints on processing power, memory, and energy (battery power).  Their interconnects are characterized by high loss rates, low data rates, and instability.  LLNs are comprised of anything from a few dozen to thousands of routers.  Supported traffic flows include point-to-point (between devices inside the LLN), point-to-multipoint (from a central control point to a subset of devices inside the LLN), and multipoint-to-point (from devices inside the LLN towards a central control point).  This document specifies the IPv6 Routing Protocol for Low-Power and Lossy Networks (RPL), which provides a mechanism whereby multipoint-to-point traffic from devices inside the LLN towards a central control point as well as point-to-multipoint traffic from the central control point to the devices inside the LLN are supported.  Support for point-to-point traffic is also available.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6550'/>
<seriesInfo name='DOI' value='10.17487/RFC6550'/>
</reference>



<reference anchor='RFC8279' target='https://www.rfc-editor.org/info/rfc8279'>
<front>
<title>Multicast Using Bit Index Explicit Replication (BIER)</title>
<author fullname='IJ. Wijnands' initials='IJ.' role='editor' surname='Wijnands'><organization/></author>
<author fullname='E. Rosen' initials='E.' role='editor' surname='Rosen'><organization/></author>
<author fullname='A. Dolganow' initials='A.' surname='Dolganow'><organization/></author>
<author fullname='T. Przygienda' initials='T.' surname='Przygienda'><organization/></author>
<author fullname='S. Aldrin' initials='S.' surname='Aldrin'><organization/></author>
<date month='November' year='2017'/>
<abstract><t>This document specifies a new architecture for the forwarding of multicast data packets.  It provides optimal forwarding of multicast packets through a &quot;multicast domain&quot;.  However, it does not require a protocol for explicitly building multicast distribution trees, nor does it require intermediate nodes to maintain any per-flow state. This architecture is known as &quot;Bit Index Explicit Replication&quot; (BIER).  When a multicast data packet enters the domain, the ingress router determines the set of egress routers to which the packet needs to be sent.  The ingress router then encapsulates the packet in a BIER header.  The BIER header contains a bit string in which each bit represents exactly one egress router in the domain; to forward the packet to a given set of egress routers, the bits corresponding to those routers are set in the BIER header.  The procedures for forwarding a packet based on its BIER header are specified in this document.  Elimination of the per-flow state and the explicit tree-building protocols results in a considerable simplification.</t></abstract>
</front>
<seriesInfo name='RFC' value='8279'/>
<seriesInfo name='DOI' value='10.17487/RFC8279'/>
</reference>



<reference anchor='RFC8296' target='https://www.rfc-editor.org/info/rfc8296'>
<front>
<title>Encapsulation for Bit Index Explicit Replication (BIER) in MPLS and Non-MPLS Networks</title>
<author fullname='IJ. Wijnands' initials='IJ.' role='editor' surname='Wijnands'><organization/></author>
<author fullname='E. Rosen' initials='E.' role='editor' surname='Rosen'><organization/></author>
<author fullname='A. Dolganow' initials='A.' surname='Dolganow'><organization/></author>
<author fullname='J. Tantsura' initials='J.' surname='Tantsura'><organization/></author>
<author fullname='S. Aldrin' initials='S.' surname='Aldrin'><organization/></author>
<author fullname='I. Meilik' initials='I.' surname='Meilik'><organization/></author>
<date month='January' year='2018'/>
<abstract><t>Bit Index Explicit Replication (BIER) is an architecture that provides optimal multicast forwarding through a &quot;multicast domain&quot;, without requiring intermediate routers to maintain any per-flow state or to engage in an explicit tree-building protocol.  When a multicast data packet enters the domain, the ingress router determines the set of egress routers to which the packet needs to be sent.  The ingress router then encapsulates the packet in a BIER header.  The BIER header contains a bit string in which each bit represents exactly one egress router in the domain; to forward the packet to a given set of egress routers, the bits corresponding to those routers are set in the BIER header.  The details of the encapsulation depend on the type of network used to realize the multicast domain.  This document specifies a BIER encapsulation that can be used in an MPLS network or, with slight differences, in a non-MPLS network.</t></abstract>
</front>
<seriesInfo name='RFC' value='8296'/>
<seriesInfo name='DOI' value='10.17487/RFC8296'/>
</reference>



<reference anchor='RFC8520' target='https://www.rfc-editor.org/info/rfc8520'>
<front>
<title>Manufacturer Usage Description Specification</title>
<author fullname='E. Lear' initials='E.' surname='Lear'><organization/></author>
<author fullname='R. Droms' initials='R.' surname='Droms'><organization/></author>
<author fullname='D. Romascanu' initials='D.' surname='Romascanu'><organization/></author>
<date month='March' year='2019'/>
<abstract><t>This memo specifies a component-based architecture for Manufacturer Usage Descriptions (MUDs).  The goal of MUD is to provide a means for end devices to signal to the network what sort of access and network functionality they require to properly function.  The initial focus is on access control.  Later work can delve into other aspects.</t><t>This memo specifies two YANG modules, IPv4 and IPv6 DHCP options, a Link Layer Discovery Protocol (LLDP) TLV, a URL, an X.509 certificate extension, and a means to sign and verify the descriptions.</t></abstract>
</front>
<seriesInfo name='RFC' value='8520'/>
<seriesInfo name='DOI' value='10.17487/RFC8520'/>
</reference>



<reference anchor='RFC8754' target='https://www.rfc-editor.org/info/rfc8754'>
<front>
<title>IPv6 Segment Routing Header (SRH)</title>
<author fullname='C. Filsfils' initials='C.' role='editor' surname='Filsfils'><organization/></author>
<author fullname='D. Dukes' initials='D.' role='editor' surname='Dukes'><organization/></author>
<author fullname='S. Previdi' initials='S.' surname='Previdi'><organization/></author>
<author fullname='J. Leddy' initials='J.' surname='Leddy'><organization/></author>
<author fullname='S. Matsushima' initials='S.' surname='Matsushima'><organization/></author>
<author fullname='D. Voyer' initials='D.' surname='Voyer'><organization/></author>
<date month='March' year='2020'/>
<abstract><t>Segment Routing can be applied to the IPv6 data plane using a new type of Routing Extension Header called the Segment Routing Header (SRH). This document describes the SRH and how it is used by nodes that are Segment Routing (SR) capable.</t></abstract>
</front>
<seriesInfo name='RFC' value='8754'/>
<seriesInfo name='DOI' value='10.17487/RFC8754'/>
</reference>



<reference anchor='RFC8799' target='https://www.rfc-editor.org/info/rfc8799'>
<front>
<title>Limited Domains and Internet Protocols</title>
<author fullname='B. Carpenter' initials='B.' surname='Carpenter'><organization/></author>
<author fullname='B. Liu' initials='B.' surname='Liu'><organization/></author>
<date month='July' year='2020'/>
<abstract><t>There is a noticeable trend towards network behaviors and semantics that are specific to a particular set of requirements applied within a limited region of the Internet. Policies, default parameters, the options supported, the style of network management, and security requirements may vary between such limited regions. This document reviews examples of such limited domains (also known as controlled environments), notes emerging solutions, and includes a related taxonomy. It then briefly discusses the standardization of protocols for limited domains. Finally, it shows the need for a precise definition of &quot;limited domain membership&quot; and for mechanisms to allow nodes to join a domain securely and to find other members, including boundary nodes. </t><t>This document is the product of the research of the authors. It has been produced through discussions and consultation within the IETF but is not the product of IETF consensus.</t></abstract>
</front>
<seriesInfo name='RFC' value='8799'/>
<seriesInfo name='DOI' value='10.17487/RFC8799'/>
</reference>



<reference anchor='RFC8986' target='https://www.rfc-editor.org/info/rfc8986'>
<front>
<title>Segment Routing over IPv6 (SRv6) Network Programming</title>
<author fullname='C. Filsfils' initials='C.' role='editor' surname='Filsfils'><organization/></author>
<author fullname='P. Camarillo' initials='P.' role='editor' surname='Camarillo'><organization/></author>
<author fullname='J. Leddy' initials='J.' surname='Leddy'><organization/></author>
<author fullname='D. Voyer' initials='D.' surname='Voyer'><organization/></author>
<author fullname='S. Matsushima' initials='S.' surname='Matsushima'><organization/></author>
<author fullname='Z. Li' initials='Z.' surname='Li'><organization/></author>
<date month='February' year='2021'/>
<abstract><t>The Segment Routing over IPv6 (SRv6) Network Programming framework enables a network operator or an application to specify a packet processing program by encoding a sequence of instructions in the IPv6 packet header.</t><t>Each instruction is implemented on one or several nodes in the network and identified by an SRv6 Segment Identifier in the packet.</t><t>This document defines the SRv6 Network Programming concept and specifies the base set of SRv6 behaviors that enables the creation of interoperable overlays with underlay optimization.</t></abstract>
</front>
<seriesInfo name='RFC' value='8986'/>
<seriesInfo name='DOI' value='10.17487/RFC8986'/>
</reference>



<reference anchor='RFC8990' target='https://www.rfc-editor.org/info/rfc8990'>
<front>
<title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<author fullname='B. Carpenter' initials='B.' role='editor' surname='Carpenter'><organization/></author>
<author fullname='B. Liu' initials='B.' role='editor' surname='Liu'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>This document specifies the GeneRic Autonomic Signaling Protocol (GRASP), which enables autonomic nodes and Autonomic Service Agents to dynamically discover peers, to synchronize state with each other, and to negotiate parameter settings with each other. GRASP depends on an external security environment that is described elsewhere. The technical objectives and parameters for specific application scenarios are to be described in separate documents. Appendices briefly discuss requirements for the protocol and existing protocols with comparable features.</t></abstract>
</front>
<seriesInfo name='RFC' value='8990'/>
<seriesInfo name='DOI' value='10.17487/RFC8990'/>
</reference>



<reference anchor='RFC8994' target='https://www.rfc-editor.org/info/rfc8994'>
<front>
<title>An Autonomic Control Plane (ACP)</title>
<author fullname='T. Eckert' initials='T.' role='editor' surname='Eckert'><organization/></author>
<author fullname='M. Behringer' initials='M.' role='editor' surname='Behringer'><organization/></author>
<author fullname='S. Bjarnason' initials='S.' surname='Bjarnason'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>Autonomic functions need a control plane to communicate, which depends on some addressing and routing.  This Autonomic Control Plane should ideally be self-managing and be as independent as possible of configuration.  This document defines such a plane and calls it the &quot;Autonomic Control Plane&quot;, with the primary use as a control plane for autonomic functions.  It also serves as a &quot;virtual out-of-band channel&quot; for Operations, Administration, and Management (OAM) communications over a network that provides automatically configured, hop-by-hop authenticated and encrypted communications via automatically configured IPv6 even when the network is not configured or is misconfigured.</t></abstract>
</front>
<seriesInfo name='RFC' value='8994'/>
<seriesInfo name='DOI' value='10.17487/RFC8994'/>
</reference>


<reference anchor='I-D.jia-intarea-scenarios-problems-addressing'>
   <front>
      <title>Challenging Scenarios and Problems in Internet Addressing</title>
      <author fullname='Yihao Jia'>
	 <organization>Huawei Technologies Co., Ltd</organization>
      </author>
      <author fullname='Dirk Trossen'>
	 <organization>Huawei Technologies Duesseldorf GmbH</organization>
      </author>
      <author fullname='Luigi Iannone'>
	 <organization>Huawei Technologies France S.A.S.U.</organization>
      </author>
      <author fullname='Nirmala Shenoy'>
	 <organization>Rochester Institute of Technology</organization>
      </author>
      <author fullname='Paulo Mendes'>
	 <organization>Airbus</organization>
      </author>
      <author fullname='Donald E. Eastlake 3rd'>
	 <organization>Futurewei Technologies</organization>
      </author>
      <author fullname='Peng Liu'>
	 <organization>China Mobile</organization>
      </author>
      <date day='12' month='July' year='2021'/>
      <abstract>
	 <t>   The Internet Protocol (IP) has been the major technological success
   in information technology of the last half century.  As the Internet
   becomes pervasive, IP has been replacing communication technology for
   many domain-specific solutions.  However, domains with specific
   requirements as well as communication behaviors and semantics still
   exist and represent what [RFC8799] recognizes as &quot;limited domains&quot;.

   This document describes well-recognized scenarios that showcase
   possibly different addressing requirements, which are challenging to
   be accommodated in the IP addressing model.  These scenarios
   highlight issues related to the Internet addressing model and call
   for starting a discussion on a way to re-think/evolve the addressing
   model so to better accommodate different domain-specific
   requirements.

   The issues identified in this document are complemented and deepened
   by a detailed gap analysis in a separate companion document
   [GAP_ANALYSIS].

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-jia-intarea-scenarios-problems-addressing-01'/>
   <format target='https://www.ietf.org/archive/id/draft-jia-intarea-scenarios-problems-addressing-01.txt' type='TXT'/>
</reference>


<reference anchor='I-D.jia-flex-ip-address-structure'>
   <front>
      <title>Flexible IP: An Adaptable IP Address Structure</title>
      <author fullname='Yihao Jia'>
	 <organization>Huawei Technologies Co., Ltd</organization>
      </author>
      <author fullname='Zhe Chen'>
	 <organization>Huawei Technologies Co., Ltd</organization>
      </author>
      <author fullname='Sheng Jiang'>
	 <organization>Huawei Technologies Co., Ltd</organization>
      </author>
      <date day='31' month='October' year='2020'/>
      <abstract>
	 <t>   Along as the popularization and adoption of IP in emerging scenarios,
   challenges emerge as well due to the ossified address structure.  To
   enable TCP/IP in networks that previously using exclusive protocol, a
   flexible address structure would be far more preferred for their
   particular properties
   [draft-jia-scenarios-flexible-address-structure].

   This document describes a flexible address structure -- Flexible IP
   (FlexIP) acting on limited domains [RFC8799].  FlexIP is expected to
   proactively adapt scenarios under flexible address structure.
   Meanwhile, FlexIP still benefit from global reachability based on the
   IPv6 interoperability.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-jia-flex-ip-address-structure-00'/>
   <format target='https://www.ietf.org/archive/id/draft-jia-flex-ip-address-structure-00.txt' type='TXT'/>
</reference>


<reference anchor='I-D.king-irtf-semantic-routing-survey'>
   <front>
      <title>A Survey of Semantic Internet Routing Techniques</title>
      <author fullname='Daniel King'>
	 <organization>Lancaster University</organization>
      </author>
      <author fullname='Adrian Farrel'>
	 <organization>Old Dog Consulting</organization>
      </author>
      <date day='28' month='June' year='2021'/>
      <abstract>
	 <t>   The Internet Protocol (IP) has become the global standard in any
   computer network, independent of the connectivity to the Internet.
   Generally, an IP address is used to identify an interface on a
   network device.  Routing protocols are also required and developed
   based on the assumption that a destination address has this semantic
   with routing decisions made on addresses and additional fields in the
   packet headers.

   Over time, routing decisions were enhanced to route packets according
   to additional information carried within the packets and dependent on
   policy coded in, configured at, or signaled to the routers.  Many
   proposals have been made to add semantics to IP addresses.  The
   intent is usually to facilitate routing decisions based solely on the
   address and without the need to find and process information carried
   in other fields within the packets.

   This document is presented as a survey to support the study and
   further research into clarifying and understanding the issues.  It
   does not pass comment on the advisability or practicality of any of
   the proposals and does not define any technical solutions

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-king-irtf-semantic-routing-survey-02'/>
   <format target='https://www.ietf.org/archive/id/draft-king-irtf-semantic-routing-survey-02.txt' type='TXT'/>
</reference>


<reference anchor='I-D.king-irtf-challenges-in-routing'>
   <front>
      <title>Challenges for the Internet Routing Infrastructure Introduced by Changes in Address Semantics</title>
      <author fullname='Daniel King'>
	 <organization>Lancaster University</organization>
      </author>
      <author fullname='Adrian Farrel'>
	 <organization>Old Dog Consulting</organization>
      </author>
      <date day='14' month='June' year='2021'/>
      <abstract>
	 <t>   Historically, the meaning of an IP address has been to identify an
   interface on a network device.  Routing protocols were developed
   based on the assumption that a destination address had this semantic.

   Over time, routing decisions were enhanced to route packets according
   to additional information carried within the packets and dependent on
   policy coded in, configured at, or signaled to the routers.

   Many proposals have been made to add semantics to IP addresses.  The
   intent is usually to facilitate routing decisions based solely on the
   address and without the need to find and process information carried
   in other fields within the packets.

   This document describes the challenges to the existing routing system
   that are introduced by the addition of semantics to IP addresses.  It
   then summarizes the opportunities for research into new or modified
   routing protocols to make use of new address semantics.

   This document is presented as study to support further research into
   clarifying and understanding the issues.  It does not pass comment on
   the advisability or practicality of any of the proposals and does not
   define any technical solutions.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-king-irtf-challenges-in-routing-03'/>
   <format target='https://www.ietf.org/archive/id/draft-king-irtf-challenges-in-routing-03.txt' type='TXT'/>
</reference>


<reference anchor='I-D.draft-farrel-soon'>
   <front>
      <title>A Definition of the Term &quot;Soon&quot; for Use in Discussions with Working Group Chairs and Area Directors</title>
      <author fullname='Adrian Farrel'>
	 <organization>Old Dog Consulting</organization>
      </author>
      <date day='8' month='March' year='2021'/>
      <abstract>
	 <t>   Many discussions with IETF Area Directors and Working Group Chairs
   utilize the word &quot;Soon&quot; to qualify a commitment to action.  This
   document attempts to provide a definition of that term so that common
   expectations may be realistically set.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-farrel-soon-07'/>
   <format target='https://www.ietf.org/archive/id/draft-farrel-soon-07.txt' type='TXT'/>
</reference>


<reference anchor="Haoyu" >
  <front>
    <title>Adaptive Addresses for Next Generation IP Protocol in Hierarchical Networks</title>
    <author initials="H." surname="Song" fullname="Haoyu Song">
      <organization></organization>
    </author>
    <author initials="Z." surname="Zhang" fullname="Zhaobo Zhang">
      <organization></organization>
    </author>
    <author initials="Y." surname="Qu" fullname="Yingzhen Qu">
      <organization></organization>
    </author>
    <author initials="J." surname="Guichard" fullname="James Guichard">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="IEEE" value="2020 IEEE 28th International Conference on Network Protocols (ICNP)"/>
</reference>
<reference anchor="CiscoNAT" target="http://staff.ustc.edu.cn/~james/cisco/nat/emios_wp.htm">
  <front>
    <title>Enabling Enterprise Multihoming with Cisco IOS Network Address Translation (NAT)</title>
    <author initials="P." surname="Akkiraju" fullname="Praveen Akkiraju">
      <organization></organization>
    </author>
    <author initials="K." surname="Delgadillo" fullname="Kevin Delgadillo">
      <organization></organization>
    </author>
    <author initials="Y." surname="Rekhter" fullname="Yakov Rekhter">
      <organization></organization>
    </author>
    <date year="2000"/>
  </front>
</reference>


    </references>



  </back>

<!-- ##markdown-source:
H4sIADif7GAAA+19bXMbSZLed0bwP7S5ETYZAkAAJDWSznNhjUYzo/OMVkdq
5vbs9V00gQbRK6Ab290gxR3J4b/hv+df4nzyraoaoKTZXX+zdjUigerqesnM
ypcns4bD4eHBrJ6X1c2zbNsthk8ODw4PurJbFc+y77bVrCvrKl9lz+fzpmhb
apYdf/f8JFvUTVZWXdFURddmd2W3zF5V82JT0H+qLntddHd1884ey642+axo
s+NXr14/vzo5PMivr5vi9lm2yIdllbeHB/N6VuVreue8yRfdsJi9K5qOvuvy
psiHCx/IMKceh/7m4Xh8eHBHQ3/1+u3zy5fPaS55V9zUzf0zGt6ixmTaLq/m
/56v6oq6vy/oZZvyWfbfu3o2yNq66Zpi0dJP92v5YVav1zSF9n/g2XzbLevm
2eFBlg3xH/5TVu2z7O0oe8mD9I9l/G/rollhyr1v6+YGC9ptm+KuKLO3xWxZ
1av6pqRl+fnqubcr1nm5epZ1XfFfZu1okW9H8wIjwWyadd6VtwUP5/K7F5PH
00n089R/fjp5Yj+fTR6Hn8dn3v7sbPzYf3564T+fT56e+c/Tp97+/PH4K/v5
8fSJv+vxxcXYfn4y/epp+Pmp9/nkYhrafHVxHn5+Gto/fRLaP306jn6W9q+G
347+VOZOEu2sqPKmrNvhpqmvV8W6ZdIQGk2eWKyK98NyY18P267ZzrAP3uod
PTIsG6L+lpa/6srZsKm3HT5tt81tcb+n5WyZr1ZFdVO0NCRr7u2Eihd50xSr
YVvXFX/zQ17fb5/JViuLPZ/nG+ypcQpRA1jrdfG+y74vqqLJQffZqzfZm6Ym
kq1XRH7ZDyV90cyW5YxYU3mtlX7boiGSArU8M5p69fLly2fZdDwd84/Z9Alz
K1goV/Z+UVeLoimqWZHR24x77ZVg3Bev35xIhxFP4E/gC+UAnmV2VVc3Dzb5
b8u8vq7xzyca/Sst6F+WRZX989bbZP1G/0T/bbPvtyXtRzPHty/Kdla/fv42
XeeXVX69gvR6iXlvmrItsp+2q65c1mt8zBKMH81e/f5qR369bfKqXcleHFPn
uhREijdF9yxbdt3m2ekpSZrFYrRtu9momG9Hs+r0f/4J4zudoeNTWu3TYk0k
++93m9GyW0sfcxJY2B1Isi9Z3jdNflvQqjx/965s8j9tH2z4X4tbIpVvi9VN
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
u09SC3otbIGMO/u9Qcb0oGRPEGumofAlho6cPDoA11IW9PBAUC1/+IM4qGYa
RXNMjZ8lGmwRr1ar67Bw/Wqfszfg2SIbYHr2lI7+6chS1+LdoWG+HH03noyn
4zMNjnIVJ5yBsqov9dIEC2HI0grBBMqO7GYctOIGgogIPN3xKrS7x6pUW5UC
Kj/t6RFswaBkyQts1INqJdSPFf1yw+CcxXalSbEsPoELuHfLPRi3YjEDOpRW
CuFxXF39dGLVW2zn5oLZ4m6kAmAQ+uza7h8tmnO3lhq5HCCub+C/BFxJIbKs
PkQKCefUmCOWs4kRBtdC2nUU3prXRsYg3u0GcJH3HLHzssdG7wjdNMF5Tjyk
9apfRSWUB8k55lJH4fpDAG+YHhk4YbDhdiTVG0NpPQ+9sctXEJT35sESaTLa
+2qvNE07rQ6PL1OCBlIEmJaRQ0/iNy1bC2D6KcSQ7Mic2VdF2Zcy2EecXzEX
i0m+9gW2RRqkR7Aeg6Gxpl7vqmTeEysAXAQoOW4GhoDWUu2ed7pYIVyFZG2O
WLAtYIld+h1zg6LxGZcP2KtgHQzQGeJU/6Jo1bphjTjqAqOX+aSXcfDCWV1t
TCM9+wMGwbmCTbqAwFWEacCaVXP1byRl+90Z4jZDPzYYm5s4VEaf+aOtMosh
7i10EFqlfy4nn2p1OZV/p9rq8mxfq+lZ2ud0p9Xlee+tF/veOO21mu5t9eHD
dDS1FqPp6ekf/4hzIGqFPx8+xEt0ejoa/fGPyXpl0lf0utNT/PePf3ygF+qD
P/V++oOa8IAm1A0a0tAwsMmDK3F58bX/0fWIG0684eSCPxrZz3HDy8fW21e6
UmFfLifj0HBqDae7DbG7D9FH3C59tVLbNGmnH55lD/bY76+3PE932l0+2dfQ
KDLqL5BhmPXo3LZ4JH/pE6GYi7hhstf2QUI00slDpJP1qWdfE2nxCQoTGpOf
5MV7KAxTOGMaG8nPf/xjbwknztKXT76O/mAhEwrzdpMpdXRhPZ7jm93du5yE
rY4+3m3o7aTh5eTsgYZRJ/hY232+4c6rlerOew3144tkm3f+JB8Htb1f2leL
tfSFtSpZRx9FWtPzv+55+uNHjq1zMDUg85MmXiCUVbuLKGTOlVBYiVM4YhyP
je61Yih59n0vgezy/Xstmd8mLnqGbDAkVpUzMalpfPMbc8xzboskKWoSXetG
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
N2DhAAA=

-->

</rfc>

